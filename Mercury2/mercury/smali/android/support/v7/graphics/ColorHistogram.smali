.class final Landroid/support/v7/graphics/ColorHistogram;
.super Ljava/lang/Object;


# instance fields
.field private final mColorCounts:[I

.field private final mColors:[I

.field private final mNumberColors:I


# direct methods
.method constructor <init>([I)V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    invoke-static {p1}, Ljava/util/Arrays;->sort([I)V

    invoke-static {p1}, Landroid/support/v7/graphics/ColorHistogram;->countDistinctColors([I)I

    move-result v0

    iput v0, p0, Landroid/support/v7/graphics/ColorHistogram;->mNumberColors:I

    iget v0, p0, Landroid/support/v7/graphics/ColorHistogram;->mNumberColors:I

    new-array v0, v0, [I

    iput-object v0, p0, Landroid/support/v7/graphics/ColorHistogram;->mColors:[I

    iget v0, p0, Landroid/support/v7/graphics/ColorHistogram;->mNumberColors:I

    new-array v0, v0, [I

    iput-object v0, p0, Landroid/support/v7/graphics/ColorHistogram;->mColorCounts:[I

    invoke-direct {p0, p1}, Landroid/support/v7/graphics/ColorHistogram;->countFrequencies([I)V

    return-void
.end method

.method private static countDistinctColors([I)I
    .locals 4

    const/4 v0, 0x1

    array-length v1, p0

    const/4 v2, 0x2

    if-ge v1, v2, :cond_1

    array-length v2, p0

    :cond_0
    return v2

    :cond_1
    const/4 v1, 0x0

    aget v1, p0, v1

    move v2, v0

    :goto_0
    array-length v3, p0

    if-ge v0, v3, :cond_0

    aget v3, p0, v0

    if-eq v3, v1, :cond_2

    aget v1, p0, v0

    add-int/lit8 v2, v2, 0x1

    :cond_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_0
.end method

.method private countFrequencies([I)V
    .locals 6

    const/4 v2, 0x0

    const/4 v1, 0x1

    array-length v0, p1

    if-nez v0, :cond_1

    :cond_0
    return-void

    :cond_1
    aget v0, p1, v2

    iget-object v3, p0, Landroid/support/v7/graphics/ColorHistogram;->mColors:[I

    aput v0, v3, v2

    iget-object v3, p0, Landroid/support/v7/graphics/ColorHistogram;->mColorCounts:[I

    aput v1, v3, v2

    array-length v3, p1

    if-eq v3, v1, :cond_0

    move v3, v2

    move v2, v0

    move v0, v1

    :goto_0
    array-length v4, p1

    if-ge v0, v4, :cond_0

    aget v4, p1, v0

    if-ne v4, v2, :cond_2

    iget-object v4, p0, Landroid/support/v7/graphics/ColorHistogram;->mColorCounts:[I

    aget v5, v4, v3

    add-int/lit8 v5, v5, 0x1

    aput v5, v4, v3

    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_2
    aget v2, p1, v0

    add-int/lit8 v3, v3, 0x1

    iget-object v4, p0, Landroid/support/v7/graphics/ColorHistogram;->mColors:[I

    aput v2, v4, v3

    iget-object v4, p0, Landroid/support/v7/graphics/ColorHistogram;->mColorCounts:[I

    aput v1, v4, v3

    goto :goto_1
.end method


# virtual methods
.method getColorCounts()[I
    .locals 1

    iget-object v0, p0, Landroid/support/v7/graphics/ColorHistogram;->mColorCounts:[I

    return-object v0
.end method

.method getColors()[I
    .locals 1

    iget-object v0, p0, Landroid/support/v7/graphics/ColorHistogram;->mColors:[I

    return-object v0
.end method

.method getNumberOfColors()I
    .locals 1

    iget v0, p0, Landroid/support/v7/graphics/ColorHistogram;->mNumberColors:I

    return v0
.end method

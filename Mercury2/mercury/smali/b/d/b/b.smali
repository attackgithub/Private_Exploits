.class public final Lb/d/b/b;
.super Ljava/lang/Object;

# interfaces
.implements Lb/i;
.implements Ljava/lang/Runnable;


# static fields
.field static final d:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater",
            "<",
            "Lb/d/b/b;",
            ">;"
        }
    .end annotation
.end field


# instance fields
.field final a:Lb/h/b;

.field final b:Lb/c/a;

.field volatile c:I


# direct methods
.method static constructor <clinit>()V
    .locals 2

    const-class v0, Lb/d/b/b;

    const-string v1, "c"

    invoke-static {v0, v1}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->newUpdater(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    move-result-object v0

    sput-object v0, Lb/d/b/b;->d:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    return-void
.end method

.method public constructor <init>(Lb/c/a;)V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p1, p0, Lb/d/b/b;->b:Lb/c/a;

    new-instance v0, Lb/h/b;

    invoke-direct {v0}, Lb/h/b;-><init>()V

    iput-object v0, p0, Lb/d/b/b;->a:Lb/h/b;

    return-void
.end method


# virtual methods
.method public a(Lb/h/b;)V
    .locals 2

    iget-object v0, p0, Lb/d/b/b;->a:Lb/h/b;

    new-instance v1, Lb/d/b/c;

    invoke-direct {v1, p0, p1}, Lb/d/b/c;-><init>(Lb/i;Lb/h/b;)V

    invoke-virtual {v0, v1}, Lb/h/b;->a(Lb/i;)V

    return-void
.end method

.method public a(Lb/i;)V
    .locals 1

    iget-object v0, p0, Lb/d/b/b;->a:Lb/h/b;

    invoke-virtual {v0, p1}, Lb/h/b;->a(Lb/i;)V

    return-void
.end method

.method public b()Z
    .locals 1

    iget-object v0, p0, Lb/d/b/b;->a:Lb/h/b;

    invoke-virtual {v0}, Lb/h/b;->b()Z

    move-result v0

    return v0
.end method

.method public c_()V
    .locals 3

    sget-object v0, Lb/d/b/b;->d:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    const/4 v1, 0x0

    const/4 v2, 0x1

    invoke-virtual {v0, p0, v1, v2}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->compareAndSet(Ljava/lang/Object;II)Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lb/d/b/b;->a:Lb/h/b;

    invoke-virtual {v0}, Lb/h/b;->c_()V

    :cond_0
    return-void
.end method

.method public run()V
    .locals 3

    :try_start_0
    iget-object v0, p0, Lb/d/b/b;->b:Lb/c/a;

    invoke-interface {v0}, Lb/c/a;->e()V
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-virtual {p0}, Lb/d/b/b;->c_()V

    :goto_0
    return-void

    :catch_0
    move-exception v0

    :try_start_1
    instance-of v1, v0, Lb/b/i;

    if-eqz v1, :cond_0

    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Exception thrown on Scheduler.Worker thread. Add `onError` handling."

    invoke-direct {v1, v2, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    move-object v0, v1

    :goto_1
    invoke-static {}, Lb/f/d;->a()Lb/f/d;

    move-result-object v1

    invoke-virtual {v1}, Lb/f/d;->b()Lb/f/a;

    move-result-object v1

    invoke-virtual {v1, v0}, Lb/f/a;->a(Ljava/lang/Throwable;)V

    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Thread;->getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;

    move-result-object v2

    invoke-interface {v2, v1, v0}, Ljava/lang/Thread$UncaughtExceptionHandler;->uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-virtual {p0}, Lb/d/b/b;->c_()V

    goto :goto_0

    :cond_0
    :try_start_2
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Fatal Exception thrown on Scheduler.Worker thread."

    invoke-direct {v1, v2, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-object v0, v1

    goto :goto_1

    :catchall_0
    move-exception v0

    invoke-virtual {p0}, Lb/d/b/b;->c_()V

    throw v0
.end method

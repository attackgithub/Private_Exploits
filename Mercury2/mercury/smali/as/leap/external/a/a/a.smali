.class public Las/leap/external/a/a/a;
.super Ljava/lang/Object;

# interfaces
.implements Las/leap/external/a/a/d;


# static fields
.field private static final a:Ljava/security/SecureRandom;


# instance fields
.field private b:I


# direct methods
.method static constructor <clinit>()V
    .locals 1

    new-instance v0, Ljava/security/SecureRandom;

    invoke-direct {v0}, Ljava/security/SecureRandom;-><init>()V

    sput-object v0, Las/leap/external/a/a/a;->a:Ljava/security/SecureRandom;

    return-void
.end method

.method public constructor <init>()V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/16 v0, 0x2710

    iput v0, p0, Las/leap/external/a/a/a;->b:I

    return-void
.end method

.method private static a([B)I
    .locals 4

    const/4 v1, 0x0

    array-length v0, p0

    if-lez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    const-string v2, "Data must be at least one byte long to read version number."

    new-array v3, v1, [Ljava/lang/Object;

    invoke-static {v0, v2, v3}, Lcg;->a(ZLjava/lang/String;[Ljava/lang/Object;)V

    aget-byte v0, p0, v1

    return v0

    :cond_0
    move v0, v1

    goto :goto_0
.end method

.method static a([B[B)Z
    .locals 5

    const/4 v1, 0x0

    array-length v0, p0

    array-length v2, p1

    if-eq v0, v2, :cond_0

    :goto_0
    return v1

    :cond_0
    const/4 v0, 0x1

    move v2, v0

    move v0, v1

    :goto_1
    array-length v3, p0

    if-ge v0, v3, :cond_2

    aget-byte v3, p0, v0

    aget-byte v4, p1, v0

    if-eq v3, v4, :cond_1

    move v2, v1

    :cond_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_2
    move v1, v2

    goto :goto_0
.end method

.method static a(I)[B
    .locals 2

    new-array v0, p0, [B

    sget-object v1, Las/leap/external/a/a/a;->a:Ljava/security/SecureRandom;

    invoke-virtual {v1, v0}, Ljava/security/SecureRandom;->nextBytes([B)V

    return-object v0
.end method

.method private a(Lcd;Ljavax/crypto/SecretKey;Ljavax/crypto/SecretKey;)[B
    .locals 4

    :try_start_0
    const-string v0, "HmacSHA256"

    invoke-static {v0}, Ljavax/crypto/Mac;->getInstance(Ljava/lang/String;)Ljavax/crypto/Mac;

    move-result-object v0

    invoke-virtual {v0, p3}, Ljavax/crypto/Mac;->init(Ljava/security/Key;)V

    invoke-virtual {p1}, Lcd;->b()[B

    move-result-object v1

    invoke-virtual {v0, v1}, Ljavax/crypto/Mac;->doFinal([B)[B

    move-result-object v0

    invoke-virtual {p1}, Lcd;->g()[B

    move-result-object v1

    invoke-static {v0, v1}, Las/leap/external/a/a/a;->a([B[B)Z

    move-result v0

    if-nez v0, :cond_0

    new-instance v0, Las/leap/external/a/a/c;

    const-string v1, "Incorrect HMAC value."

    invoke-direct {v0, v1}, Las/leap/external/a/a/c;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catch Ljava/security/InvalidKeyException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/security/GeneralSecurityException; {:try_start_0 .. :try_end_0} :catch_1

    :catch_0
    move-exception v0

    new-instance v1, Las/leap/external/a/a/b;

    const-string v2, "Caught InvalidKeyException. Do you have unlimited strength jurisdiction files installed?"

    invoke-direct {v1, v2, v0}, Las/leap/external/a/a/b;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1

    :cond_0
    :try_start_1
    const-string v0, "AES/CBC/PKCS7Padding"

    invoke-static {v0}, Ljavax/crypto/Cipher;->getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;

    move-result-object v0

    const/4 v1, 0x2

    new-instance v2, Ljavax/crypto/spec/IvParameterSpec;

    invoke-virtual {p1}, Lcd;->e()[B

    move-result-object v3

    invoke-direct {v2, v3}, Ljavax/crypto/spec/IvParameterSpec;-><init>([B)V

    invoke-virtual {v0, v1, p2, v2}, Ljavax/crypto/Cipher;->init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V

    invoke-virtual {p1}, Lcd;->f()[B

    move-result-object v1

    invoke-virtual {v0, v1}, Ljavax/crypto/Cipher;->doFinal([B)[B
    :try_end_1
    .catch Ljava/security/InvalidKeyException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/security/GeneralSecurityException; {:try_start_1 .. :try_end_1} :catch_1

    move-result-object v0

    return-object v0

    :catch_1
    move-exception v0

    new-instance v1, Las/leap/external/a/a/b;

    const-string v2, "Failed to decrypt message."

    invoke-direct {v1, v2, v0}, Las/leap/external/a/a/b;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method private a(Lce;Ljavax/crypto/SecretKey;Ljavax/crypto/SecretKey;)[B
    .locals 4

    :try_start_0
    const-string v0, "HmacSHA256"

    invoke-static {v0}, Ljavax/crypto/Mac;->getInstance(Ljava/lang/String;)Ljavax/crypto/Mac;

    move-result-object v0

    invoke-virtual {v0, p3}, Ljavax/crypto/Mac;->init(Ljava/security/Key;)V

    invoke-virtual {p1}, Lce;->b()[B

    move-result-object v1

    invoke-virtual {v0, v1}, Ljavax/crypto/Mac;->doFinal([B)[B

    move-result-object v0

    invoke-virtual {p1}, Lce;->g()[B

    move-result-object v1

    invoke-static {v0, v1}, Las/leap/external/a/a/a;->a([B[B)Z

    move-result v0

    if-nez v0, :cond_0

    new-instance v0, Las/leap/external/a/a/c;

    const-string v1, "Incorrect HMAC value."

    invoke-direct {v0, v1}, Las/leap/external/a/a/c;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catch Ljava/security/InvalidKeyException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/security/GeneralSecurityException; {:try_start_0 .. :try_end_0} :catch_1

    :catch_0
    move-exception v0

    new-instance v1, Las/leap/external/a/a/b;

    const-string v2, "Caught InvalidKeyException. Do you have unlimited strength jurisdiction files installed?"

    invoke-direct {v1, v2, v0}, Las/leap/external/a/a/b;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1

    :cond_0
    :try_start_1
    const-string v0, "AES/CBC/PKCS7Padding"

    invoke-static {v0}, Ljavax/crypto/Cipher;->getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;

    move-result-object v0

    const/4 v1, 0x2

    new-instance v2, Ljavax/crypto/spec/IvParameterSpec;

    invoke-virtual {p1}, Lce;->e()[B

    move-result-object v3

    invoke-direct {v2, v3}, Ljavax/crypto/spec/IvParameterSpec;-><init>([B)V

    invoke-virtual {v0, v1, p2, v2}, Ljavax/crypto/Cipher;->init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V

    invoke-virtual {p1}, Lce;->f()[B

    move-result-object v1

    invoke-virtual {v0, v1}, Ljavax/crypto/Cipher;->doFinal([B)[B
    :try_end_1
    .catch Ljava/security/InvalidKeyException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/security/GeneralSecurityException; {:try_start_1 .. :try_end_1} :catch_1

    move-result-object v0

    return-object v0

    :catch_1
    move-exception v0

    new-instance v1, Las/leap/external/a/a/b;

    const-string v2, "Failed to decrypt message."

    invoke-direct {v1, v2, v0}, Las/leap/external/a/a/b;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method private c([B[C)[B
    .locals 3

    :try_start_0
    new-instance v0, Lcd;

    invoke-direct {v0, p1}, Lcd;-><init>([B)V

    invoke-virtual {v0}, Lcd;->h()Z

    move-result v1

    if-nez v1, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Ciphertext was not encrypted with a password."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catch Lcf; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    move-exception v0

    new-instance v1, Las/leap/external/a/a/b;

    const-string v2, "Unable to parse ciphertext."

    invoke-direct {v1, v2, v0}, Las/leap/external/a/a/b;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1

    :cond_0
    :try_start_1
    invoke-virtual {v0}, Lcd;->c()[B

    move-result-object v1

    invoke-virtual {p0, p2, v1}, Las/leap/external/a/a/a;->a([C[B)Ljavax/crypto/SecretKey;

    move-result-object v1

    invoke-virtual {v0}, Lcd;->d()[B

    move-result-object v2

    invoke-virtual {p0, p2, v2}, Las/leap/external/a/a/a;->a([C[B)Ljavax/crypto/SecretKey;

    move-result-object v2

    invoke-direct {p0, v0, v1, v2}, Las/leap/external/a/a/a;->a(Lcd;Ljavax/crypto/SecretKey;Ljavax/crypto/SecretKey;)[B
    :try_end_1
    .catch Lcf; {:try_start_1 .. :try_end_1} :catch_0

    move-result-object v0

    return-object v0
.end method

.method private d([B[C)[B
    .locals 3

    :try_start_0
    new-instance v0, Lce;

    invoke-direct {v0, p1}, Lce;-><init>([B)V

    invoke-virtual {v0}, Lce;->h()Z

    move-result v1

    if-nez v1, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Ciphertext was not encrypted with a password."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catch Lcf; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    move-exception v0

    new-instance v1, Las/leap/external/a/a/b;

    const-string v2, "Unable to parse ciphertext."

    invoke-direct {v1, v2, v0}, Las/leap/external/a/a/b;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1

    :cond_0
    :try_start_1
    invoke-virtual {v0}, Lce;->c()[B

    move-result-object v1

    invoke-virtual {p0, p2, v1}, Las/leap/external/a/a/a;->a([C[B)Ljavax/crypto/SecretKey;

    move-result-object v1

    invoke-virtual {v0}, Lce;->d()[B

    move-result-object v2

    invoke-virtual {p0, p2, v2}, Las/leap/external/a/a/a;->a([C[B)Ljavax/crypto/SecretKey;

    move-result-object v2

    invoke-direct {p0, v0, v1, v2}, Las/leap/external/a/a/a;->a(Lce;Ljavax/crypto/SecretKey;Ljavax/crypto/SecretKey;)[B
    :try_end_1
    .catch Lcf; {:try_start_1 .. :try_end_1} :catch_0

    move-result-object v0

    return-object v0
.end method


# virtual methods
.method public declared-synchronized a()I
    .locals 1

    monitor-enter p0

    :try_start_0
    iget v0, p0, Las/leap/external/a/a/a;->b:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public a([C[B)Ljavax/crypto/SecretKey;
    .locals 6

    const/16 v5, 0x8

    const/4 v1, 0x1

    const/4 v2, 0x0

    const-string v0, "Salt value cannot be null."

    new-array v3, v2, [Ljava/lang/Object;

    invoke-static {p2, v0, v3}, Lcg;->a(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V

    array-length v0, p2

    if-ne v0, v5, :cond_0

    move v0, v1

    :goto_0
    const-string v3, "Salt value must be %d bytes."

    new-array v4, v1, [Ljava/lang/Object;

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v4, v2

    invoke-static {v0, v3, v4}, Lcg;->a(ZLjava/lang/String;[Ljava/lang/Object;)V

    const-string v0, "Password cannot be null."

    new-array v3, v2, [Ljava/lang/Object;

    invoke-static {p1, v0, v3}, Lcg;->a(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V

    array-length v0, p1

    if-lez v0, :cond_1

    move v0, v1

    :goto_1
    const-string v3, "Password cannot be empty."

    new-array v4, v2, [Ljava/lang/Object;

    invoke-static {v0, v3, v4}, Lcg;->a(ZLjava/lang/String;[Ljava/lang/Object;)V

    :try_start_0
    const-string v0, "PBKDF2WithHmacSHA1"

    invoke-static {v0}, Ljavax/crypto/SecretKeyFactory;->getInstance(Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;

    move-result-object v0

    new-instance v3, Ljavax/crypto/spec/PBEKeySpec;

    invoke-virtual {p0}, Las/leap/external/a/a/a;->a()I

    move-result v4

    const/16 v5, 0x100

    invoke-direct {v3, p1, p2, v4, v5}, Ljavax/crypto/spec/PBEKeySpec;-><init>([C[BII)V

    invoke-virtual {v0, v3}, Ljavax/crypto/SecretKeyFactory;->generateSecret(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;

    move-result-object v0

    new-instance v3, Ljavax/crypto/spec/SecretKeySpec;

    invoke-interface {v0}, Ljavax/crypto/SecretKey;->getEncoded()[B

    move-result-object v0

    const-string v4, "AES"

    invoke-direct {v3, v0, v4}, Ljavax/crypto/spec/SecretKeySpec;-><init>([BLjava/lang/String;)V
    :try_end_0
    .catch Ljava/security/GeneralSecurityException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v3

    :cond_0
    move v0, v2

    goto :goto_0

    :cond_1
    move v0, v2

    goto :goto_1

    :catch_0
    move-exception v0

    new-instance v3, Las/leap/external/a/a/b;

    const-string v4, "Failed to generate key from password using %s."

    new-array v1, v1, [Ljava/lang/Object;

    const-string v5, "PBKDF2WithHmacSHA1"

    aput-object v5, v1, v2

    invoke-static {v4, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v3, v1, v0}, Las/leap/external/a/a/b;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v3
.end method

.method a([BLas/leap/external/a/a/e;Las/leap/external/a/a/e;[B)[B
    .locals 4

    :try_start_0
    const-string v0, "AES/CBC/PKCS7Padding"

    invoke-static {v0}, Ljavax/crypto/Cipher;->getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;

    move-result-object v0

    const/4 v1, 0x1

    invoke-virtual {p2}, Las/leap/external/a/a/e;->a()Ljavax/crypto/SecretKey;

    move-result-object v2

    new-instance v3, Ljavax/crypto/spec/IvParameterSpec;

    invoke-direct {v3, p4}, Ljavax/crypto/spec/IvParameterSpec;-><init>([B)V

    invoke-virtual {v0, v1, v2, v3}, Ljavax/crypto/Cipher;->init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V

    invoke-virtual {v0, p1}, Ljavax/crypto/Cipher;->doFinal([B)[B

    move-result-object v0

    new-instance v1, Lce;

    invoke-virtual {p2}, Las/leap/external/a/a/e;->b()[B

    move-result-object v2

    invoke-virtual {p3}, Las/leap/external/a/a/e;->b()[B

    move-result-object v3

    invoke-direct {v1, v2, v3, p4, v0}, Lce;-><init>([B[B[B[B)V

    const-string v0, "HmacSHA256"

    invoke-static {v0}, Ljavax/crypto/Mac;->getInstance(Ljava/lang/String;)Ljavax/crypto/Mac;

    move-result-object v0

    invoke-virtual {p3}, Las/leap/external/a/a/e;->a()Ljavax/crypto/SecretKey;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljavax/crypto/Mac;->init(Ljava/security/Key;)V

    invoke-virtual {v1}, Lce;->b()[B

    move-result-object v2

    invoke-virtual {v0, v2}, Ljavax/crypto/Mac;->doFinal([B)[B

    move-result-object v0

    invoke-virtual {v1, v0}, Lce;->a([B)V

    invoke-virtual {v1}, Lce;->a()[B
    :try_end_0
    .catch Ljava/security/InvalidKeyException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/security/GeneralSecurityException; {:try_start_0 .. :try_end_0} :catch_1

    move-result-object v0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Las/leap/external/a/a/b;

    const-string v2, "Caught InvalidKeyException. Do you have unlimited strength jurisdiction files installed?"

    invoke-direct {v1, v2, v0}, Las/leap/external/a/a/b;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1

    :catch_1
    move-exception v0

    new-instance v1, Las/leap/external/a/a/b;

    const-string v2, "Failed to generate ciphertext."

    invoke-direct {v1, v2, v0}, Las/leap/external/a/a/b;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method public a([B[C)[B
    .locals 5

    const/4 v1, 0x1

    const/4 v2, 0x0

    const-string v0, "Ciphertext cannot be null."

    new-array v3, v2, [Ljava/lang/Object;

    invoke-static {p1, v0, v3}, Lcg;->a(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V

    const-string v0, "Password cannot be null."

    new-array v3, v2, [Ljava/lang/Object;

    invoke-static {p2, v0, v3}, Lcg;->a(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V

    array-length v0, p2

    if-lez v0, :cond_0

    move v0, v1

    :goto_0
    const-string v3, "Password cannot be empty."

    new-array v4, v2, [Ljava/lang/Object;

    invoke-static {v0, v3, v4}, Lcg;->a(ZLjava/lang/String;[Ljava/lang/Object;)V

    invoke-static {p1}, Las/leap/external/a/a/a;->a([B)I

    move-result v0

    packed-switch v0, :pswitch_data_0

    new-instance v3, Las/leap/external/a/a/b;

    const-string v4, "Unrecognised version number: %d."

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    aput-object v0, v1, v2

    invoke-static {v4, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {v3, v0}, Las/leap/external/a/a/b;-><init>(Ljava/lang/String;)V

    throw v3

    :cond_0
    move v0, v2

    goto :goto_0

    :pswitch_0
    invoke-direct {p0, p1, p2}, Las/leap/external/a/a/a;->c([B[C)[B

    move-result-object v0

    :goto_1
    return-object v0

    :pswitch_1
    invoke-direct {p0, p1, p2}, Las/leap/external/a/a/a;->d([B[C)[B

    move-result-object v0

    goto :goto_1

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public a([B[C[B[B[B)[B
    .locals 4

    const/16 v3, 0x8

    const/4 v1, 0x0

    const-string v0, "Plaintext cannot be null."

    new-array v2, v1, [Ljava/lang/Object;

    invoke-static {p1, v0, v2}, Lcg;->a(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V

    const-string v0, "Password cannot be null."

    new-array v2, v1, [Ljava/lang/Object;

    invoke-static {p2, v0, v2}, Lcg;->a(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V

    array-length v0, p2

    if-lez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    const-string v2, "Password cannot be empty."

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0, v2, v1}, Lcg;->a(ZLjava/lang/String;[Ljava/lang/Object;)V

    const-string v0, "Encryption salt"

    invoke-static {p3, v3, v0}, Lcg;->a([BILjava/lang/String;)V

    const-string v0, "HMAC salt"

    invoke-static {p4, v3, v0}, Lcg;->a([BILjava/lang/String;)V

    const/16 v0, 0x10

    const-string v1, "IV"

    invoke-static {p5, v0, v1}, Lcg;->a([BILjava/lang/String;)V

    invoke-virtual {p0, p2, p3}, Las/leap/external/a/a/a;->a([C[B)Ljavax/crypto/SecretKey;

    move-result-object v0

    invoke-virtual {p0, p2, p4}, Las/leap/external/a/a/a;->a([C[B)Ljavax/crypto/SecretKey;

    move-result-object v1

    new-instance v2, Las/leap/external/a/a/e;

    invoke-direct {v2, v0, p3}, Las/leap/external/a/a/e;-><init>(Ljavax/crypto/SecretKey;[B)V

    new-instance v0, Las/leap/external/a/a/e;

    invoke-direct {v0, v1, p4}, Las/leap/external/a/a/e;-><init>(Ljavax/crypto/SecretKey;[B)V

    invoke-virtual {p0, p1, v2, v0, p5}, Las/leap/external/a/a/a;->a([BLas/leap/external/a/a/e;Las/leap/external/a/a/e;[B)[B

    move-result-object v0

    return-object v0

    :cond_0
    move v0, v1

    goto :goto_0
.end method

.method public b([B[C)[B
    .locals 6

    const/16 v4, 0x8

    const/4 v1, 0x0

    const-string v0, "Plaintext cannot be null."

    new-array v2, v1, [Ljava/lang/Object;

    invoke-static {p1, v0, v2}, Lcg;->a(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V

    const-string v0, "Password cannot be null."

    new-array v2, v1, [Ljava/lang/Object;

    invoke-static {p2, v0, v2}, Lcg;->a(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V

    array-length v0, p2

    if-lez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    const-string v2, "Password cannot be empty."

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0, v2, v1}, Lcg;->a(ZLjava/lang/String;[Ljava/lang/Object;)V

    invoke-static {v4}, Las/leap/external/a/a/a;->a(I)[B

    move-result-object v3

    invoke-static {v4}, Las/leap/external/a/a/a;->a(I)[B

    move-result-object v4

    const/16 v0, 0x10

    invoke-static {v0}, Las/leap/external/a/a/a;->a(I)[B

    move-result-object v5

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    invoke-virtual/range {v0 .. v5}, Las/leap/external/a/a/a;->a([B[C[B[B[B)[B

    move-result-object v0

    return-object v0

    :cond_0
    move v0, v1

    goto :goto_0
.end method

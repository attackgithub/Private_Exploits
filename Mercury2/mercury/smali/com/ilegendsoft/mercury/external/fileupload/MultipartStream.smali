.class public Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;
.super Ljava/lang/Object;


# static fields
.field protected static final BOUNDARY_PREFIX:[B

.field public static final CR:B = 0xdt

.field public static final DASH:B = 0x2dt

.field protected static final DEFAULT_BUFSIZE:I = 0x1000

.field protected static final FIELD_SEPARATOR:[B

.field public static final HEADER_PART_SIZE_MAX:I = 0x2800

.field protected static final HEADER_SEPARATOR:[B

.field public static final LF:B = 0xat

.field protected static final STREAM_TERMINATOR:[B


# instance fields
.field private boundary:[B

.field private boundaryLength:I

.field private final bufSize:I

.field private final buffer:[B

.field private head:I

.field private headerEncoding:Ljava/lang/String;

.field private final input:Ljava/io/InputStream;

.field private keepRegion:I

.field private final notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

.field private tail:I


# direct methods
.method static constructor <clinit>()V
    .locals 3

    const/4 v2, 0x4

    const/4 v1, 0x2

    new-array v0, v2, [B

    fill-array-data v0, :array_0

    sput-object v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->HEADER_SEPARATOR:[B

    new-array v0, v1, [B

    fill-array-data v0, :array_1

    sput-object v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->FIELD_SEPARATOR:[B

    new-array v0, v1, [B

    fill-array-data v0, :array_2

    sput-object v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->STREAM_TERMINATOR:[B

    new-array v0, v2, [B

    fill-array-data v0, :array_3

    sput-object v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->BOUNDARY_PREFIX:[B

    return-void

    nop

    :array_0
    .array-data 1
        0xdt
        0xat
        0xdt
        0xat
    .end array-data

    :array_1
    .array-data 1
        0xdt
        0xat
    .end array-data

    nop

    :array_2
    .array-data 1
        0x2dt
        0x2dt
    .end array-data

    nop

    :array_3
    .array-data 1
        0xdt
        0xat
        0x2dt
        0x2dt
    .end array-data
.end method

.method public constructor <init>()V
    .locals 1
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    const/4 v0, 0x0

    invoke-direct {p0, v0, v0, v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;-><init>(Ljava/io/InputStream;[BLcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;)V

    return-void
.end method

.method public constructor <init>(Ljava/io/InputStream;[B)V
    .locals 2
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    const/16 v0, 0x1000

    const/4 v1, 0x0

    invoke-direct {p0, p1, p2, v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;-><init>(Ljava/io/InputStream;[BILcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;)V

    return-void
.end method

.method public constructor <init>(Ljava/io/InputStream;[BI)V
    .locals 1
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, p3, v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;-><init>(Ljava/io/InputStream;[BILcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;)V

    return-void
.end method

.method constructor <init>(Ljava/io/InputStream;[BILcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;)V
    .locals 4

    const/4 v3, 0x0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->input:Ljava/io/InputStream;

    iput p3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->bufSize:I

    new-array v0, p3, [B

    iput-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->buffer:[B

    iput-object p4, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

    array-length v0, p2

    sget-object v1, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->BOUNDARY_PREFIX:[B

    array-length v1, v1

    add-int/2addr v0, v1

    new-array v0, v0, [B

    iput-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    array-length v0, p2

    sget-object v1, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->BOUNDARY_PREFIX:[B

    array-length v1, v1

    add-int/2addr v0, v1

    iput v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundaryLength:I

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    array-length v0, v0

    iput v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->keepRegion:I

    sget-object v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->BOUNDARY_PREFIX:[B

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    sget-object v2, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->BOUNDARY_PREFIX:[B

    array-length v2, v2

    invoke-static {v0, v3, v1, v3, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    sget-object v1, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->BOUNDARY_PREFIX:[B

    array-length v1, v1

    array-length v2, p2

    invoke-static {p2, v3, v0, v1, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    iput v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I

    iput v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I

    return-void
.end method

.method constructor <init>(Ljava/io/InputStream;[BLcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;)V
    .locals 1

    const/16 v0, 0x1000

    invoke-direct {p0, p1, p2, v0, p3}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;-><init>(Ljava/io/InputStream;[BILcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;)V

    return-void
.end method

.method static synthetic access$0(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I
    .locals 1

    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I

    return v0
.end method

.method static synthetic access$1(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I
    .locals 1

    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I

    return v0
.end method

.method static synthetic access$2(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I
    .locals 1

    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->keepRegion:I

    return v0
.end method

.method static synthetic access$3(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)[B
    .locals 1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->buffer:[B

    return-object v0
.end method

.method static synthetic access$4(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;I)V
    .locals 0

    iput p1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I

    return-void
.end method

.method static synthetic access$5(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)Ljava/io/InputStream;
    .locals 1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->input:Ljava/io/InputStream;

    return-object v0
.end method

.method static synthetic access$6(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;I)V
    .locals 0

    iput p1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I

    return-void
.end method

.method static synthetic access$7(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I
    .locals 1

    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->bufSize:I

    return v0
.end method

.method static synthetic access$8(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;
    .locals 1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

    return-object v0
.end method

.method public static arrayequals([B[BI)Z
    .locals 4

    const/4 v0, 0x0

    move v1, v0

    :goto_0
    if-lt v1, p2, :cond_1

    const/4 v0, 0x1

    :cond_0
    return v0

    :cond_1
    aget-byte v2, p0, v1

    aget-byte v3, p1, v1

    if-ne v2, v3, :cond_0

    add-int/lit8 v1, v1, 0x1

    goto :goto_0
.end method


# virtual methods
.method public discardBodyData()I
    .locals 1

    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->readBodyData(Ljava/io/OutputStream;)I

    move-result v0

    return v0
.end method

.method protected findByte(BI)I
    .locals 1

    :goto_0
    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I

    if-lt p2, v0, :cond_1

    const/4 p2, -0x1

    :cond_0
    return p2

    :cond_1
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->buffer:[B

    aget-byte v0, v0, p2

    if-eq v0, p1, :cond_0

    add-int/lit8 p2, p2, 0x1

    goto :goto_0
.end method

.method protected findSeparator()I
    .locals 7

    const/4 v2, 0x0

    const/4 v1, -0x1

    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I

    iget v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundaryLength:I

    sub-int v4, v0, v3

    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I

    move v3, v0

    move v0, v2

    :goto_0
    if-gt v3, v4, :cond_0

    iget v5, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundaryLength:I

    if-ne v0, v5, :cond_1

    :cond_0
    iget v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundaryLength:I

    if-ne v0, v2, :cond_6

    add-int/lit8 v0, v3, -0x1

    :goto_1
    return v0

    :cond_1
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    aget-byte v0, v0, v2

    invoke-virtual {p0, v0, v3}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->findByte(BI)I

    move-result v3

    if-eq v3, v1, :cond_2

    if-le v3, v4, :cond_3

    :cond_2
    move v0, v1

    goto :goto_1

    :cond_3
    const/4 v0, 0x1

    :goto_2
    iget v5, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundaryLength:I

    if-lt v0, v5, :cond_5

    :cond_4
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :cond_5
    iget-object v5, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->buffer:[B

    add-int v6, v3, v0

    aget-byte v5, v5, v6

    iget-object v6, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    aget-byte v6, v6, v0

    if-ne v5, v6, :cond_4

    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    :cond_6
    move v0, v1

    goto :goto_1
.end method

.method public getHeaderEncoding()Ljava/lang/String;
    .locals 1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->headerEncoding:Ljava/lang/String;

    return-object v0
.end method

.method newInputStream()Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;
    .locals 1

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;

    invoke-direct {v0, p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;-><init>(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)V

    return-object v0
.end method

.method public readBodyData(Ljava/io/OutputStream;)I
    .locals 2

    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->newInputStream()Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;

    move-result-object v0

    const/4 v1, 0x0

    invoke-static {v0, p1, v1}, Lcom/ilegendsoft/mercury/external/fileupload/util/Streams;->copy(Ljava/io/InputStream;Ljava/io/OutputStream;Z)J

    move-result-wide v0

    long-to-int v0, v0

    return v0
.end method

.method public readBoundary()Z
    .locals 5

    const/4 v2, 0x2

    const/4 v1, 0x1

    const/4 v0, 0x0

    new-array v2, v2, [B

    iget v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I

    iget v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundaryLength:I

    add-int/2addr v3, v4

    iput v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I

    const/4 v3, 0x0

    :try_start_0
    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->readByte()B

    move-result v4

    aput-byte v4, v2, v3

    const/4 v3, 0x0

    aget-byte v3, v2, v3

    const/16 v4, 0xa

    if-ne v3, v4, :cond_0

    :goto_0
    return v1

    :cond_0
    const/4 v3, 0x1

    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->readByte()B

    move-result v4

    aput-byte v4, v2, v3

    sget-object v3, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->STREAM_TERMINATOR:[B

    const/4 v4, 0x2

    invoke-static {v2, v3, v4}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->arrayequals([B[BI)Z

    move-result v3

    if-eqz v3, :cond_1

    :goto_1
    move v1, v0

    goto :goto_0

    :cond_1
    sget-object v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->FIELD_SEPARATOR:[B

    const/4 v3, 0x2

    invoke-static {v2, v0, v3}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->arrayequals([B[BI)Z

    move-result v0

    if-eqz v0, :cond_2

    move v0, v1

    goto :goto_1

    :cond_2
    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException;

    const-string v1, "Unexpected characters follow a boundary"

    invoke-direct {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catch Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileUploadIOException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileUploadIOException;->printStackTrace()V

    throw v0

    :catch_1
    move-exception v0

    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException;

    const-string v1, "Stream ended unexpectedly"

    invoke-direct {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public readByte()B
    .locals 4

    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I

    iget v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I

    if-ne v0, v1, :cond_1

    const/4 v0, 0x0

    iput v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->input:Ljava/io/InputStream;

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->buffer:[B

    iget v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I

    iget v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->bufSize:I

    invoke-virtual {v0, v1, v2, v3}, Ljava/io/InputStream;->read([BII)I

    move-result v0

    iput v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I

    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I

    const/4 v1, -0x1

    if-ne v0, v1, :cond_0

    new-instance v0, Ljava/io/IOException;

    const-string v1, "No more data is available"

    invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

    iget v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I

    invoke-virtual {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;->noteBytesRead(I)V

    :cond_1
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->buffer:[B

    iget v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I

    add-int/lit8 v2, v1, 0x1

    iput v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I

    aget-byte v0, v0, v1

    return v0
.end method

.method public readHeaders()Ljava/lang/String;
    .locals 7

    const/16 v6, 0x2800

    const/4 v1, 0x0

    new-instance v3, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v3}, Ljava/io/ByteArrayOutputStream;-><init>()V

    move v0, v1

    move v2, v1

    :goto_0
    sget-object v4, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->HEADER_SEPARATOR:[B

    array-length v4, v4

    if-lt v2, v4, :cond_0

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->headerEncoding:Ljava/lang/String;

    if-eqz v0, :cond_3

    :try_start_0
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->headerEncoding:Ljava/lang/String;

    invoke-virtual {v3, v0}, Ljava/io/ByteArrayOutputStream;->toString(Ljava/lang/String;)Ljava/lang/String;
    :try_end_0
    .catch Ljava/io/UnsupportedEncodingException; {:try_start_0 .. :try_end_0} :catch_2

    move-result-object v0

    :goto_1
    return-object v0

    :cond_0
    :try_start_1
    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->readByte()B
    :try_end_1
    .catch Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileUploadIOException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1

    move-result v4

    add-int/lit8 v0, v0, 0x1

    if-le v0, v6, :cond_1

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException;

    const-string v2, "Header section has more than %s bytes (maybe it is not properly terminated)"

    const/4 v3, 0x1

    new-array v3, v3, [Ljava/lang/Object;

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v3, v1

    invoke-static {v2, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException;-><init>(Ljava/lang/String;)V

    throw v0

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileUploadIOException;->printStackTrace()V

    throw v0

    :catch_1
    move-exception v0

    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException;

    const-string v1, "Stream ended unexpectedly"

    invoke-direct {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    sget-object v5, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->HEADER_SEPARATOR:[B

    aget-byte v5, v5, v2

    if-ne v4, v5, :cond_2

    add-int/lit8 v2, v2, 0x1

    :goto_2
    invoke-virtual {v3, v4}, Ljava/io/ByteArrayOutputStream;->write(I)V

    goto :goto_0

    :cond_2
    move v2, v1

    goto :goto_2

    :catch_2
    move-exception v0

    invoke-virtual {v0}, Ljava/io/UnsupportedEncodingException;->printStackTrace()V

    invoke-virtual {v3}, Ljava/io/ByteArrayOutputStream;->toString()Ljava/lang/String;

    move-result-object v0

    goto :goto_1

    :cond_3
    invoke-virtual {v3}, Ljava/io/ByteArrayOutputStream;->toString()Ljava/lang/String;

    move-result-object v0

    goto :goto_1
.end method

.method public setBoundary([B)V
    .locals 4

    array-length v0, p1

    iget v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundaryLength:I

    sget-object v2, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->BOUNDARY_PREFIX:[B

    array-length v2, v2

    sub-int/2addr v1, v2

    if-eq v0, v1, :cond_0

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$IllegalBoundaryException;

    const-string v1, "The length of a boundary token can not be changed"

    invoke-direct {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$IllegalBoundaryException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    const/4 v0, 0x0

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    sget-object v2, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->BOUNDARY_PREFIX:[B

    array-length v2, v2

    array-length v3, p1

    invoke-static {p1, v0, v1, v2, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    return-void
.end method

.method public setHeaderEncoding(Ljava/lang/String;)V
    .locals 0

    iput-object p1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->headerEncoding:Ljava/lang/String;

    return-void
.end method

.method public skipPreamble()Z
    .locals 9

    const/16 v8, 0xd

    const/16 v7, 0xa

    const/4 v6, 0x1

    const/4 v5, 0x2

    const/4 v1, 0x0

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    iget-object v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    array-length v3, v3

    add-int/lit8 v3, v3, -0x2

    invoke-static {v0, v5, v2, v1, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    array-length v0, v0

    add-int/lit8 v0, v0, -0x2

    iput v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundaryLength:I

    :try_start_0
    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->discardBodyData()I

    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->readBoundary()Z
    :try_end_0
    .catch Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    iget-object v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    iget-object v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    array-length v4, v4

    add-int/lit8 v4, v4, -0x2

    invoke-static {v2, v1, v3, v5, v4}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    array-length v2, v2

    iput v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundaryLength:I

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    aput-byte v8, v2, v1

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    aput-byte v7, v1, v6

    :goto_0
    return v0

    :catch_0
    move-exception v0

    :try_start_1
    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException;->printStackTrace()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    iget-object v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    array-length v3, v3

    add-int/lit8 v3, v3, -0x2

    invoke-static {v0, v1, v2, v5, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    array-length v0, v0

    iput v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundaryLength:I

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    aput-byte v8, v0, v1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    aput-byte v7, v0, v6

    move v0, v1

    goto :goto_0

    :catchall_0
    move-exception v0

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    iget-object v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    iget-object v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    array-length v4, v4

    add-int/lit8 v4, v4, -0x2

    invoke-static {v2, v1, v3, v5, v4}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    array-length v2, v2

    iput v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundaryLength:I

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    aput-byte v8, v2, v1

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->boundary:[B

    aput-byte v7, v1, v6

    throw v0
.end method

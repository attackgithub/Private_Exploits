.class public Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;
.super Ljava/io/InputStream;

# interfaces
.implements Lcom/ilegendsoft/mercury/external/fileupload/util/Closeable;


# static fields
.field private static final BYTE_POSITIVE_OFFSET:I = 0x100


# instance fields
.field private closed:Z

.field private pad:I

.field private pos:I

.field final synthetic this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

.field private total:J


# direct methods
.method constructor <init>(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)V
    .locals 0

    iput-object p1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    invoke-direct {p0}, Ljava/io/InputStream;-><init>()V

    invoke-direct {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->findSeparator()V

    return-void
.end method

.method private findSeparator()V
    .locals 2

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->findSeparator()I

    move-result v0

    iput v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pos:I

    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pos:I

    const/4 v1, -0x1

    if-ne v0, v1, :cond_0

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I
    invoke-static {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$0(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v0

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v1

    sub-int/2addr v0, v1

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->keepRegion:I
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$2(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v1

    if-le v0, v1, :cond_1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->keepRegion:I
    invoke-static {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$2(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v0

    iput v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pad:I

    :cond_0
    :goto_0
    return-void

    :cond_1
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I
    invoke-static {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$0(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v0

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v1

    sub-int/2addr v0, v1

    iput v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pad:I

    goto :goto_0
.end method

.method private makeAvailable()I
    .locals 7

    const/4 v0, 0x0

    const/4 v6, -0x1

    iget v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pos:I

    if-eq v1, v6, :cond_1

    :cond_0
    :goto_0
    return v0

    :cond_1
    iget-wide v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->total:J

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$0(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v1

    iget-object v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I
    invoke-static {v4}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v4

    sub-int/2addr v1, v4

    iget v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pad:I

    sub-int/2addr v1, v4

    int-to-long v4, v1

    add-long/2addr v2, v4

    iput-wide v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->total:J

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->buffer:[B
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$3(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)[B

    move-result-object v1

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I
    invoke-static {v2}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$0(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v2

    iget v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pad:I

    sub-int/2addr v2, v3

    iget-object v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->buffer:[B
    invoke-static {v3}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$3(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)[B

    move-result-object v3

    iget v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pad:I

    invoke-static {v1, v2, v3, v0, v4}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    invoke-static {v1, v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$4(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;I)V

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    iget v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pad:I

    invoke-static {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$6(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;I)V

    :cond_2
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->input:Ljava/io/InputStream;
    invoke-static {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$5(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)Ljava/io/InputStream;

    move-result-object v0

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->buffer:[B
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$3(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)[B

    move-result-object v1

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I
    invoke-static {v2}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$0(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v2

    iget-object v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->bufSize:I
    invoke-static {v3}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$7(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v3

    iget-object v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I
    invoke-static {v4}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$0(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v4

    sub-int/2addr v3, v4

    invoke-virtual {v0, v1, v2, v3}, Ljava/io/InputStream;->read([BII)I

    move-result v0

    if-ne v0, v6, :cond_3

    const-string v0, "Stream ended unexpectedly"

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException;

    const-string v1, "Stream ended unexpectedly"

    invoke-direct {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$MalformedStreamException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_3
    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$8(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

    move-result-object v1

    if-eqz v1, :cond_4

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$8(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;->noteBytesRead(I)V

    :cond_4
    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$0(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v2

    add-int/2addr v0, v2

    invoke-static {v1, v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$6(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;I)V

    invoke-direct {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->findSeparator()V

    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->available()I

    move-result v0

    if-gtz v0, :cond_0

    iget v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pos:I

    if-eq v1, v6, :cond_2

    goto/16 :goto_0
.end method


# virtual methods
.method public available()I
    .locals 2

    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pos:I

    const/4 v1, -0x1

    if-ne v0, v1, :cond_0

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->tail:I
    invoke-static {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$0(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v0

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v1

    sub-int/2addr v0, v1

    iget v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pad:I

    sub-int/2addr v0, v1

    :goto_0
    return v0

    :cond_0
    iget v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->pos:I

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v1

    sub-int/2addr v0, v1

    goto :goto_0
.end method

.method public close()V
    .locals 1

    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->close(Z)V

    return-void
.end method

.method public close(Z)V
    .locals 3

    const/4 v2, 0x1

    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->closed:Z

    if-eqz v0, :cond_0

    :goto_0
    return-void

    :cond_0
    if-eqz p1, :cond_2

    iput-boolean v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->closed:Z

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->input:Ljava/io/InputStream;
    invoke-static {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$5(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)Ljava/io/InputStream;

    move-result-object v0

    invoke-virtual {v0}, Ljava/io/InputStream;->close()V

    :goto_1
    iput-boolean v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->closed:Z

    goto :goto_0

    :cond_1
    int-to-long v0, v0

    invoke-virtual {p0, v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->skip(J)J

    :cond_2
    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->available()I

    move-result v0

    if-nez v0, :cond_1

    invoke-direct {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->makeAvailable()I

    move-result v0

    if-nez v0, :cond_1

    goto :goto_1
.end method

.method public getBytesRead()J
    .locals 2

    iget-wide v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->total:J

    return-wide v0
.end method

.method public isClosed()Z
    .locals 1

    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->closed:Z

    return v0
.end method

.method public read()I
    .locals 4

    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->closed:Z

    if-eqz v0, :cond_0

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/FileItemStream$ItemSkippedException;

    invoke-direct {v0}, Lcom/ilegendsoft/mercury/external/fileupload/FileItemStream$ItemSkippedException;-><init>()V

    throw v0

    :cond_0
    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->available()I

    move-result v0

    if-nez v0, :cond_2

    invoke-direct {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->makeAvailable()I

    move-result v0

    if-nez v0, :cond_2

    const/4 v0, -0x1

    :cond_1
    :goto_0
    return v0

    :cond_2
    iget-wide v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->total:J

    const-wide/16 v2, 0x1

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->total:J

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->buffer:[B
    invoke-static {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$3(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)[B

    move-result-object v0

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v2

    add-int/lit8 v3, v2, 0x1

    invoke-static {v1, v3}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$4(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;I)V

    aget-byte v0, v0, v2

    if-gez v0, :cond_1

    add-int/lit16 v0, v0, 0x100

    goto :goto_0
.end method

.method public read([BII)I
    .locals 6

    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->closed:Z

    if-eqz v0, :cond_0

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/FileItemStream$ItemSkippedException;

    invoke-direct {v0}, Lcom/ilegendsoft/mercury/external/fileupload/FileItemStream$ItemSkippedException;-><init>()V

    throw v0

    :cond_0
    if-nez p3, :cond_1

    const/4 v0, 0x0

    :goto_0
    return v0

    :cond_1
    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->available()I

    move-result v0

    if-nez v0, :cond_2

    invoke-direct {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->makeAvailable()I

    move-result v0

    if-nez v0, :cond_2

    const/4 v0, -0x1

    goto :goto_0

    :cond_2
    invoke-static {v0, p3}, Ljava/lang/Math;->min(II)I

    move-result v0

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->buffer:[B
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$3(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)[B

    move-result-object v1

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I
    invoke-static {v2}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v2

    invoke-static {v1, v2, p1, p2, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I
    invoke-static {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v2

    add-int/2addr v2, v0

    invoke-static {v1, v2}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$4(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;I)V

    iget-wide v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->total:J

    int-to-long v4, v0

    add-long/2addr v2, v4

    iput-wide v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->total:J

    goto :goto_0
.end method

.method public skip(J)J
    .locals 7

    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->closed:Z

    if-eqz v0, :cond_0

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/FileItemStream$ItemSkippedException;

    invoke-direct {v0}, Lcom/ilegendsoft/mercury/external/fileupload/FileItemStream$ItemSkippedException;-><init>()V

    throw v0

    :cond_0
    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->available()I

    move-result v0

    if-nez v0, :cond_1

    invoke-direct {p0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->makeAvailable()I

    move-result v0

    if-nez v0, :cond_1

    const-wide/16 v0, 0x0

    :goto_0
    return-wide v0

    :cond_1
    int-to-long v0, v0

    invoke-static {v0, v1, p1, p2}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v0

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ItemInputStream;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->head:I
    invoke-static {v2}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;)I

    move-result v3

    int-to-long v4, v3

    add-long/2addr v4, v0

    long-to-int v3, v4

    invoke-static {v2, v3}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->access$4(Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;I)V

    goto :goto_0
.end method

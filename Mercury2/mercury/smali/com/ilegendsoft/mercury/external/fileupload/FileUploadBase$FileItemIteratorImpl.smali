.class Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;
.super Ljava/lang/Object;

# interfaces
.implements Lcom/ilegendsoft/mercury/external/fileupload/FileItemIterator;


# instance fields
.field private final boundary:[B

.field private currentFieldName:Ljava/lang/String;

.field private currentItem:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

.field private eof:Z

.field private itemValid:Z

.field private final multi:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

.field private final notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

.field private skipPreamble:Z

.field final synthetic this$0:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;


# direct methods
.method constructor <init>(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;Lcom/ilegendsoft/mercury/external/fileupload/RequestContext;)V
    .locals 12

    const/4 v5, 0x2

    const/4 v11, 0x0

    const/4 v10, 0x1

    iput-object p1, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    if-nez p2, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "ctx parameter"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    invoke-interface {p2}, Lcom/ilegendsoft/mercury/external/fileupload/RequestContext;->getContentType()Ljava/lang/String;

    move-result-object v4

    if-eqz v4, :cond_1

    sget-object v0, Ljava/util/Locale;->ENGLISH:Ljava/util/Locale;

    invoke-virtual {v4, v0}, Ljava/lang/String;->toLowerCase(Ljava/util/Locale;)Ljava/lang/String;

    move-result-object v0

    const-string v1, "multipart/"

    invoke-virtual {v0, v1}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_2

    :cond_1
    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$InvalidContentTypeException;

    const-string v1, "the request doesn\'t contain a %s or %s stream, content type header is %s"

    const/4 v2, 0x3

    new-array v2, v2, [Ljava/lang/Object;

    const-string v3, "multipart/form-data"

    aput-object v3, v2, v11

    const-string v3, "multipart/form-data"

    aput-object v3, v2, v10

    aput-object v4, v2, v5

    invoke-static {v1, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$InvalidContentTypeException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_2
    invoke-interface {p2}, Lcom/ilegendsoft/mercury/external/fileupload/RequestContext;->getInputStream()Ljava/io/InputStream;

    move-result-object v1

    invoke-interface {p2}, Lcom/ilegendsoft/mercury/external/fileupload/RequestContext;->getContentLength()I

    move-result v0

    const-class v2, Lcom/ilegendsoft/mercury/external/fileupload/UploadContext;

    invoke-virtual {p2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v2

    if-eqz v2, :cond_3

    move-object v0, p2

    check-cast v0, Lcom/ilegendsoft/mercury/external/fileupload/UploadContext;

    invoke-interface {v0}, Lcom/ilegendsoft/mercury/external/fileupload/UploadContext;->contentLength()J

    move-result-wide v2

    :goto_0
    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->sizeMax:J
    invoke-static {p1}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;)J

    move-result-wide v6

    const-wide/16 v8, 0x0

    cmp-long v0, v6, v8

    if-ltz v0, :cond_7

    const-wide/16 v6, -0x1

    cmp-long v0, v2, v6

    if-eqz v0, :cond_4

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->sizeMax:J
    invoke-static {p1}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;)J

    move-result-wide v6

    cmp-long v0, v2, v6

    if-lez v0, :cond_4

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$SizeLimitExceededException;

    const-string v1, "the request was rejected because its size (%s) exceeds the configured maximum (%s)"

    new-array v4, v5, [Ljava/lang/Object;

    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v5

    aput-object v5, v4, v11

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->sizeMax:J
    invoke-static {p1}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;)J

    move-result-wide v6

    invoke-static {v6, v7}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v5

    aput-object v5, v4, v10

    invoke-static {v1, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->sizeMax:J
    invoke-static {p1}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;)J

    move-result-wide v4

    invoke-direct/range {v0 .. v5}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$SizeLimitExceededException;-><init>(Ljava/lang/String;JJ)V

    throw v0

    :cond_3
    int-to-long v2, v0

    goto :goto_0

    :cond_4
    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$1;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->sizeMax:J
    invoke-static {p1}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->access$1(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;)J

    move-result-wide v6

    invoke-direct {v0, p0, v1, v6, v7}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$1;-><init>(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;Ljava/io/InputStream;J)V

    :goto_1
    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->headerEncoding:Ljava/lang/String;
    invoke-static {p1}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->access$2(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;)Ljava/lang/String;

    move-result-object v1

    if-nez v1, :cond_5

    invoke-interface {p2}, Lcom/ilegendsoft/mercury/external/fileupload/RequestContext;->getCharacterEncoding()Ljava/lang/String;

    move-result-object v1

    :cond_5
    invoke-virtual {p1, v4}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->getBoundary(Ljava/lang/String;)[B

    move-result-object v4

    iput-object v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->boundary:[B

    iget-object v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->boundary:[B

    if-nez v4, :cond_6

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadException;

    const-string v1, "the request was rejected because no multipart boundary was found"

    invoke-direct {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_6
    new-instance v4, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

    # getter for: Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->listener:Lcom/ilegendsoft/mercury/external/fileupload/ProgressListener;
    invoke-static {p1}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->access$3(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;)Lcom/ilegendsoft/mercury/external/fileupload/ProgressListener;

    move-result-object v5

    invoke-direct {v4, v5, v2, v3}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;-><init>(Lcom/ilegendsoft/mercury/external/fileupload/ProgressListener;J)V

    iput-object v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

    new-instance v2, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    iget-object v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->boundary:[B

    iget-object v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

    invoke-direct {v2, v0, v3, v4}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;-><init>(Ljava/io/InputStream;[BLcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;)V

    iput-object v2, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->multi:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->multi:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    invoke-virtual {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->setHeaderEncoding(Ljava/lang/String;)V

    iput-boolean v10, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->skipPreamble:Z

    invoke-direct {p0}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->findNextItem()Z

    return-void

    :cond_7
    move-object v0, v1

    goto :goto_1
.end method

.method static synthetic access$0(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;)Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;
    .locals 1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->multi:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    return-object v0
.end method

.method static synthetic access$1(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;)Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;
    .locals 1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;

    return-object v0
.end method

.method private findNextItem()Z
    .locals 10

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v8, 0x1

    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->eof:Z

    if-eqz v0, :cond_0

    :goto_0
    return v5

    :cond_0
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentItem:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentItem:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;->close()V

    iput-object v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentItem:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

    :cond_1
    :goto_1
    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->skipPreamble:Z

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->multi:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->skipPreamble()Z

    move-result v0

    :goto_2
    if-nez v0, :cond_4

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentFieldName:Ljava/lang/String;

    if-nez v0, :cond_3

    iput-boolean v8, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->eof:Z

    goto :goto_0

    :cond_2
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->multi:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->readBoundary()Z

    move-result v0

    goto :goto_2

    :cond_3
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->multi:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->boundary:[B

    invoke-virtual {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->setBoundary([B)V

    iput-object v4, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentFieldName:Ljava/lang/String;

    goto :goto_1

    :cond_4
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->multi:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    invoke-virtual {v1}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->readHeaders()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->getParsedHeaders(Ljava/lang/String;)Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;

    move-result-object v9

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentFieldName:Ljava/lang/String;

    if-nez v0, :cond_7

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;

    invoke-virtual {v0, v9}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->getFieldName(Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;)Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_8

    const-string v0, "Content-type"

    invoke-interface {v9, v0}, Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;->getHeader(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_5

    sget-object v1, Ljava/util/Locale;->ENGLISH:Ljava/util/Locale;

    invoke-virtual {v0, v1}, Ljava/lang/String;->toLowerCase(Ljava/util/Locale;)Ljava/lang/String;

    move-result-object v1

    const-string v2, "multipart/mixed"

    invoke-virtual {v1, v2}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_5

    iput-object v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentFieldName:Ljava/lang/String;

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;

    invoke-virtual {v1, v0}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->getBoundary(Ljava/lang/String;)[B

    move-result-object v0

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->multi:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    invoke-virtual {v1, v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->setBoundary([B)V

    iput-boolean v8, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->skipPreamble:Z

    goto :goto_1

    :cond_5
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;

    invoke-virtual {v0, v9}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->getFileName(Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;)Ljava/lang/String;

    move-result-object v2

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

    const-string v1, "Content-type"

    invoke-interface {v9, v1}, Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;->getHeader(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    if-nez v2, :cond_6

    move v5, v8

    :cond_6
    invoke-direct {p0, v9}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->getContentLength(Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;)J

    move-result-wide v6

    move-object v1, p0

    invoke-direct/range {v0 .. v7}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;-><init>(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZJ)V

    iput-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentItem:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentItem:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

    invoke-virtual {v0, v9}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;->setHeaders(Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;)V

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;->noteItem()V

    iput-boolean v8, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->itemValid:Z

    move v5, v8

    goto/16 :goto_0

    :cond_7
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->this$0:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;

    invoke-virtual {v0, v9}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase;->getFileName(Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;)Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_8

    new-instance v0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

    iget-object v3, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentFieldName:Ljava/lang/String;

    const-string v1, "Content-type"

    invoke-interface {v9, v1}, Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;->getHeader(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    invoke-direct {p0, v9}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->getContentLength(Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;)J

    move-result-wide v6

    move-object v1, p0

    invoke-direct/range {v0 .. v7}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;-><init>(Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZJ)V

    iput-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentItem:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentItem:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

    invoke-virtual {v0, v9}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;->setHeaders(Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;)V

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->notifier:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream$ProgressNotifier;->noteItem()V

    iput-boolean v8, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->itemValid:Z

    move v5, v8

    goto/16 :goto_0

    :cond_8
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->multi:Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/MultipartStream;->discardBodyData()I

    goto/16 :goto_1
.end method

.method private getContentLength(Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;)J
    .locals 2

    :try_start_0
    const-string v0, "Content-length"

    invoke-interface {p1, v0}, Lcom/ilegendsoft/mercury/external/fileupload/FileItemHeaders;->getHeader(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move-result-wide v0

    :goto_0
    return-wide v0

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V

    const-wide/16 v0, -0x1

    goto :goto_0
.end method


# virtual methods
.method public hasNext()Z
    .locals 1

    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->eof:Z

    if-eqz v0, :cond_0

    const/4 v0, 0x0

    :goto_0
    return v0

    :cond_0
    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->itemValid:Z

    if-eqz v0, :cond_1

    const/4 v0, 0x1

    goto :goto_0

    :cond_1
    :try_start_0
    invoke-direct {p0}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->findNextItem()Z
    :try_end_0
    .catch Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileUploadIOException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v0

    goto :goto_0

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileUploadIOException;->printStackTrace()V

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileUploadIOException;->getCause()Ljava/lang/Throwable;

    move-result-object v0

    check-cast v0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadException;

    throw v0
.end method

.method public next()Lcom/ilegendsoft/mercury/external/fileupload/FileItemStream;
    .locals 1

    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->eof:Z

    if-nez v0, :cond_0

    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->itemValid:Z

    if-nez v0, :cond_1

    invoke-virtual {p0}, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->hasNext()Z

    move-result v0

    if-nez v0, :cond_1

    :cond_0
    new-instance v0, Ljava/util/NoSuchElementException;

    invoke-direct {v0}, Ljava/util/NoSuchElementException;-><init>()V

    throw v0

    :cond_1
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->itemValid:Z

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl;->currentItem:Lcom/ilegendsoft/mercury/external/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

    return-object v0
.end method

.class public Lnet/asfun/jangod/lib/tag/BlockTag;
.super Ljava/lang/Object;

# interfaces
.implements Lnet/asfun/jangod/lib/Tag;


# instance fields
.field final BLOCKNAMES:Ljava/lang/String;

.field final ENDTAGNAME:Ljava/lang/String;

.field final TAGNAME:Ljava/lang/String;


# direct methods
.method public constructor <init>()V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const-string v0, "\'BLK\"NAMES"

    iput-object v0, p0, Lnet/asfun/jangod/lib/tag/BlockTag;->BLOCKNAMES:Ljava/lang/String;

    const-string v0, "block"

    iput-object v0, p0, Lnet/asfun/jangod/lib/tag/BlockTag;->TAGNAME:Ljava/lang/String;

    const-string v0, "endblock"

    iput-object v0, p0, Lnet/asfun/jangod/lib/tag/BlockTag;->ENDTAGNAME:Ljava/lang/String;

    return-void
.end method

.method private getBlockContent(Lnet/asfun/jangod/tree/NodeList;Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;
    .locals 3

    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {p1}, Lnet/asfun/jangod/tree/NodeList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-nez v0, :cond_0

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0

    :cond_0
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lnet/asfun/jangod/tree/Node;

    invoke-virtual {v0, p2}, Lnet/asfun/jangod/tree/Node;->render(Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    goto :goto_0
.end method


# virtual methods
.method public getEndTagName()Ljava/lang/String;
    .locals 1

    const-string v0, "endblock"

    return-object v0
.end method

.method public getName()Ljava/lang/String;
    .locals 1

    const-string v0, "block"

    return-object v0
.end method

.method public interpreter(Lnet/asfun/jangod/tree/NodeList;Ljava/lang/String;Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;
    .locals 4

    const/4 v3, 0x1

    new-instance v0, Lnet/asfun/jangod/util/HelperStringTokenizer;

    invoke-direct {v0, p2}, Lnet/asfun/jangod/util/HelperStringTokenizer;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0}, Lnet/asfun/jangod/util/HelperStringTokenizer;->allTokens()[Ljava/lang/String;

    move-result-object v0

    array-length v1, v0

    if-eq v1, v3, :cond_0

    new-instance v1, Lnet/asfun/jangod/interpret/InterpretException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "Tag \'block\' expects 1 helper >>> "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    array-length v0, v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Lnet/asfun/jangod/interpret/InterpretException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_0
    const/4 v1, 0x0

    aget-object v0, v0, v1

    invoke-virtual {p3, v0}, Lnet/asfun/jangod/interpret/JangodInterpreter;->resolveString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    const-string v0, "\'BLK\"NAMES"

    invoke-virtual {p3, v0, v3}, Lnet/asfun/jangod/interpret/JangodInterpreter;->fetchRuntimeScope(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/List;

    if-nez v0, :cond_1

    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    :cond_1
    invoke-interface {v0, v1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2

    new-instance v0, Lnet/asfun/jangod/interpret/InterpretException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "Can\'t redefine the block with name >>> "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lnet/asfun/jangod/interpret/InterpretException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_2
    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    const-string v2, "\'BLK\"NAMES"

    invoke-virtual {p3, v2, v0, v3}, Lnet/asfun/jangod/interpret/JangodInterpreter;->assignRuntimeScope(Ljava/lang/String;Ljava/lang/Object;I)V

    const-string v0, "\'IS\"CHILD"

    invoke-virtual {p3, v0, v3}, Lnet/asfun/jangod/interpret/JangodInterpreter;->fetchRuntimeScope(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    if-eqz v0, :cond_4

    const-string v0, "\'BLK\"LIST"

    invoke-virtual {p3, v0, v3}, Lnet/asfun/jangod/interpret/JangodInterpreter;->fetchRuntimeScope(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lnet/asfun/jangod/util/ListOrderedMap;

    invoke-virtual {v0, v1}, Lnet/asfun/jangod/util/ListOrderedMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_3

    new-instance v0, Lnet/asfun/jangod/interpret/InterpretException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "Dosen\'t define block in extends parent with name >>> "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lnet/asfun/jangod/interpret/InterpretException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_3
    invoke-direct {p0, p1, p3}, Lnet/asfun/jangod/lib/tag/BlockTag;->getBlockContent(Lnet/asfun/jangod/tree/NodeList;Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lnet/asfun/jangod/util/ListOrderedMap;->put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;

    const-string v0, ""

    :goto_0
    return-object v0

    :cond_4
    const-string v0, "\'IS\"PARENT"

    invoke-virtual {p3, v0, v3}, Lnet/asfun/jangod/interpret/JangodInterpreter;->fetchRuntimeScope(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    if-eqz v0, :cond_5

    const-string v0, "\'BLK\"LIST"

    invoke-virtual {p3, v0, v3}, Lnet/asfun/jangod/interpret/JangodInterpreter;->fetchRuntimeScope(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lnet/asfun/jangod/util/ListOrderedMap;

    invoke-direct {p0, p1, p3}, Lnet/asfun/jangod/lib/tag/BlockTag;->getBlockContent(Lnet/asfun/jangod/tree/NodeList;Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lnet/asfun/jangod/util/ListOrderedMap;->put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;

    new-instance v0, Ljava/lang/StringBuilder;

    const-string v2, "<K2C9OL7B>"

    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    goto :goto_0

    :cond_5
    invoke-direct {p0, p1, p3}, Lnet/asfun/jangod/lib/tag/BlockTag;->getBlockContent(Lnet/asfun/jangod/tree/NodeList;Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;

    move-result-object v0

    goto :goto_0
.end method

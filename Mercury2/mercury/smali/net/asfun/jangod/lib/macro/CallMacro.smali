.class public Lnet/asfun/jangod/lib/macro/CallMacro;
.super Ljava/lang/Object;

# interfaces
.implements Lnet/asfun/jangod/lib/Macro;


# instance fields
.field final MACRONAME:Ljava/lang/String;


# direct methods
.method public constructor <init>()V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const-string v0, "call"

    iput-object v0, p0, Lnet/asfun/jangod/lib/macro/CallMacro;->MACRONAME:Ljava/lang/String;

    return-void
.end method


# virtual methods
.method public getEndMacroName()Ljava/lang/String;
    .locals 1

    const/4 v0, 0x0

    return-object v0
.end method

.method public getName()Ljava/lang/String;
    .locals 1

    const-string v0, "call"

    return-object v0
.end method

.method public refactor(Lnet/asfun/jangod/tree/Node;Ljava/lang/String;Lnet/asfun/jangod/tree/TreeRebuilder;)V
    .locals 8

    const/4 v0, 0x0

    const-string v1, ""

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "\'MACRO\"NAME:"

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p3, v2}, Lnet/asfun/jangod/tree/TreeRebuilder;->fetchNode(Ljava/lang/String;)Lnet/asfun/jangod/tree/Node;

    move-result-object v2

    if-nez v2, :cond_0

    new-instance v0, Lnet/asfun/jangod/parse/ParseException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "Call a macro didn\'t define yet >>> "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lnet/asfun/jangod/parse/ParseException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    new-array v1, v0, [Ljava/lang/String;

    new-array v3, v0, [Ljava/lang/String;

    :goto_0
    array-length v4, v1

    if-lt v0, v4, :cond_1

    invoke-virtual {v2}, Lnet/asfun/jangod/tree/Node;->clone()Lnet/asfun/jangod/tree/Node;

    move-result-object v0

    invoke-virtual {v0}, Lnet/asfun/jangod/tree/Node;->children()Lnet/asfun/jangod/tree/NodeList;

    move-result-object v0

    invoke-virtual {p3, p1, v0}, Lnet/asfun/jangod/tree/TreeRebuilder;->nodeReplace(Lnet/asfun/jangod/tree/Node;Lnet/asfun/jangod/tree/NodeList;)V

    return-void

    :cond_1
    new-instance v4, Lnet/asfun/jangod/tree/TagNode;

    new-instance v5, Lnet/asfun/jangod/parse/TagToken;

    new-instance v6, Ljava/lang/StringBuilder;

    const-string v7, "{%set "

    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    aget-object v7, v1, v0

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    aget-object v7, v3, v0

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " just %}"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Lnet/asfun/jangod/parse/TagToken;-><init>(Ljava/lang/String;)V

    invoke-direct {v4, v5}, Lnet/asfun/jangod/tree/TagNode;-><init>(Lnet/asfun/jangod/parse/TagToken;)V

    invoke-virtual {p3, p1, v4}, Lnet/asfun/jangod/tree/TreeRebuilder;->nodeInsertBefore(Lnet/asfun/jangod/tree/Node;Lnet/asfun/jangod/tree/Node;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0
.end method

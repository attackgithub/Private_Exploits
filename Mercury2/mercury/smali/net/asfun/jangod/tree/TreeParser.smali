.class public Lnet/asfun/jangod/tree/TreeParser;
.super Ljava/lang/Object;


# direct methods
.method public constructor <init>()V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static parser(Lnet/asfun/jangod/parse/TokenParser;)Lnet/asfun/jangod/tree/Node;
    .locals 2

    new-instance v0, Lnet/asfun/jangod/tree/RootNode;

    invoke-direct {v0}, Lnet/asfun/jangod/tree/RootNode;-><init>()V

    const-string v1, "anysome"

    invoke-static {v0, p0, v1}, Lnet/asfun/jangod/tree/TreeParser;->tree(Lnet/asfun/jangod/tree/Node;Lnet/asfun/jangod/parse/TokenParser;Ljava/lang/String;)V

    return-object v0
.end method

.method static tree(Lnet/asfun/jangod/tree/Node;Lnet/asfun/jangod/parse/TokenParser;Ljava/lang/String;)V
    .locals 7

    :cond_0
    :goto_0
    :sswitch_0
    invoke-virtual {p1}, Lnet/asfun/jangod/parse/TokenParser;->hasNext()Z

    move-result v1

    if-nez v1, :cond_2

    if-eqz p2, :cond_1

    const-string v1, "anysome"

    invoke-virtual {p2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1

    sget-object v1, Lnet/asfun/jangod/util/logging;->JangodLogger:Ljava/util/logging/Logger;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "lost end for tag or macro >>> "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/logging/Logger;->severe(Ljava/lang/String;)V

    :cond_1
    return-void

    :cond_2
    invoke-virtual {p1}, Lnet/asfun/jangod/parse/TokenParser;->next()Lnet/asfun/jangod/parse/Token;

    move-result-object v1

    invoke-virtual {v1}, Lnet/asfun/jangod/parse/Token;->getType()I

    move-result v2

    sparse-switch v2, :sswitch_data_0

    sget-object v2, Lnet/asfun/jangod/util/logging;->JangodLogger:Ljava/util/logging/Logger;

    new-instance v3, Ljava/lang/StringBuilder;

    const-string v4, "unknown type token >>> "

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v2, v1}, Ljava/util/logging/Logger;->warning(Ljava/lang/String;)V

    goto :goto_0

    :sswitch_1
    new-instance v2, Lnet/asfun/jangod/tree/TextNode;

    check-cast v1, Lnet/asfun/jangod/parse/FixedToken;

    invoke-direct {v2, v1}, Lnet/asfun/jangod/tree/TextNode;-><init>(Lnet/asfun/jangod/parse/FixedToken;)V

    invoke-virtual {p0, v2}, Lnet/asfun/jangod/tree/Node;->add(Lnet/asfun/jangod/tree/Node;)V

    goto :goto_0

    :sswitch_2
    move-object v2, v1

    check-cast v2, Lnet/asfun/jangod/parse/MacroToken;

    invoke-virtual {v2}, Lnet/asfun/jangod/parse/MacroToken;->getMacroName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_1

    :try_start_0
    new-instance v3, Lnet/asfun/jangod/tree/MacroNode;

    move-object v0, v1

    check-cast v0, Lnet/asfun/jangod/parse/MacroToken;

    move-object v2, v0

    invoke-direct {v3, v2}, Lnet/asfun/jangod/tree/MacroNode;-><init>(Lnet/asfun/jangod/parse/MacroToken;)V

    invoke-virtual {p0, v3}, Lnet/asfun/jangod/tree/Node;->add(Lnet/asfun/jangod/tree/Node;)V

    iget-object v2, v3, Lnet/asfun/jangod/tree/MacroNode;->endName:Ljava/lang/String;

    if-eqz v2, :cond_0

    iget-object v2, v3, Lnet/asfun/jangod/tree/MacroNode;->endName:Ljava/lang/String;

    invoke-static {v3, p1, v2}, Lnet/asfun/jangod/tree/TreeParser;->tree(Lnet/asfun/jangod/tree/Node;Lnet/asfun/jangod/parse/TokenParser;Ljava/lang/String;)V
    :try_end_0
    .catch Lnet/asfun/jangod/parse/ParseException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v2

    sget-object v3, Lnet/asfun/jangod/util/logging;->JangodLogger:Ljava/util/logging/Logger;

    sget-object v4, Lnet/asfun/jangod/util/logging$Level;->WARNING:Ljava/util/logging/Level;

    new-instance v5, Ljava/lang/StringBuilder;

    const-string v6, "can\'t create node with token >>> "

    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v2}, Lnet/asfun/jangod/parse/ParseException;->getCause()Ljava/lang/Throwable;

    move-result-object v2

    invoke-virtual {v3, v4, v1, v2}, Ljava/util/logging/Logger;->log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V

    goto/16 :goto_0

    :sswitch_3
    new-instance v2, Lnet/asfun/jangod/tree/VariableNode;

    check-cast v1, Lnet/asfun/jangod/parse/EchoToken;

    invoke-direct {v2, v1}, Lnet/asfun/jangod/tree/VariableNode;-><init>(Lnet/asfun/jangod/parse/EchoToken;)V

    invoke-virtual {p0, v2}, Lnet/asfun/jangod/tree/Node;->add(Lnet/asfun/jangod/tree/Node;)V

    goto/16 :goto_0

    :sswitch_4
    move-object v2, v1

    check-cast v2, Lnet/asfun/jangod/parse/TagToken;

    invoke-virtual {v2}, Lnet/asfun/jangod/parse/TagToken;->getTagName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_1

    :try_start_1
    new-instance v3, Lnet/asfun/jangod/tree/TagNode;

    move-object v0, v1

    check-cast v0, Lnet/asfun/jangod/parse/TagToken;

    move-object v2, v0

    invoke-direct {v3, v2}, Lnet/asfun/jangod/tree/TagNode;-><init>(Lnet/asfun/jangod/parse/TagToken;)V

    invoke-virtual {p0, v3}, Lnet/asfun/jangod/tree/Node;->add(Lnet/asfun/jangod/tree/Node;)V

    iget-object v2, v3, Lnet/asfun/jangod/tree/TagNode;->endName:Ljava/lang/String;

    if-eqz v2, :cond_0

    iget-object v2, v3, Lnet/asfun/jangod/tree/TagNode;->endName:Ljava/lang/String;

    invoke-static {v3, p1, v2}, Lnet/asfun/jangod/tree/TreeParser;->tree(Lnet/asfun/jangod/tree/Node;Lnet/asfun/jangod/parse/TokenParser;Ljava/lang/String;)V
    :try_end_1
    .catch Lnet/asfun/jangod/parse/ParseException; {:try_start_1 .. :try_end_1} :catch_1

    goto/16 :goto_0

    :catch_1
    move-exception v2

    sget-object v3, Lnet/asfun/jangod/util/logging;->JangodLogger:Ljava/util/logging/Logger;

    sget-object v4, Lnet/asfun/jangod/util/logging$Level;->WARNING:Ljava/util/logging/Level;

    new-instance v5, Ljava/lang/StringBuilder;

    const-string v6, "can\'t create node with token >>> "

    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v2}, Lnet/asfun/jangod/parse/ParseException;->getCause()Ljava/lang/Throwable;

    move-result-object v2

    invoke-virtual {v3, v4, v1, v2}, Ljava/util/logging/Logger;->log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V

    goto/16 :goto_0

    nop

    :sswitch_data_0
    .sparse-switch
        0x0 -> :sswitch_1
        0x21 -> :sswitch_2
        0x23 -> :sswitch_0
        0x25 -> :sswitch_4
        0x7b -> :sswitch_3
    .end sparse-switch
.end method

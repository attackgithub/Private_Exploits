.class public Lnet/asfun/jangod/tree/MacroNode;
.super Lnet/asfun/jangod/tree/Node;


# static fields
.field private static final serialVersionUID:J = 0x45ea1ed4507afc7bL


# instance fields
.field endName:Ljava/lang/String;

.field private master:Lnet/asfun/jangod/parse/MacroToken;


# direct methods
.method public constructor <init>(Lnet/asfun/jangod/parse/MacroToken;)V
    .locals 3

    invoke-direct {p0}, Lnet/asfun/jangod/tree/Node;-><init>()V

    const/4 v0, 0x0

    iput-object v0, p0, Lnet/asfun/jangod/tree/MacroNode;->endName:Ljava/lang/String;

    iput-object p1, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    iget-object v0, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    invoke-virtual {v0}, Lnet/asfun/jangod/parse/MacroToken;->getMacroName()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lnet/asfun/jangod/lib/MacroLibrary;->getMacro(Ljava/lang/String;)Lnet/asfun/jangod/lib/Macro;

    move-result-object v0

    if-nez v0, :cond_0

    new-instance v0, Lnet/asfun/jangod/parse/ParseException;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "Can\'t find macro >>> "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v2, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    invoke-virtual {v2}, Lnet/asfun/jangod/parse/MacroToken;->getMacroName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lnet/asfun/jangod/parse/ParseException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    invoke-interface {v0}, Lnet/asfun/jangod/lib/Macro;->getEndMacroName()Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lnet/asfun/jangod/tree/MacroNode;->endName:Ljava/lang/String;

    return-void
.end method


# virtual methods
.method public clone()Lnet/asfun/jangod/tree/Node;
    .locals 2

    :try_start_0
    new-instance v0, Lnet/asfun/jangod/tree/MacroNode;

    iget-object v1, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    invoke-direct {v0, v1}, Lnet/asfun/jangod/tree/MacroNode;-><init>(Lnet/asfun/jangod/parse/MacroToken;)V

    iget-object v1, p0, Lnet/asfun/jangod/tree/MacroNode;->children:Lnet/asfun/jangod/tree/NodeList;

    invoke-virtual {v1, v0}, Lnet/asfun/jangod/tree/NodeList;->clone(Lnet/asfun/jangod/tree/Node;)Lnet/asfun/jangod/tree/NodeList;

    move-result-object v1

    iput-object v1, v0, Lnet/asfun/jangod/tree/Node;->children:Lnet/asfun/jangod/tree/NodeList;
    :try_end_0
    .catch Lnet/asfun/jangod/parse/ParseException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v0, Ljava/lang/InternalError;

    invoke-direct {v0}, Ljava/lang/InternalError;-><init>()V

    throw v0
.end method

.method public getName()Ljava/lang/String;
    .locals 1

    iget-object v0, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    invoke-virtual {v0}, Lnet/asfun/jangod/parse/MacroToken;->getMacroName()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public refactor(Lnet/asfun/jangod/tree/TreeRebuilder;)V
    .locals 2

    iget-object v0, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    invoke-virtual {v0}, Lnet/asfun/jangod/parse/MacroToken;->getMacroName()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lnet/asfun/jangod/lib/MacroLibrary;->getMacro(Ljava/lang/String;)Lnet/asfun/jangod/lib/Macro;

    move-result-object v0

    iget-object v1, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    invoke-virtual {v1}, Lnet/asfun/jangod/parse/MacroToken;->getHelpers()Ljava/lang/String;

    move-result-object v1

    invoke-interface {v0, p0, v1, p1}, Lnet/asfun/jangod/lib/Macro;->refactor(Lnet/asfun/jangod/tree/Node;Ljava/lang/String;Lnet/asfun/jangod/tree/TreeRebuilder;)V

    return-void
.end method

.method public render(Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;
    .locals 4

    iget-object v0, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    invoke-virtual {v0}, Lnet/asfun/jangod/parse/MacroToken;->getMacroName()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lnet/asfun/jangod/lib/TagLibrary;->getTag(Ljava/lang/String;)Lnet/asfun/jangod/lib/Tag;

    move-result-object v0

    if-eqz v0, :cond_0

    sget-object v1, Lnet/asfun/jangod/util/logging;->JangodLogger:Ljava/util/logging/Logger;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "Treat macro as tag with same name >>> "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v3, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    invoke-virtual {v3}, Lnet/asfun/jangod/parse/MacroToken;->getMacroName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/logging/Logger;->fine(Ljava/lang/String;)V

    iget v1, p0, Lnet/asfun/jangod/tree/MacroNode;->level:I

    invoke-virtual {p1, v1}, Lnet/asfun/jangod/interpret/JangodInterpreter;->setLevel(I)V

    invoke-virtual {p0}, Lnet/asfun/jangod/tree/MacroNode;->children()Lnet/asfun/jangod/tree/NodeList;

    move-result-object v1

    iget-object v2, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    invoke-virtual {v2}, Lnet/asfun/jangod/parse/MacroToken;->getHelpers()Ljava/lang/String;

    move-result-object v2

    invoke-interface {v0, v1, v2, p1}, Lnet/asfun/jangod/lib/Tag;->interpreter(Lnet/asfun/jangod/tree/NodeList;Ljava/lang/String;Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    sget-object v0, Lnet/asfun/jangod/util/logging;->JangodLogger:Ljava/util/logging/Logger;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "Skiping handless macro while rendering >>> "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v2, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    invoke-virtual {v2}, Lnet/asfun/jangod/parse/MacroToken;->getMacroName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/logging/Logger;->warning(Ljava/lang/String;)V

    const-string v0, ""

    goto :goto_0
.end method

.method public toString()Ljava/lang/String;
    .locals 1

    iget-object v0, p0, Lnet/asfun/jangod/tree/MacroNode;->master:Lnet/asfun/jangod/parse/MacroToken;

    invoke-virtual {v0}, Lnet/asfun/jangod/parse/MacroToken;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

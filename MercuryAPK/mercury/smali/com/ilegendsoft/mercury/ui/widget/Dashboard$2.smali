.class Lcom/ilegendsoft/mercury/ui/widget/Dashboard$2;
.super Ljava/lang/Object;

# interfaces
.implements Lb/c/b;


# annotations
.annotation system Ldalvik/annotation/EnclosingMethod;
    value = Lcom/ilegendsoft/mercury/ui/widget/Dashboard;->i()V
.end annotation

.annotation system Ldalvik/annotation/Signature;
    value = {
        "Ljava/lang/Object;",
        "Lb/c/b",
        "<",
        "Lorg/json/JSONObject;",
        ">;"
    }
.end annotation


# instance fields
.field final synthetic a:Lcom/ilegendsoft/mercury/ui/widget/Dashboard;


# direct methods
.method constructor <init>(Lcom/ilegendsoft/mercury/ui/widget/Dashboard;)V
    .locals 0

    iput-object p1, p0, Lcom/ilegendsoft/mercury/ui/widget/Dashboard$2;->a:Lcom/ilegendsoft/mercury/ui/widget/Dashboard;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method


# virtual methods
.method public bridge synthetic a(Ljava/lang/Object;)V
    .locals 0

    check-cast p1, Lorg/json/JSONObject;

    invoke-virtual {p0, p1}, Lcom/ilegendsoft/mercury/ui/widget/Dashboard$2;->a(Lorg/json/JSONObject;)V

    return-void
.end method

.method public a(Lorg/json/JSONObject;)V
    .locals 3

    const/4 v1, 0x1

    :try_start_0
    iget-object v0, p0, Lcom/ilegendsoft/mercury/ui/widget/Dashboard$2;->a:Lcom/ilegendsoft/mercury/ui/widget/Dashboard;

    invoke-static {v0}, Lcom/ilegendsoft/mercury/ui/widget/Dashboard;->a(Lcom/ilegendsoft/mercury/ui/widget/Dashboard;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "navp"

    invoke-virtual {p1, v0}, Lorg/json/JSONObject;->getInt(Ljava/lang/String;)I

    move-result v0

    iget-object v2, p0, Lcom/ilegendsoft/mercury/ui/widget/Dashboard$2;->a:Lcom/ilegendsoft/mercury/ui/widget/Dashboard;

    if-ne v0, v1, :cond_2

    move v0, v1

    :goto_0
    invoke-static {v2, v0}, Lcom/ilegendsoft/mercury/ui/widget/Dashboard;->a(Lcom/ilegendsoft/mercury/ui/widget/Dashboard;Z)V
    :try_end_0
    .catch Lorg/json/JSONException; {:try_start_0 .. :try_end_0} :catch_0

    :cond_0
    :goto_1
    const-string v0, "fle"

    invoke-virtual {p1, v0, v1}, Lorg/json/JSONObject;->optInt(Ljava/lang/String;I)I

    move-result v0

    invoke-static {}, Lcom/ilegendsoft/mercury/g/y;->q()Lcom/ilegendsoft/mercury/g/l;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/ilegendsoft/mercury/g/l;->a(I)V

    invoke-static {}, Lcom/ilegendsoft/mercury/g/y;->a()Lcom/ilegendsoft/mercury/g/e;

    move-result-object v0

    const-string v1, "carp"

    invoke-virtual {p1, v1}, Lorg/json/JSONObject;->optString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/ilegendsoft/mercury/g/e;->d(Ljava/lang/String;)V

    invoke-static {}, Lcom/b/e;->c()Z

    move-result v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/ui/widget/Dashboard$2;->a:Lcom/ilegendsoft/mercury/ui/widget/Dashboard;

    invoke-static {v0}, Lcom/ilegendsoft/mercury/ui/widget/Dashboard;->b(Lcom/ilegendsoft/mercury/ui/widget/Dashboard;)Ljava/util/ArrayList;

    move-result-object v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/ui/widget/Dashboard$2;->a:Lcom/ilegendsoft/mercury/ui/widget/Dashboard;

    invoke-static {v0}, Lcom/ilegendsoft/mercury/ui/widget/Dashboard;->b(Lcom/ilegendsoft/mercury/ui/widget/Dashboard;)Ljava/util/ArrayList;

    move-result-object v0

    const-class v1, Lcom/ilegendsoft/mercury/ui/activities/dashboard/a;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/ui/widget/Dashboard$2;->a:Lcom/ilegendsoft/mercury/ui/widget/Dashboard;

    invoke-virtual {v0}, Lcom/ilegendsoft/mercury/ui/widget/Dashboard;->c()V

    :cond_1
    return-void

    :cond_2
    const/4 v0, 0x0

    goto :goto_0

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Lorg/json/JSONException;->printStackTrace()V

    goto :goto_1
.end method

.class public Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;
.super Ljava/lang/Thread;


# instance fields
.field private final conn:Lorg/apache/http/HttpServerConnection;

.field private final httpservice:Lorg/apache/http/protocol/HttpService;

.field private final listener:Lcom/ilegendsoft/mercury/external/wfm/serv/WebServer$OnWebServListener;


# direct methods
.method public constructor <init>(Lorg/apache/http/protocol/HttpService;Lorg/apache/http/HttpServerConnection;Lcom/ilegendsoft/mercury/external/wfm/serv/WebServer$OnWebServListener;)V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Thread;-><init>()V

    iput-object p1, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->httpservice:Lorg/apache/http/protocol/HttpService;

    iput-object p2, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->conn:Lorg/apache/http/HttpServerConnection;

    iput-object p3, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->listener:Lcom/ilegendsoft/mercury/external/wfm/serv/WebServer$OnWebServListener;

    return-void
.end method


# virtual methods
.method public run()V
    .locals 3

    new-instance v0, Lorg/apache/http/protocol/BasicHttpContext;

    invoke-direct {v0}, Lorg/apache/http/protocol/BasicHttpContext;-><init>()V

    :goto_0
    :try_start_0
    sget-boolean v1, Lcom/ilegendsoft/mercury/external/wfm/serv/WebServer;->isLoop:Z

    if-eqz v1, :cond_0

    invoke-static {}, Ljava/lang/Thread;->interrupted()Z

    move-result v1

    if-nez v1, :cond_0

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->conn:Lorg/apache/http/HttpServerConnection;

    invoke-interface {v1}, Lorg/apache/http/HttpServerConnection;->isOpen()Z

    move-result v1

    if-eqz v1, :cond_0

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->httpservice:Lorg/apache/http/protocol/HttpService;

    iget-object v2, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->conn:Lorg/apache/http/HttpServerConnection;

    invoke-virtual {v1, v2, v0}, Lorg/apache/http/protocol/HttpService;->handleRequest(Lorg/apache/http/HttpServerConnection;Lorg/apache/http/protocol/HttpContext;)V
    :try_end_0
    .catch Lorg/apache/http/ConnectionClosedException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_3
    .catch Lorg/apache/http/HttpException; {:try_start_0 .. :try_end_0} :catch_5
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    :catch_0
    move-exception v0

    :try_start_1
    invoke-virtual {v0}, Lorg/apache/http/ConnectionClosedException;->printStackTrace()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->conn:Lorg/apache/http/HttpServerConnection;

    invoke-interface {v0}, Lorg/apache/http/HttpServerConnection;->shutdown()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2

    :goto_1
    return-void

    :cond_0
    :try_start_3
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->conn:Lorg/apache/http/HttpServerConnection;

    invoke-interface {v0}, Lorg/apache/http/HttpServerConnection;->shutdown()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_1

    goto :goto_1

    :catch_1
    move-exception v0

    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    :catch_2
    move-exception v0

    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    :catch_3
    move-exception v0

    :try_start_4
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->listener:Lcom/ilegendsoft/mercury/external/wfm/serv/WebServer$OnWebServListener;

    if-eqz v1, :cond_1

    invoke-virtual {v0}, Ljava/io/IOException;->getMessage()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_1

    invoke-virtual {v0}, Ljava/io/IOException;->getMessage()Ljava/lang/String;

    move-result-object v0

    const-string v1, "File not found >>> \'"

    invoke-virtual {v0, v1}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->listener:Lcom/ilegendsoft/mercury/external/wfm/serv/WebServer$OnWebServListener;

    const/16 v1, 0x103

    invoke-interface {v0, v1}, Lcom/ilegendsoft/mercury/external/wfm/serv/WebServer$OnWebServListener;->onError(I)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :cond_1
    :try_start_5
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->conn:Lorg/apache/http/HttpServerConnection;

    invoke-interface {v0}, Lorg/apache/http/HttpServerConnection;->shutdown()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_4

    goto :goto_1

    :catch_4
    move-exception v0

    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    :catch_5
    move-exception v0

    :try_start_6
    invoke-virtual {v0}, Lorg/apache/http/HttpException;->printStackTrace()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->conn:Lorg/apache/http/HttpServerConnection;

    invoke-interface {v0}, Lorg/apache/http/HttpServerConnection;->shutdown()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_6

    goto :goto_1

    :catch_6
    move-exception v0

    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    :catchall_0
    move-exception v0

    :try_start_8
    iget-object v1, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/WorkerThread;->conn:Lorg/apache/http/HttpServerConnection;

    invoke-interface {v1}, Lorg/apache/http/HttpServerConnection;->shutdown()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_7

    :goto_2
    throw v0

    :catch_7
    move-exception v1

    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_2
.end method

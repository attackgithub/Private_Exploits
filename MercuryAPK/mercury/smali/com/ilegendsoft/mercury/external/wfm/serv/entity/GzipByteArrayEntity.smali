.class public Lcom/ilegendsoft/mercury/external/wfm/serv/entity/GzipByteArrayEntity;
.super Lcom/ilegendsoft/mercury/external/wfm/serv/entity/GzipEntity;


# instance fields
.field protected final byteArray:[B

.field protected final isGzipByteArray:Z


# direct methods
.method public constructor <init>([BZ)V
    .locals 2

    invoke-direct {p0}, Lcom/ilegendsoft/mercury/external/wfm/serv/entity/GzipEntity;-><init>()V

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "byteArray may not be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iput-object p1, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/entity/GzipByteArrayEntity;->byteArray:[B

    iput-boolean p2, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/entity/GzipByteArrayEntity;->isGzipByteArray:Z

    return-void
.end method


# virtual methods
.method public getContentLength()J
    .locals 2

    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/entity/GzipByteArrayEntity;->isGzipByteArray:Z

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/entity/GzipByteArrayEntity;->byteArray:[B

    array-length v0, v0

    int-to-long v0, v0

    :goto_0
    return-wide v0

    :cond_0
    const-wide/16 v0, -0x1

    goto :goto_0
.end method

.method public writeTo(Ljava/io/OutputStream;)V
    .locals 2

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Output stream may not be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    new-instance v1, Ljava/io/ByteArrayInputStream;

    iget-object v0, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/entity/GzipByteArrayEntity;->byteArray:[B

    invoke-direct {v1, v0}, Ljava/io/ByteArrayInputStream;-><init>([B)V

    iget-boolean v0, p0, Lcom/ilegendsoft/mercury/external/wfm/serv/entity/GzipByteArrayEntity;->isGzipByteArray:Z

    if-nez v0, :cond_1

    new-instance v0, Ljava/util/zip/GZIPOutputStream;

    invoke-direct {v0, p1}, Ljava/util/zip/GZIPOutputStream;-><init>(Ljava/io/OutputStream;)V

    move-object p1, v0

    :cond_1
    :try_start_0
    invoke-virtual {p0, v1, p1}, Lcom/ilegendsoft/mercury/external/wfm/serv/entity/GzipByteArrayEntity;->copy(Ljava/io/InputStream;Ljava/io/OutputStream;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-virtual {v1}, Ljava/io/InputStream;->close()V

    return-void

    :catchall_0
    move-exception v0

    invoke-virtual {v1}, Ljava/io/InputStream;->close()V

    throw v0
.end method

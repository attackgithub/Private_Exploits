.class Lcom/e/a/a/a/o;
.super Ljava/lang/Object;

# interfaces
.implements Lcom/e/a/y;


# instance fields
.field final synthetic a:Lcom/e/a/a/a/n;

.field private final b:I

.field private final c:Lcom/e/a/ae;

.field private d:I


# direct methods
.method constructor <init>(Lcom/e/a/a/a/n;ILcom/e/a/ae;)V
    .locals 0

    iput-object p1, p0, Lcom/e/a/a/a/o;->a:Lcom/e/a/a/a/n;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput p2, p0, Lcom/e/a/a/a/o;->b:I

    iput-object p3, p0, Lcom/e/a/a/a/o;->c:Lcom/e/a/ae;

    return-void
.end method


# virtual methods
.method public a(Lcom/e/a/ae;)Lcom/e/a/ah;
    .locals 5

    const/4 v4, 0x1

    iget v0, p0, Lcom/e/a/a/a/o;->d:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/e/a/a/a/o;->d:I

    iget v0, p0, Lcom/e/a/a/a/o;->b:I

    if-lez v0, :cond_2

    iget-object v0, p0, Lcom/e/a/a/a/o;->a:Lcom/e/a/a/a/n;

    iget-object v0, v0, Lcom/e/a/a/a/n;->a:Lcom/e/a/ac;

    invoke-virtual {v0}, Lcom/e/a/ac;->v()Ljava/util/List;

    move-result-object v0

    iget v1, p0, Lcom/e/a/a/a/o;->b:I

    add-int/lit8 v1, v1, -0x1

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/e/a/x;

    invoke-virtual {p0}, Lcom/e/a/a/a/o;->a()Lcom/e/a/o;

    move-result-object v1

    invoke-virtual {v1}, Lcom/e/a/o;->c()Lcom/e/a/ak;

    move-result-object v1

    invoke-virtual {v1}, Lcom/e/a/ak;->a()Lcom/e/a/a;

    move-result-object v1

    invoke-virtual {p1}, Lcom/e/a/ae;->a()Ljava/net/URL;

    move-result-object v2

    invoke-virtual {v2}, Ljava/net/URL;->getHost()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1}, Lcom/e/a/a;->a()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_0

    invoke-virtual {p1}, Lcom/e/a/ae;->a()Ljava/net/URL;

    move-result-object v2

    invoke-static {v2}, Lcom/e/a/a/p;->a(Ljava/net/URL;)I

    move-result v2

    invoke-virtual {v1}, Lcom/e/a/a;->b()I

    move-result v1

    if-eq v2, v1, :cond_1

    :cond_0
    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "network interceptor "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, " must retain the same host and port"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_1
    iget v1, p0, Lcom/e/a/a/a/o;->d:I

    if-le v1, v4, :cond_2

    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "network interceptor "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, " must call proceed() exactly once"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_2
    iget v0, p0, Lcom/e/a/a/a/o;->b:I

    iget-object v1, p0, Lcom/e/a/a/a/o;->a:Lcom/e/a/a/a/n;

    iget-object v1, v1, Lcom/e/a/a/a/n;->a:Lcom/e/a/ac;

    invoke-virtual {v1}, Lcom/e/a/ac;->v()Ljava/util/List;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    if-ge v0, v1, :cond_4

    new-instance v2, Lcom/e/a/a/a/o;

    iget-object v0, p0, Lcom/e/a/a/a/o;->a:Lcom/e/a/a/a/n;

    iget v1, p0, Lcom/e/a/a/a/o;->b:I

    add-int/lit8 v1, v1, 0x1

    invoke-direct {v2, v0, v1, p1}, Lcom/e/a/a/a/o;-><init>(Lcom/e/a/a/a/n;ILcom/e/a/ae;)V

    iget-object v0, p0, Lcom/e/a/a/a/o;->a:Lcom/e/a/a/a/n;

    iget-object v0, v0, Lcom/e/a/a/a/n;->a:Lcom/e/a/ac;

    invoke-virtual {v0}, Lcom/e/a/ac;->v()Ljava/util/List;

    move-result-object v0

    iget v1, p0, Lcom/e/a/a/a/o;->b:I

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/e/a/x;

    invoke-interface {v0, v2}, Lcom/e/a/x;->a(Lcom/e/a/y;)Lcom/e/a/ah;

    move-result-object v1

    iget v2, v2, Lcom/e/a/a/a/o;->d:I

    if-eq v2, v4, :cond_3

    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "network interceptor "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, " must call proceed() exactly once"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_3
    move-object v0, v1

    :goto_0
    return-object v0

    :cond_4
    iget-object v0, p0, Lcom/e/a/a/a/o;->a:Lcom/e/a/a/a/n;

    invoke-static {v0}, Lcom/e/a/a/a/n;->b(Lcom/e/a/a/a/n;)Lcom/e/a/a/a/y;

    move-result-object v0

    invoke-interface {v0, p1}, Lcom/e/a/a/a/y;->a(Lcom/e/a/ae;)V

    iget-object v0, p0, Lcom/e/a/a/a/o;->a:Lcom/e/a/a/a/n;

    invoke-virtual {v0}, Lcom/e/a/a/a/n;->c()Z

    move-result v0

    if-eqz v0, :cond_5

    invoke-virtual {p1}, Lcom/e/a/ae;->f()Lcom/e/a/ag;

    move-result-object v0

    if-eqz v0, :cond_5

    iget-object v0, p0, Lcom/e/a/a/a/o;->a:Lcom/e/a/a/a/n;

    invoke-static {v0}, Lcom/e/a/a/a/n;->b(Lcom/e/a/a/a/n;)Lcom/e/a/a/a/y;

    move-result-object v0

    invoke-virtual {p1}, Lcom/e/a/ae;->f()Lcom/e/a/ag;

    move-result-object v1

    invoke-virtual {v1}, Lcom/e/a/ag;->b()J

    move-result-wide v2

    invoke-interface {v0, p1, v2, v3}, Lcom/e/a/a/a/y;->a(Lcom/e/a/ae;J)La/r;

    move-result-object v0

    invoke-static {v0}, La/m;->a(La/r;)La/e;

    move-result-object v0

    invoke-virtual {p1}, Lcom/e/a/ae;->f()Lcom/e/a/ag;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/e/a/ag;->a(La/e;)V

    invoke-interface {v0}, La/e;->close()V

    :cond_5
    iget-object v0, p0, Lcom/e/a/a/a/o;->a:Lcom/e/a/a/a/n;

    invoke-static {v0}, Lcom/e/a/a/a/n;->c(Lcom/e/a/a/a/n;)Lcom/e/a/ah;

    move-result-object v0

    goto :goto_0
.end method

.method public a()Lcom/e/a/o;
    .locals 1

    iget-object v0, p0, Lcom/e/a/a/a/o;->a:Lcom/e/a/a/a/n;

    invoke-static {v0}, Lcom/e/a/a/a/n;->a(Lcom/e/a/a/a/n;)Lcom/e/a/o;

    move-result-object v0

    return-object v0
.end method

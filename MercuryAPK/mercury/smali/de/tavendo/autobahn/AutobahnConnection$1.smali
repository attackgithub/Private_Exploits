.class Lde/tavendo/autobahn/AutobahnConnection$1;
.super Lde/tavendo/autobahn/WebSocketHandler;


# annotations
.annotation system Ldalvik/annotation/EnclosingMethod;
    value = Lde/tavendo/autobahn/AutobahnConnection;->connect(Ljava/lang/String;Lde/tavendo/autobahn/Autobahn$SessionHandler;Lde/tavendo/autobahn/AutobahnOptions;)V
.end annotation


# instance fields
.field final synthetic this$0:Lde/tavendo/autobahn/AutobahnConnection;


# direct methods
.method constructor <init>(Lde/tavendo/autobahn/AutobahnConnection;)V
    .locals 0

    iput-object p1, p0, Lde/tavendo/autobahn/AutobahnConnection$1;->this$0:Lde/tavendo/autobahn/AutobahnConnection;

    invoke-direct {p0}, Lde/tavendo/autobahn/WebSocketHandler;-><init>()V

    return-void
.end method


# virtual methods
.method public onClose(ILjava/lang/String;)V
    .locals 2

    iget-object v0, p0, Lde/tavendo/autobahn/AutobahnConnection$1;->this$0:Lde/tavendo/autobahn/AutobahnConnection;

    # getter for: Lde/tavendo/autobahn/AutobahnConnection;->mSessionHandler:Lde/tavendo/autobahn/Autobahn$SessionHandler;
    invoke-static {v0}, Lde/tavendo/autobahn/AutobahnConnection;->access$0(Lde/tavendo/autobahn/AutobahnConnection;)Lde/tavendo/autobahn/Autobahn$SessionHandler;

    move-result-object v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lde/tavendo/autobahn/AutobahnConnection$1;->this$0:Lde/tavendo/autobahn/AutobahnConnection;

    # getter for: Lde/tavendo/autobahn/AutobahnConnection;->mSessionHandler:Lde/tavendo/autobahn/Autobahn$SessionHandler;
    invoke-static {v0}, Lde/tavendo/autobahn/AutobahnConnection;->access$0(Lde/tavendo/autobahn/AutobahnConnection;)Lde/tavendo/autobahn/Autobahn$SessionHandler;

    move-result-object v0

    invoke-interface {v0, p1, p2}, Lde/tavendo/autobahn/Autobahn$SessionHandler;->onClose(ILjava/lang/String;)V

    :goto_0
    return-void

    :cond_0
    # getter for: Lde/tavendo/autobahn/AutobahnConnection;->TAG:Ljava/lang/String;
    invoke-static {}, Lde/tavendo/autobahn/AutobahnConnection;->access$1()Ljava/lang/String;

    move-result-object v0

    const-string v1, "could not call onClose() .. handler already NULL"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0
.end method

.method public onOpen()V
    .locals 2

    iget-object v0, p0, Lde/tavendo/autobahn/AutobahnConnection$1;->this$0:Lde/tavendo/autobahn/AutobahnConnection;

    # getter for: Lde/tavendo/autobahn/AutobahnConnection;->mSessionHandler:Lde/tavendo/autobahn/Autobahn$SessionHandler;
    invoke-static {v0}, Lde/tavendo/autobahn/AutobahnConnection;->access$0(Lde/tavendo/autobahn/AutobahnConnection;)Lde/tavendo/autobahn/Autobahn$SessionHandler;

    move-result-object v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lde/tavendo/autobahn/AutobahnConnection$1;->this$0:Lde/tavendo/autobahn/AutobahnConnection;

    # getter for: Lde/tavendo/autobahn/AutobahnConnection;->mSessionHandler:Lde/tavendo/autobahn/Autobahn$SessionHandler;
    invoke-static {v0}, Lde/tavendo/autobahn/AutobahnConnection;->access$0(Lde/tavendo/autobahn/AutobahnConnection;)Lde/tavendo/autobahn/Autobahn$SessionHandler;

    move-result-object v0

    invoke-interface {v0}, Lde/tavendo/autobahn/Autobahn$SessionHandler;->onOpen()V

    :goto_0
    return-void

    :cond_0
    # getter for: Lde/tavendo/autobahn/AutobahnConnection;->TAG:Ljava/lang/String;
    invoke-static {}, Lde/tavendo/autobahn/AutobahnConnection;->access$1()Ljava/lang/String;

    move-result-object v0

    const-string v1, "could not call onOpen() .. handler already NULL"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0
.end method

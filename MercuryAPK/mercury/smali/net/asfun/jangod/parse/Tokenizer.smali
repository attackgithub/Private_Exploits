.class public Lnet/asfun/jangod/parse/Tokenizer;
.super Ljava/lang/Object;


# instance fields
.field private currPost:I

.field private inComment:I

.field private is:[C

.field private lastStart:I

.field private length:I

.field private tokenKind:I

.field private tokenLength:I

.field private tokenStart:I


# direct methods
.method public constructor <init>()V
    .locals 2

    const/4 v1, 0x0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    const/4 v0, -0x1

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->length:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->lastStart:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->inComment:I

    return-void
.end method

.method private getEndToken()Lnet/asfun/jangod/parse/Token;
    .locals 4

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    sub-int/2addr v0, v1

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    const/4 v0, 0x0

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->inComment:I

    if-lez v1, :cond_0

    const/16 v0, 0x23

    :cond_0
    iget-object v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->is:[C

    iget v2, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    iget v3, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    invoke-static {v1, v2, v3}, Ljava/lang/String;->valueOf([CII)Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lnet/asfun/jangod/parse/Token;->newToken(ILjava/lang/String;)Lnet/asfun/jangod/parse/Token;

    move-result-object v0

    return-object v0
.end method

.method private matchToken(C)Z
    .locals 5

    const/16 v4, 0x7d

    const/16 v3, 0x7b

    const/4 v0, 0x1

    const/4 v1, 0x0

    if-ne p1, v3, :cond_2

    iget v2, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    if-ne v2, v4, :cond_1

    :cond_0
    :goto_0
    return v0

    :cond_1
    move v0, v1

    goto :goto_0

    :cond_2
    if-ne p1, v4, :cond_3

    iget v2, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    if-eq v2, v3, :cond_0

    move v0, v1

    goto :goto_0

    :cond_3
    iget v2, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    if-eq p1, v2, :cond_0

    move v0, v1

    goto :goto_0
.end method

.method private newToken(I)Lnet/asfun/jangod/parse/Token;
    .locals 3

    iget-object v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->is:[C

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->lastStart:I

    iget v2, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    invoke-static {v0, v1, v2}, Ljava/lang/String;->copyValueOf([CII)Ljava/lang/String;

    move-result-object v0

    invoke-static {p1, v0}, Lnet/asfun/jangod/parse/Token;->newToken(ILjava/lang/String;)Lnet/asfun/jangod/parse/Token;

    move-result-object v0

    return-object v0
.end method


# virtual methods
.method public getNextToken()Lnet/asfun/jangod/parse/Token;
    .locals 5

    const/16 v4, 0x7d

    const/4 v3, 0x0

    :cond_0
    :goto_0
    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->length:I

    if-lt v0, v1, :cond_1

    const/4 v0, 0x0

    :goto_1
    return-object v0

    :cond_1
    iget-object v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->is:[C

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    add-int/lit8 v2, v1, 0x1

    iput v2, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    aget-char v0, v0, v1

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iget v2, p0, Lnet/asfun/jangod/parse/Tokenizer;->length:I

    if-ne v1, v2, :cond_2

    invoke-direct {p0}, Lnet/asfun/jangod/parse/Tokenizer;->getEndToken()Lnet/asfun/jangod/parse/Token;

    move-result-object v0

    goto :goto_1

    :cond_2
    sparse-switch v0, :sswitch_data_0

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    const/4 v1, -0x1

    if-ne v0, v1, :cond_0

    iput v3, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    goto :goto_0

    :sswitch_0
    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->length:I

    if-ge v0, v1, :cond_6

    iget-object v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->is:[C

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    aget-char v0, v0, v1

    sparse-switch v0, :sswitch_data_1

    goto :goto_0

    :sswitch_1
    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->inComment:I

    if-gtz v1, :cond_0

    invoke-direct {p0, v0}, Lnet/asfun/jangod/parse/Tokenizer;->matchToken(C)Z

    move-result v1

    if-nez v1, :cond_3

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    if-gtz v1, :cond_0

    :cond_3
    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iget v2, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    sub-int/2addr v1, v2

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    if-lez v1, :cond_5

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->lastStart:I

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    invoke-direct {p0, v3}, Lnet/asfun/jangod/parse/Tokenizer;->newToken(I)Lnet/asfun/jangod/parse/Token;

    move-result-object v0

    goto :goto_1

    :sswitch_2
    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->inComment:I

    add-int/lit8 v2, v1, 0x1

    iput v2, p0, Lnet/asfun/jangod/parse/Tokenizer;->inComment:I

    if-gtz v1, :cond_0

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iget v2, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    sub-int/2addr v1, v2

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    if-lez v1, :cond_4

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->lastStart:I

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->inComment:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->inComment:I

    invoke-direct {p0, v3}, Lnet/asfun/jangod/parse/Tokenizer;->newToken(I)Lnet/asfun/jangod/parse/Token;

    move-result-object v0

    goto/16 :goto_1

    :cond_4
    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    goto/16 :goto_0

    :cond_5
    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    goto/16 :goto_0

    :cond_6
    invoke-direct {p0}, Lnet/asfun/jangod/parse/Tokenizer;->getEndToken()Lnet/asfun/jangod/parse/Token;

    move-result-object v0

    goto/16 :goto_1

    :sswitch_3
    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->inComment:I

    if-gtz v1, :cond_0

    invoke-direct {p0, v0}, Lnet/asfun/jangod/parse/Tokenizer;->matchToken(C)Z

    move-result v0

    if-eqz v0, :cond_0

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->length:I

    if-ge v0, v1, :cond_7

    iget-object v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->is:[C

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    aget-char v0, v0, v1

    if-ne v0, v4, :cond_0

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    sub-int/2addr v0, v1

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    if-lez v0, :cond_0

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->lastStart:I

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    iput v3, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    invoke-direct {p0, v0}, Lnet/asfun/jangod/parse/Tokenizer;->newToken(I)Lnet/asfun/jangod/parse/Token;

    move-result-object v0

    goto/16 :goto_1

    :cond_7
    invoke-direct {p0}, Lnet/asfun/jangod/parse/Tokenizer;->getEndToken()Lnet/asfun/jangod/parse/Token;

    move-result-object v0

    goto/16 :goto_1

    :sswitch_4
    invoke-direct {p0, v0}, Lnet/asfun/jangod/parse/Tokenizer;->matchToken(C)Z

    move-result v0

    if-eqz v0, :cond_0

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->length:I

    if-ge v0, v1, :cond_8

    iget-object v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->is:[C

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    aget-char v0, v0, v1

    if-ne v0, v4, :cond_0

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->inComment:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->inComment:I

    if-gtz v0, :cond_0

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iget v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    sub-int/2addr v0, v1

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenLength:I

    if-lez v0, :cond_0

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->lastStart:I

    iget v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    iput v3, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    const/16 v0, 0x23

    invoke-direct {p0, v0}, Lnet/asfun/jangod/parse/Tokenizer;->newToken(I)Lnet/asfun/jangod/parse/Token;

    move-result-object v0

    goto/16 :goto_1

    :cond_8
    invoke-direct {p0}, Lnet/asfun/jangod/parse/Tokenizer;->getEndToken()Lnet/asfun/jangod/parse/Token;

    move-result-object v0

    goto/16 :goto_1

    :sswitch_data_0
    .sparse-switch
        0x21 -> :sswitch_3
        0x23 -> :sswitch_4
        0x25 -> :sswitch_3
        0x7b -> :sswitch_0
        0x7d -> :sswitch_3
    .end sparse-switch

    :sswitch_data_1
    .sparse-switch
        0x21 -> :sswitch_1
        0x23 -> :sswitch_2
        0x25 -> :sswitch_1
        0x7b -> :sswitch_1
    .end sparse-switch
.end method

.method public init(Ljava/lang/String;)V
    .locals 2

    const/4 v1, 0x0

    invoke-virtual {p1}, Ljava/lang/String;->toCharArray()[C

    move-result-object v0

    iput-object v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->is:[C

    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->length:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->currPost:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenStart:I

    const/4 v0, -0x1

    iput v0, p0, Lnet/asfun/jangod/parse/Tokenizer;->tokenKind:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->lastStart:I

    iput v1, p0, Lnet/asfun/jangod/parse/Tokenizer;->inComment:I

    return-void
.end method

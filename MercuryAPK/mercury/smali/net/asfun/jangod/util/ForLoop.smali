.class public Lnet/asfun/jangod/util/ForLoop;
.super Ljava/lang/Object;

# interfaces
.implements Ljava/util/Iterator;


# instance fields
.field private counter:I

.field private first:Z

.field private index:I

.field private it:Ljava/util/Iterator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Iterator",
            "<",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private last:Z

.field private length:I

.field private revcounter:I

.field private revindex:I


# direct methods
.method public constructor <init>(Ljava/util/Iterator;)V
    .locals 4

    const/4 v3, 0x1

    const/4 v2, 0x0

    const/16 v1, -0x9

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, -0x1

    iput v0, p0, Lnet/asfun/jangod/util/ForLoop;->index:I

    iput v2, p0, Lnet/asfun/jangod/util/ForLoop;->counter:I

    iput v1, p0, Lnet/asfun/jangod/util/ForLoop;->revindex:I

    iput v1, p0, Lnet/asfun/jangod/util/ForLoop;->revcounter:I

    iput v1, p0, Lnet/asfun/jangod/util/ForLoop;->length:I

    iput-boolean v3, p0, Lnet/asfun/jangod/util/ForLoop;->first:Z

    iput-object p1, p0, Lnet/asfun/jangod/util/ForLoop;->it:Ljava/util/Iterator;

    iget-object v0, p0, Lnet/asfun/jangod/util/ForLoop;->it:Ljava/util/Iterator;

    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    iput-boolean v2, p0, Lnet/asfun/jangod/util/ForLoop;->last:Z

    :goto_0
    return-void

    :cond_0
    iput v2, p0, Lnet/asfun/jangod/util/ForLoop;->length:I

    iput v3, p0, Lnet/asfun/jangod/util/ForLoop;->revindex:I

    const/4 v0, 0x2

    iput v0, p0, Lnet/asfun/jangod/util/ForLoop;->revcounter:I

    iput-boolean v3, p0, Lnet/asfun/jangod/util/ForLoop;->last:Z

    goto :goto_0
.end method

.method public constructor <init>(Ljava/util/Iterator;I)V
    .locals 5

    const/4 v4, 0x2

    const/4 v3, 0x0

    const/4 v2, 0x1

    const/16 v1, -0x9

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, -0x1

    iput v0, p0, Lnet/asfun/jangod/util/ForLoop;->index:I

    iput v3, p0, Lnet/asfun/jangod/util/ForLoop;->counter:I

    iput v1, p0, Lnet/asfun/jangod/util/ForLoop;->revindex:I

    iput v1, p0, Lnet/asfun/jangod/util/ForLoop;->revcounter:I

    iput v1, p0, Lnet/asfun/jangod/util/ForLoop;->length:I

    iput-boolean v2, p0, Lnet/asfun/jangod/util/ForLoop;->first:Z

    iput p2, p0, Lnet/asfun/jangod/util/ForLoop;->length:I

    if-ge p2, v4, :cond_0

    iput v2, p0, Lnet/asfun/jangod/util/ForLoop;->revindex:I

    iput v4, p0, Lnet/asfun/jangod/util/ForLoop;->revcounter:I

    iput-boolean v2, p0, Lnet/asfun/jangod/util/ForLoop;->last:Z

    :goto_0
    iput-object p1, p0, Lnet/asfun/jangod/util/ForLoop;->it:Ljava/util/Iterator;

    return-void

    :cond_0
    iput p2, p0, Lnet/asfun/jangod/util/ForLoop;->revindex:I

    add-int/lit8 v0, p2, 0x1

    iput v0, p0, Lnet/asfun/jangod/util/ForLoop;->revcounter:I

    iput-boolean v3, p0, Lnet/asfun/jangod/util/ForLoop;->last:Z

    goto :goto_0
.end method


# virtual methods
.method public getCounter()I
    .locals 1

    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->counter:I

    return v0
.end method

.method public getIndex()I
    .locals 1

    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->index:I

    return v0
.end method

.method public getLength()I
    .locals 2

    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->revcounter:I

    const/16 v1, -0x9

    if-ne v0, v1, :cond_0

    sget-object v0, Lnet/asfun/jangod/util/logging;->JangodLogger:Ljava/util/logging/Logger;

    const-string v1, "can\'t compute items\' length while looping."

    invoke-virtual {v0, v1}, Ljava/util/logging/Logger;->warning(Ljava/lang/String;)V

    :cond_0
    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->length:I

    return v0
.end method

.method public getRevcounter()I
    .locals 2

    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->revcounter:I

    const/16 v1, -0x9

    if-ne v0, v1, :cond_0

    sget-object v0, Lnet/asfun/jangod/util/logging;->JangodLogger:Ljava/util/logging/Logger;

    const-string v1, "can\'t compute items\' length while looping."

    invoke-virtual {v0, v1}, Ljava/util/logging/Logger;->warning(Ljava/lang/String;)V

    :cond_0
    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->revcounter:I

    return v0
.end method

.method public getRevindex()I
    .locals 2

    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->revindex:I

    const/16 v1, -0x9

    if-ne v0, v1, :cond_0

    sget-object v0, Lnet/asfun/jangod/util/logging;->JangodLogger:Ljava/util/logging/Logger;

    const-string v1, "can\'t compute items\' length while looping."

    invoke-virtual {v0, v1}, Ljava/util/logging/Logger;->warning(Ljava/lang/String;)V

    :cond_0
    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->revindex:I

    return v0
.end method

.method public hasNext()Z
    .locals 1

    iget-object v0, p0, Lnet/asfun/jangod/util/ForLoop;->it:Ljava/util/Iterator;

    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    return v0
.end method

.method public isFirst()Z
    .locals 1

    iget-boolean v0, p0, Lnet/asfun/jangod/util/ForLoop;->first:Z

    return v0
.end method

.method public isLast()Z
    .locals 1

    iget-boolean v0, p0, Lnet/asfun/jangod/util/ForLoop;->last:Z

    return v0
.end method

.method public next()Ljava/lang/Object;
    .locals 4

    const/4 v3, 0x1

    const/4 v2, 0x0

    iget-object v0, p0, Lnet/asfun/jangod/util/ForLoop;->it:Ljava/util/Iterator;

    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_3

    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->index:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lnet/asfun/jangod/util/ForLoop;->index:I

    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->counter:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lnet/asfun/jangod/util/ForLoop;->counter:I

    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->length:I

    const/16 v1, -0x9

    if-eq v0, v1, :cond_0

    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->revindex:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lnet/asfun/jangod/util/ForLoop;->revindex:I

    iget v0, p0, Lnet/asfun/jangod/util/ForLoop;->revcounter:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lnet/asfun/jangod/util/ForLoop;->revcounter:I

    :cond_0
    iget-object v0, p0, Lnet/asfun/jangod/util/ForLoop;->it:Ljava/util/Iterator;

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    iget-object v1, p0, Lnet/asfun/jangod/util/ForLoop;->it:Ljava/util/Iterator;

    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-nez v1, :cond_1

    iput-boolean v3, p0, Lnet/asfun/jangod/util/ForLoop;->last:Z

    iget v1, p0, Lnet/asfun/jangod/util/ForLoop;->counter:I

    iput v1, p0, Lnet/asfun/jangod/util/ForLoop;->length:I

    iput v2, p0, Lnet/asfun/jangod/util/ForLoop;->revindex:I

    iput v3, p0, Lnet/asfun/jangod/util/ForLoop;->revcounter:I

    :cond_1
    iget v1, p0, Lnet/asfun/jangod/util/ForLoop;->index:I

    if-lez v1, :cond_2

    iput-boolean v2, p0, Lnet/asfun/jangod/util/ForLoop;->first:Z

    :cond_2
    :goto_0
    return-object v0

    :cond_3
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public remove()V
    .locals 1

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    invoke-direct {v0}, Ljava/lang/UnsupportedOperationException;-><init>()V

    throw v0
.end method

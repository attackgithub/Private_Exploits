.class public Lnet/asfun/jangod/lib/tag/IncludeTag;
.super Ljava/lang/Object;

# interfaces
.implements Lnet/asfun/jangod/lib/Tag;


# instance fields
.field final TAGNAME:Ljava/lang/String;


# direct methods
.method public constructor <init>()V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const-string v0, "include"

    iput-object v0, p0, Lnet/asfun/jangod/lib/tag/IncludeTag;->TAGNAME:Ljava/lang/String;

    return-void
.end method


# virtual methods
.method public getEndTagName()Ljava/lang/String;
    .locals 1

    const/4 v0, 0x0

    return-object v0
.end method

.method public getName()Ljava/lang/String;
    .locals 1

    const-string v0, "include"

    return-object v0
.end method

.method public interpreter(Lnet/asfun/jangod/tree/NodeList;Ljava/lang/String;Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;
    .locals 5

    const/4 v2, 0x1

    new-instance v0, Lnet/asfun/jangod/util/HelperStringTokenizer;

    invoke-direct {v0, p2}, Lnet/asfun/jangod/util/HelperStringTokenizer;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0}, Lnet/asfun/jangod/util/HelperStringTokenizer;->allTokens()[Ljava/lang/String;

    move-result-object v0

    array-length v1, v0

    if-eq v1, v2, :cond_0

    new-instance v1, Lnet/asfun/jangod/interpret/InterpretException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "Tag \'include\' expects 1 helper >>> "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    array-length v0, v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Lnet/asfun/jangod/interpret/InterpretException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_0
    const/4 v1, 0x0

    aget-object v0, v0, v1

    invoke-virtual {p3, v0}, Lnet/asfun/jangod/interpret/JangodInterpreter;->resolveString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    :try_start_0
    invoke-virtual {p3}, Lnet/asfun/jangod/interpret/JangodInterpreter;->getWorkspace()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p3}, Lnet/asfun/jangod/interpret/JangodInterpreter;->getConfiguration()Lnet/asfun/jangod/base/Configuration;

    move-result-object v2

    invoke-virtual {v2}, Lnet/asfun/jangod/base/Configuration;->getWorkspace()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v1, v2}, Lnet/asfun/jangod/base/ResourceManager;->getFullName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p3}, Lnet/asfun/jangod/interpret/JangodInterpreter;->getApplication()Lnet/asfun/jangod/base/Application;

    move-result-object v1

    invoke-virtual {p3}, Lnet/asfun/jangod/interpret/JangodInterpreter;->getConfiguration()Lnet/asfun/jangod/base/Configuration;

    move-result-object v2

    invoke-virtual {v2}, Lnet/asfun/jangod/base/Configuration;->getEncoding()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v0, v2}, Lnet/asfun/jangod/base/Application;->getParseResult(Ljava/lang/String;Ljava/lang/String;)Lnet/asfun/jangod/tree/Node;

    move-result-object v0

    invoke-virtual {p3}, Lnet/asfun/jangod/interpret/JangodInterpreter;->clone()Lnet/asfun/jangod/interpret/JangodInterpreter;

    move-result-object v1

    const-string v2, "\'IS\"INSERT"

    const/4 v3, 0x1

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v3

    const/4 v4, 0x1

    invoke-virtual {v1, v2, v3, v4}, Lnet/asfun/jangod/interpret/JangodInterpreter;->assignRuntimeScope(Ljava/lang/String;Ljava/lang/Object;I)V

    invoke-virtual {v1, v0}, Lnet/asfun/jangod/interpret/JangodInterpreter;->render(Lnet/asfun/jangod/tree/Node;)Ljava/lang/String;
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Lnet/asfun/jangod/interpret/InterpretException;

    invoke-virtual {v0}, Ljava/io/IOException;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Lnet/asfun/jangod/interpret/InterpretException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.class public Lnet/asfun/jangod/lib/tag/IfTag;
.super Ljava/lang/Object;

# interfaces
.implements Lnet/asfun/jangod/lib/Tag;


# instance fields
.field final ENDTAGNAME:Ljava/lang/String;

.field final TAGNAME:Ljava/lang/String;


# direct methods
.method public constructor <init>()V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const-string v0, "if"

    iput-object v0, p0, Lnet/asfun/jangod/lib/tag/IfTag;->TAGNAME:Ljava/lang/String;

    const-string v0, "endif"

    iput-object v0, p0, Lnet/asfun/jangod/lib/tag/IfTag;->ENDTAGNAME:Ljava/lang/String;

    return-void
.end method


# virtual methods
.method public getEndTagName()Ljava/lang/String;
    .locals 1

    const-string v0, "endif"

    return-object v0
.end method

.method public getName()Ljava/lang/String;
    .locals 1

    const-string v0, "if"

    return-object v0
.end method

.method public interpreter(Lnet/asfun/jangod/tree/NodeList;Ljava/lang/String;Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;
    .locals 5

    invoke-virtual {p2}, Ljava/lang/String;->length()I

    move-result v0

    if-nez v0, :cond_0

    new-instance v0, Lnet/asfun/jangod/interpret/InterpretException;

    const-string v1, "Tag \'if\' expects 1 helper >>> 0"

    invoke-direct {v0, v1}, Lnet/asfun/jangod/interpret/InterpretException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    invoke-static {p2, p3}, Lnet/asfun/jangod/interpret/VariableFilter;->compute(Ljava/lang/String;Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/Object;

    move-result-object v0

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    invoke-static {v0}, Lnet/asfun/jangod/util/ObjectTruthValue;->evaluate(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-virtual {p1}, Lnet/asfun/jangod/tree/NodeList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-nez v0, :cond_2

    :cond_1
    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0

    :cond_2
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lnet/asfun/jangod/tree/Node;

    const-string v3, "else"

    invoke-virtual {v0}, Lnet/asfun/jangod/tree/Node;->getName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_1

    invoke-virtual {v0, p3}, Lnet/asfun/jangod/tree/Node;->render(Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    goto :goto_0

    :cond_3
    const/4 v0, 0x0

    invoke-virtual {p1}, Lnet/asfun/jangod/tree/NodeList;->iterator()Ljava/util/Iterator;

    move-result-object v3

    move v1, v0

    :cond_4
    :goto_1
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lnet/asfun/jangod/tree/Node;

    if-eqz v1, :cond_5

    invoke-virtual {v0, p3}, Lnet/asfun/jangod/tree/Node;->render(Lnet/asfun/jangod/interpret/JangodInterpreter;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    :cond_5
    const-string v4, "else"

    invoke-virtual {v0}, Lnet/asfun/jangod/tree/Node;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_4

    const/4 v0, 0x1

    move v1, v0

    goto :goto_1
.end method

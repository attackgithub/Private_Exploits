.class public Lae/com/sun/imageio/stream/StreamCloser;
.super Ljava/lang/Object;
.source "StreamCloser.java"


# static fields
.field private static streamCloser:Ljava/lang/Thread;

.field private static toCloseQueue:Ljava/util/WeakHashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/WeakHashMap",
            "<",
            "Lae/javax/imageio/stream/ImageInputStream;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method public constructor <init>()V
    .locals 0

    .prologue
    .line 44
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method static synthetic access$0()Ljava/util/WeakHashMap;
    .locals 1

    .prologue
    .line 46
    sget-object v0, Lae/com/sun/imageio/stream/StreamCloser;->toCloseQueue:Ljava/util/WeakHashMap;

    return-object v0
.end method

.method static synthetic access$1(Ljava/lang/Thread;)V
    .locals 0

    .prologue
    .line 47
    sput-object p0, Lae/com/sun/imageio/stream/StreamCloser;->streamCloser:Ljava/lang/Thread;

    return-void
.end method

.method static synthetic access$2()Ljava/lang/Thread;
    .locals 1

    .prologue
    .line 47
    sget-object v0, Lae/com/sun/imageio/stream/StreamCloser;->streamCloser:Ljava/lang/Thread;

    return-object v0
.end method

.method public static addToQueue(Lae/javax/imageio/stream/ImageInputStream;)V
    .locals 4
    .param p0, "iis"    # Lae/javax/imageio/stream/ImageInputStream;

    .prologue
    .line 50
    const-class v2, Lae/com/sun/imageio/stream/StreamCloser;

    monitor-enter v2

    .line 51
    :try_start_0
    sget-object v1, Lae/com/sun/imageio/stream/StreamCloser;->toCloseQueue:Ljava/util/WeakHashMap;

    if-nez v1, :cond_0

    .line 53
    new-instance v1, Ljava/util/WeakHashMap;

    invoke-direct {v1}, Ljava/util/WeakHashMap;-><init>()V

    .line 52
    sput-object v1, Lae/com/sun/imageio/stream/StreamCloser;->toCloseQueue:Ljava/util/WeakHashMap;

    .line 56
    :cond_0
    sget-object v1, Lae/com/sun/imageio/stream/StreamCloser;->toCloseQueue:Ljava/util/WeakHashMap;

    const/4 v3, 0x0

    invoke-virtual {v1, p0, v3}, Ljava/util/WeakHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 58
    sget-object v1, Lae/com/sun/imageio/stream/StreamCloser;->streamCloser:Ljava/lang/Thread;

    if-nez v1, :cond_1

    .line 59
    new-instance v0, Lae/com/sun/imageio/stream/StreamCloser$1;

    invoke-direct {v0}, Lae/com/sun/imageio/stream/StreamCloser$1;-><init>()V

    .line 85
    .local v0, "streamCloserRunnable":Ljava/lang/Runnable;
    new-instance v1, Lae/com/sun/imageio/stream/StreamCloser$2;

    invoke-direct {v1, v0}, Lae/com/sun/imageio/stream/StreamCloser$2;-><init>(Ljava/lang/Runnable;)V

    .line 84
    invoke-static {v1}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;

    .line 50
    .end local v0    # "streamCloserRunnable":Ljava/lang/Runnable;
    :cond_1
    monitor-exit v2

    .line 103
    return-void

    .line 50
    :catchall_0
    move-exception v1

    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public static removeFromQueue(Lae/javax/imageio/stream/ImageInputStream;)V
    .locals 2
    .param p0, "iis"    # Lae/javax/imageio/stream/ImageInputStream;

    .prologue
    .line 106
    const-class v1, Lae/com/sun/imageio/stream/StreamCloser;

    monitor-enter v1

    .line 107
    :try_start_0
    sget-object v0, Lae/com/sun/imageio/stream/StreamCloser;->toCloseQueue:Ljava/util/WeakHashMap;

    if-eqz v0, :cond_0

    .line 108
    sget-object v0, Lae/com/sun/imageio/stream/StreamCloser;->toCloseQueue:Ljava/util/WeakHashMap;

    invoke-virtual {v0, p0}, Ljava/util/WeakHashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 106
    :cond_0
    monitor-exit v1

    .line 111
    return-void

    .line 106
    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

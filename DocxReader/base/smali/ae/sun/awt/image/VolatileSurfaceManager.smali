.class public abstract Lae/sun/awt/image/VolatileSurfaceManager;
.super Lae/sun/awt/image/SurfaceManager;
.source "VolatileSurfaceManager.java"

# interfaces
.implements Lae/sun/awt/DisplayChangedListener;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lae/sun/awt/image/VolatileSurfaceManager$AcceleratedImageCapabilities;
    }
.end annotation


# instance fields
.field protected context:Ljava/lang/Object;

.field protected lostSurface:Z

.field protected sdAccel:Lae/sun/java2d/SurfaceData;

.field protected sdBackup:Lae/sun/java2d/SurfaceData;

.field protected sdCurrent:Lae/sun/java2d/SurfaceData;

.field protected sdPrevious:Lae/sun/java2d/SurfaceData;

.field protected vImg:Lae/sun/awt/image/SunVolatileImage;


# direct methods
.method protected constructor <init>(Lae/sun/awt/image/SunVolatileImage;Ljava/lang/Object;)V
    .locals 2
    .param p1, "vImg"    # Lae/sun/awt/image/SunVolatileImage;
    .param p2, "context"    # Ljava/lang/Object;

    .prologue
    .line 96
    invoke-direct {p0}, Lae/sun/awt/image/SurfaceManager;-><init>()V

    .line 97
    iput-object p1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->vImg:Lae/sun/awt/image/SunVolatileImage;

    .line 98
    iput-object p2, p0, Lae/sun/awt/image/VolatileSurfaceManager;->context:Ljava/lang/Object;

    .line 101
    invoke-static {}, Lae/java/awt/GraphicsEnvironment;->getLocalGraphicsEnvironment()Lae/java/awt/GraphicsEnvironment;

    move-result-object v0

    .line 104
    .local v0, "ge":Lae/java/awt/GraphicsEnvironment;
    instance-of v1, v0, Lae/sun/java2d/SunGraphicsEnvironment;

    if-eqz v1, :cond_0

    .line 105
    check-cast v0, Lae/sun/java2d/SunGraphicsEnvironment;

    .end local v0    # "ge":Lae/java/awt/GraphicsEnvironment;
    invoke-virtual {v0, p0}, Lae/sun/java2d/SunGraphicsEnvironment;->addDisplayChangedListener(Lae/sun/awt/DisplayChangedListener;)V

    .line 107
    :cond_0
    return-void
.end method


# virtual methods
.method public acceleratedSurfaceLost()V
    .locals 2

    .prologue
    .line 306
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->isAccelerationEnabled()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    iget-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    if-ne v0, v1, :cond_0

    .line 307
    const/4 v0, 0x1

    iput-boolean v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->lostSurface:Z

    .line 309
    :cond_0
    return-void
.end method

.method public contentsLost()Z
    .locals 1

    .prologue
    .line 241
    iget-boolean v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->lostSurface:Z

    return v0
.end method

.method public displayChanged()V
    .locals 3

    .prologue
    const/4 v2, 0x0

    .line 328
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->isAccelerationEnabled()Z

    move-result v1

    if-nez v1, :cond_0

    .line 346
    :goto_0
    return-void

    .line 331
    :cond_0
    const/4 v1, 0x1

    iput-boolean v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->lostSurface:Z

    .line 332
    iget-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    if-eqz v1, :cond_1

    .line 336
    iput-object v2, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdBackup:Lae/sun/java2d/SurfaceData;

    .line 337
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->getBackupSurface()Lae/sun/java2d/SurfaceData;

    move-result-object v1

    iput-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    .line 339
    iget-object v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    .line 340
    .local v0, "oldData":Lae/sun/java2d/SurfaceData;
    iput-object v2, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    .line 341
    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->invalidate()V

    .line 345
    .end local v0    # "oldData":Lae/sun/java2d/SurfaceData;
    :cond_1
    iget-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->vImg:Lae/sun/awt/image/SunVolatileImage;

    invoke-virtual {v1}, Lae/sun/awt/image/SunVolatileImage;->updateGraphicsConfig()V

    goto :goto_0
.end method

.method public flush()V
    .locals 2

    .prologue
    .line 403
    const/4 v1, 0x1

    iput-boolean v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->lostSurface:Z

    .line 404
    iget-object v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    .line 405
    .local v0, "oldSD":Lae/sun/java2d/SurfaceData;
    const/4 v1, 0x0

    iput-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    .line 406
    if-eqz v0, :cond_0

    .line 407
    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->flush()V

    .line 409
    :cond_0
    return-void
.end method

.method protected getBackupSurface()Lae/sun/java2d/SurfaceData;
    .locals 2

    .prologue
    .line 263
    iget-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdBackup:Lae/sun/java2d/SurfaceData;

    if-nez v1, :cond_0

    .line 264
    iget-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->vImg:Lae/sun/awt/image/SunVolatileImage;

    invoke-virtual {v1}, Lae/sun/awt/image/SunVolatileImage;->getBackupImage()Lae/java/awt/image/BufferedImage;

    move-result-object v0

    .line 267
    .local v0, "bImg":Lae/java/awt/image/BufferedImage;
    invoke-virtual {v0}, Lae/java/awt/image/BufferedImage;->getRaster()Lae/java/awt/image/WritableRaster;

    move-result-object v1

    .line 268
    invoke-virtual {v1}, Lae/java/awt/image/WritableRaster;->getDataBuffer()Lae/java/awt/image/DataBuffer;

    move-result-object v1

    .line 266
    invoke-static {v1}, Lae/sun/awt/image/SunWritableRaster;->stealTrackable(Lae/java/awt/image/DataBuffer;)Lae/sun/java2d/StateTrackableDelegate;

    move-result-object v1

    .line 268
    invoke-virtual {v1}, Lae/sun/java2d/StateTrackableDelegate;->setUntrackable()V

    .line 269
    invoke-static {v0}, Lae/sun/awt/image/BufImgSurfaceData;->createData(Lae/java/awt/image/BufferedImage;)Lae/sun/java2d/SurfaceData;

    move-result-object v1

    iput-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdBackup:Lae/sun/java2d/SurfaceData;

    .line 271
    .end local v0    # "bImg":Lae/java/awt/image/BufferedImage;
    :cond_0
    iget-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdBackup:Lae/sun/java2d/SurfaceData;

    return-object v1
.end method

.method public getCapabilities(Lae/java/awt/GraphicsConfiguration;)Lae/java/awt/ImageCapabilities;
    .locals 2
    .param p1, "gc"    # Lae/java/awt/GraphicsConfiguration;

    .prologue
    .line 372
    invoke-virtual {p0, p1}, Lae/sun/awt/image/VolatileSurfaceManager;->isConfigValid(Lae/java/awt/GraphicsConfiguration;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 373
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->isAccelerationEnabled()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 374
    new-instance v0, Lae/sun/awt/image/VolatileSurfaceManager$AcceleratedImageCapabilities;

    invoke-direct {v0, p0}, Lae/sun/awt/image/VolatileSurfaceManager$AcceleratedImageCapabilities;-><init>(Lae/sun/awt/image/VolatileSurfaceManager;)V

    .line 377
    :goto_0
    return-object v0

    .line 375
    :cond_0
    new-instance v0, Lae/java/awt/ImageCapabilities;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Lae/java/awt/ImageCapabilities;-><init>(Z)V

    goto :goto_0

    .line 377
    :cond_1
    invoke-super {p0, p1}, Lae/sun/awt/image/SurfaceManager;->getCapabilities(Lae/java/awt/GraphicsConfiguration;)Lae/java/awt/ImageCapabilities;

    move-result-object v0

    goto :goto_0
.end method

.method public getPrimarySurfaceData()Lae/sun/java2d/SurfaceData;
    .locals 1

    .prologue
    .line 132
    iget-object v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    return-object v0
.end method

.method protected abstract initAcceleratedSurface()Lae/sun/java2d/SurfaceData;
.end method

.method public initContents()V
    .locals 4

    .prologue
    const/4 v3, 0x0

    .line 281
    iget-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    if-eqz v1, :cond_0

    .line 282
    iget-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->vImg:Lae/sun/awt/image/SunVolatileImage;

    invoke-virtual {v1}, Lae/sun/awt/image/SunVolatileImage;->createGraphics()Lae/java/awt/Graphics2D;

    move-result-object v0

    .line 283
    .local v0, "g":Lae/java/awt/Graphics;
    iget-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->vImg:Lae/sun/awt/image/SunVolatileImage;

    invoke-virtual {v1}, Lae/sun/awt/image/SunVolatileImage;->getWidth()I

    move-result v1

    iget-object v2, p0, Lae/sun/awt/image/VolatileSurfaceManager;->vImg:Lae/sun/awt/image/SunVolatileImage;

    invoke-virtual {v2}, Lae/sun/awt/image/SunVolatileImage;->getHeight()I

    move-result v2

    invoke-virtual {v0, v3, v3, v1, v2}, Lae/java/awt/Graphics;->clearRect(IIII)V

    .line 284
    invoke-virtual {v0}, Lae/java/awt/Graphics;->dispose()V

    .line 286
    .end local v0    # "g":Lae/java/awt/Graphics;
    :cond_0
    return-void
.end method

.method public initialize()V
    .locals 1

    .prologue
    .line 116
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->isAccelerationEnabled()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 117
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->initAcceleratedSurface()Lae/sun/java2d/SurfaceData;

    move-result-object v0

    iput-object v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    .line 118
    iget-object v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    if-eqz v0, :cond_0

    .line 119
    iget-object v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    iput-object v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    .line 124
    :cond_0
    iget-object v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    if-nez v0, :cond_1

    .line 125
    iget-object v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->vImg:Lae/sun/awt/image/SunVolatileImage;

    invoke-virtual {v0}, Lae/sun/awt/image/SunVolatileImage;->getForcedAccelSurfaceType()I

    move-result v0

    if-nez v0, :cond_1

    .line 127
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->getBackupSurface()Lae/sun/java2d/SurfaceData;

    move-result-object v0

    iput-object v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    .line 129
    :cond_1
    return-void
.end method

.method protected abstract isAccelerationEnabled()Z
.end method

.method protected isConfigValid(Lae/java/awt/GraphicsConfiguration;)Z
    .locals 2
    .param p1, "gc"    # Lae/java/awt/GraphicsConfiguration;

    .prologue
    .line 366
    if-eqz p1, :cond_0

    .line 367
    invoke-virtual {p1}, Lae/java/awt/GraphicsConfiguration;->getDevice()Lae/java/awt/GraphicsDevice;

    move-result-object v0

    iget-object v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->vImg:Lae/sun/awt/image/SunVolatileImage;

    invoke-virtual {v1}, Lae/sun/awt/image/SunVolatileImage;->getGraphicsConfig()Lae/java/awt/GraphicsConfiguration;

    move-result-object v1

    invoke-virtual {v1}, Lae/java/awt/GraphicsConfiguration;->getDevice()Lae/java/awt/GraphicsDevice;

    move-result-object v1

    if-eq v0, v1, :cond_0

    .line 366
    const/4 v0, 0x0

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x1

    goto :goto_0
.end method

.method public paletteChanged()V
    .locals 1

    .prologue
    .line 354
    const/4 v0, 0x1

    iput-boolean v0, p0, Lae/sun/awt/image/VolatileSurfaceManager;->lostSurface:Z

    .line 355
    return-void
.end method

.method protected restoreAcceleratedSurface()V
    .locals 0

    .prologue
    .line 317
    return-void
.end method

.method public restoreContents()Lae/sun/java2d/SurfaceData;
    .locals 1

    .prologue
    .line 295
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->getBackupSurface()Lae/sun/java2d/SurfaceData;

    move-result-object v0

    return-object v0
.end method

.method public validate(Lae/java/awt/GraphicsConfiguration;)I
    .locals 5
    .param p1, "gc"    # Lae/java/awt/GraphicsConfiguration;

    .prologue
    const/4 v3, 0x0

    const/4 v4, 0x0

    .line 161
    const/4 v2, 0x0

    .line 162
    .local v2, "returnCode":I
    iget-boolean v1, p0, Lae/sun/awt/image/VolatileSurfaceManager;->lostSurface:Z

    .line 163
    .local v1, "lostSurfaceTmp":Z
    iput-boolean v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->lostSurface:Z

    .line 165
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->isAccelerationEnabled()Z

    move-result v3

    if-eqz v3, :cond_7

    .line 166
    invoke-virtual {p0, p1}, Lae/sun/awt/image/VolatileSurfaceManager;->isConfigValid(Lae/java/awt/GraphicsConfiguration;)Z

    move-result v3

    if-nez v3, :cond_3

    .line 171
    const/4 v2, 0x2

    .line 218
    :cond_0
    :goto_0
    const/4 v3, 0x2

    if-eq v2, v3, :cond_1

    .line 219
    iget-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    iget-object v4, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdPrevious:Lae/sun/java2d/SurfaceData;

    if-eq v3, v4, :cond_1

    .line 222
    iget-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    iput-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdPrevious:Lae/sun/java2d/SurfaceData;

    .line 223
    const/4 v2, 0x1

    .line 226
    :cond_1
    const/4 v3, 0x1

    if-ne v2, v3, :cond_2

    .line 229
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->initContents()V

    .line 232
    :cond_2
    return v2

    .line 172
    :cond_3
    iget-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    if-nez v3, :cond_5

    .line 175
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->initAcceleratedSurface()Lae/sun/java2d/SurfaceData;

    move-result-object v3

    iput-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    .line 176
    iget-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    if-eqz v3, :cond_4

    .line 178
    iget-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    iput-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    .line 181
    iput-object v4, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdBackup:Lae/sun/java2d/SurfaceData;

    .line 182
    const/4 v2, 0x1

    .line 183
    goto :goto_0

    .line 184
    :cond_4
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->getBackupSurface()Lae/sun/java2d/SurfaceData;

    move-result-object v3

    iput-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    goto :goto_0

    .line 186
    :cond_5
    iget-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v3}, Lae/sun/java2d/SurfaceData;->isSurfaceLost()Z

    move-result v3

    if-eqz v3, :cond_6

    .line 188
    :try_start_0
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->restoreAcceleratedSurface()V

    .line 190
    iget-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    iput-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    .line 192
    iget-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lae/sun/java2d/SurfaceData;->setSurfaceLost(Z)V

    .line 195
    const/4 v3, 0x0

    iput-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdBackup:Lae/sun/java2d/SurfaceData;
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0

    .line 196
    const/4 v2, 0x1

    goto :goto_0

    .line 197
    :catch_0
    move-exception v0

    .line 202
    .local v0, "e":Lae/sun/java2d/InvalidPipeException;
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->getBackupSurface()Lae/sun/java2d/SurfaceData;

    move-result-object v3

    iput-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    goto :goto_0

    .line 204
    .end local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :cond_6
    if-eqz v1, :cond_0

    .line 208
    const/4 v2, 0x1

    .line 210
    goto :goto_0

    :cond_7
    iget-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    if-eqz v3, :cond_0

    .line 213
    invoke-virtual {p0}, Lae/sun/awt/image/VolatileSurfaceManager;->getBackupSurface()Lae/sun/java2d/SurfaceData;

    move-result-object v3

    iput-object v3, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdCurrent:Lae/sun/java2d/SurfaceData;

    .line 214
    iput-object v4, p0, Lae/sun/awt/image/VolatileSurfaceManager;->sdAccel:Lae/sun/java2d/SurfaceData;

    .line 215
    const/4 v2, 0x1

    goto :goto_0
.end method

.class public abstract Lae/sun/awt/image/SurfaceManager;
.super Ljava/lang/Object;
.source "SurfaceManager.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lae/sun/awt/image/SurfaceManager$FlushableCacheData;,
        Lae/sun/awt/image/SurfaceManager$ImageAccessor;,
        Lae/sun/awt/image/SurfaceManager$ImageCapabilitiesGc;,
        Lae/sun/awt/image/SurfaceManager$ProxiedGraphicsConfig;
    }
.end annotation


# static fields
.field private static imgaccessor:Lae/sun/awt/image/SurfaceManager$ImageAccessor;


# instance fields
.field private cacheMap:Ljava/util/concurrent/ConcurrentHashMap;


# direct methods
.method public constructor <init>()V
    .locals 0

    .prologue
    .line 52
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static getManager(Lae/java/awt/Image;)Lae/sun/awt/image/SurfaceManager;
    .locals 7
    .param p0, "img"    # Lae/java/awt/Image;

    .prologue
    .line 72
    sget-object v5, Lae/sun/awt/image/SurfaceManager;->imgaccessor:Lae/sun/awt/image/SurfaceManager$ImageAccessor;

    invoke-virtual {v5, p0}, Lae/sun/awt/image/SurfaceManager$ImageAccessor;->getSurfaceManager(Lae/java/awt/Image;)Lae/sun/awt/image/SurfaceManager;

    move-result-object v3

    .line 73
    .local v3, "sMgr":Lae/sun/awt/image/SurfaceManager;
    if-nez v3, :cond_0

    .line 78
    :try_start_0
    move-object v0, p0

    check-cast v0, Lae/java/awt/image/BufferedImage;

    move-object v1, v0

    .line 79
    .local v1, "bi":Lae/java/awt/image/BufferedImage;
    new-instance v4, Lae/sun/awt/image/BufImgSurfaceManager;

    invoke-direct {v4, v1}, Lae/sun/awt/image/BufImgSurfaceManager;-><init>(Lae/java/awt/image/BufferedImage;)V
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 80
    .end local v3    # "sMgr":Lae/sun/awt/image/SurfaceManager;
    .local v4, "sMgr":Lae/sun/awt/image/SurfaceManager;
    :try_start_1
    invoke-static {v1, v4}, Lae/sun/awt/image/SurfaceManager;->setManager(Lae/java/awt/Image;Lae/sun/awt/image/SurfaceManager;)V
    :try_end_1
    .catch Ljava/lang/ClassCastException; {:try_start_1 .. :try_end_1} :catch_1

    move-object v3, v4

    .line 85
    .end local v1    # "bi":Lae/java/awt/image/BufferedImage;
    .end local v4    # "sMgr":Lae/sun/awt/image/SurfaceManager;
    .restart local v3    # "sMgr":Lae/sun/awt/image/SurfaceManager;
    :cond_0
    return-object v3

    .line 81
    :catch_0
    move-exception v2

    .line 82
    .local v2, "e":Ljava/lang/ClassCastException;
    :goto_0
    new-instance v5, Ljava/lang/IllegalArgumentException;

    const-string v6, "Invalid Image variant"

    invoke-direct {v5, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 81
    .end local v2    # "e":Ljava/lang/ClassCastException;
    .end local v3    # "sMgr":Lae/sun/awt/image/SurfaceManager;
    .restart local v1    # "bi":Lae/java/awt/image/BufferedImage;
    .restart local v4    # "sMgr":Lae/sun/awt/image/SurfaceManager;
    :catch_1
    move-exception v2

    move-object v3, v4

    .end local v4    # "sMgr":Lae/sun/awt/image/SurfaceManager;
    .restart local v3    # "sMgr":Lae/sun/awt/image/SurfaceManager;
    goto :goto_0
.end method

.method public static setImageAccessor(Lae/sun/awt/image/SurfaceManager$ImageAccessor;)V
    .locals 2
    .param p0, "ia"    # Lae/sun/awt/image/SurfaceManager$ImageAccessor;

    .prologue
    .line 62
    sget-object v0, Lae/sun/awt/image/SurfaceManager;->imgaccessor:Lae/sun/awt/image/SurfaceManager$ImageAccessor;

    if-eqz v0, :cond_0

    .line 63
    new-instance v0, Ljava/lang/InternalError;

    const-string v1, "Attempt to set ImageAccessor twice"

    invoke-direct {v0, v1}, Ljava/lang/InternalError;-><init>(Ljava/lang/String;)V

    throw v0

    .line 65
    :cond_0
    sput-object p0, Lae/sun/awt/image/SurfaceManager;->imgaccessor:Lae/sun/awt/image/SurfaceManager$ImageAccessor;

    .line 66
    return-void
.end method

.method public static setManager(Lae/java/awt/Image;Lae/sun/awt/image/SurfaceManager;)V
    .locals 1
    .param p0, "img"    # Lae/java/awt/Image;
    .param p1, "mgr"    # Lae/sun/awt/image/SurfaceManager;

    .prologue
    .line 89
    sget-object v0, Lae/sun/awt/image/SurfaceManager;->imgaccessor:Lae/sun/awt/image/SurfaceManager$ImageAccessor;

    invoke-virtual {v0, p0, p1}, Lae/sun/awt/image/SurfaceManager$ImageAccessor;->setSurfaceManager(Lae/java/awt/Image;Lae/sun/awt/image/SurfaceManager;)V

    .line 90
    return-void
.end method


# virtual methods
.method public acceleratedSurfaceLost()V
    .locals 0

    .prologue
    .line 159
    return-void
.end method

.method public declared-synchronized flush()V
    .locals 1

    .prologue
    .line 244
    monitor-enter p0

    const/4 v0, 0x0

    :try_start_0
    invoke-virtual {p0, v0}, Lae/sun/awt/image/SurfaceManager;->flush(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 245
    monitor-exit p0

    return-void

    .line 244
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized flush(Z)V
    .locals 3
    .param p1, "deaccelerate"    # Z

    .prologue
    .line 248
    monitor-enter p0

    :try_start_0
    iget-object v2, p0, Lae/sun/awt/image/SurfaceManager;->cacheMap:Ljava/util/concurrent/ConcurrentHashMap;

    if-eqz v2, :cond_1

    .line 249
    iget-object v2, p0, Lae/sun/awt/image/SurfaceManager;->cacheMap:Ljava/util/concurrent/ConcurrentHashMap;

    invoke-virtual {v2}, Ljava/util/concurrent/ConcurrentHashMap;->values()Ljava/util/Collection;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 250
    .local v0, "i":Ljava/util/Iterator;
    :cond_0
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v2

    if-nez v2, :cond_2

    .line 259
    .end local v0    # "i":Ljava/util/Iterator;
    :cond_1
    monitor-exit p0

    return-void

    .line 251
    .restart local v0    # "i":Ljava/util/Iterator;
    :cond_2
    :try_start_1
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    .line 252
    .local v1, "o":Ljava/lang/Object;
    instance-of v2, v1, Lae/sun/awt/image/SurfaceManager$FlushableCacheData;

    if-eqz v2, :cond_0

    .line 253
    check-cast v1, Lae/sun/awt/image/SurfaceManager$FlushableCacheData;

    .end local v1    # "o":Ljava/lang/Object;
    invoke-interface {v1, p1}, Lae/sun/awt/image/SurfaceManager$FlushableCacheData;->flush(Z)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 254
    invoke-interface {v0}, Ljava/util/Iterator;->remove()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 248
    .end local v0    # "i":Ljava/util/Iterator;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public getCacheData(Ljava/lang/Object;)Ljava/lang/Object;
    .locals 1
    .param p1, "key"    # Ljava/lang/Object;

    .prologue
    .line 115
    iget-object v0, p0, Lae/sun/awt/image/SurfaceManager;->cacheMap:Ljava/util/concurrent/ConcurrentHashMap;

    if-nez v0, :cond_0

    const/4 v0, 0x0

    :goto_0
    return-object v0

    :cond_0
    iget-object v0, p0, Lae/sun/awt/image/SurfaceManager;->cacheMap:Ljava/util/concurrent/ConcurrentHashMap;

    invoke-virtual {v0, p1}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    goto :goto_0
.end method

.method public getCapabilities(Lae/java/awt/GraphicsConfiguration;)Lae/java/awt/ImageCapabilities;
    .locals 1
    .param p1, "gc"    # Lae/java/awt/GraphicsConfiguration;

    .prologue
    .line 185
    new-instance v0, Lae/sun/awt/image/SurfaceManager$ImageCapabilitiesGc;

    invoke-direct {v0, p0, p1}, Lae/sun/awt/image/SurfaceManager$ImageCapabilitiesGc;-><init>(Lae/sun/awt/image/SurfaceManager;Lae/java/awt/GraphicsConfiguration;)V

    return-object v0
.end method

.method public abstract getPrimarySurfaceData()Lae/sun/java2d/SurfaceData;
.end method

.method public abstract restoreContents()Lae/sun/java2d/SurfaceData;
.end method

.method public setAccelerationPriority(F)V
    .locals 1
    .param p1, "priority"    # F

    .prologue
    .line 287
    const/4 v0, 0x0

    cmpl-float v0, p1, v0

    if-nez v0, :cond_0

    .line 288
    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Lae/sun/awt/image/SurfaceManager;->flush(Z)V

    .line 290
    :cond_0
    return-void
.end method

.method public setCacheData(Ljava/lang/Object;Ljava/lang/Object;)V
    .locals 2
    .param p1, "key"    # Ljava/lang/Object;
    .param p2, "value"    # Ljava/lang/Object;

    .prologue
    .line 124
    iget-object v0, p0, Lae/sun/awt/image/SurfaceManager;->cacheMap:Ljava/util/concurrent/ConcurrentHashMap;

    if-nez v0, :cond_1

    .line 125
    monitor-enter p0

    .line 126
    :try_start_0
    iget-object v0, p0, Lae/sun/awt/image/SurfaceManager;->cacheMap:Ljava/util/concurrent/ConcurrentHashMap;

    if-nez v0, :cond_0

    .line 127
    new-instance v0, Ljava/util/concurrent/ConcurrentHashMap;

    const/4 v1, 0x2

    invoke-direct {v0, v1}, Ljava/util/concurrent/ConcurrentHashMap;-><init>(I)V

    iput-object v0, p0, Lae/sun/awt/image/SurfaceManager;->cacheMap:Ljava/util/concurrent/ConcurrentHashMap;

    .line 125
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 131
    :cond_1
    iget-object v0, p0, Lae/sun/awt/image/SurfaceManager;->cacheMap:Ljava/util/concurrent/ConcurrentHashMap;

    invoke-virtual {v0, p1, p2}, Ljava/util/concurrent/ConcurrentHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 132
    return-void

    .line 125
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

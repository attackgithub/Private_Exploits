.class public Lae/sun/awt/OSInfo;
.super Ljava/lang/Object;
.source "OSInfo.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lae/sun/awt/OSInfo$OSType;,
        Lae/sun/awt/OSInfo$WindowsVersion;
    }
.end annotation


# static fields
.field private static final OS_NAME:Ljava/lang/String; = "os.name"

.field private static final OS_VERSION:Ljava/lang/String; = "os.version"

.field public static final WINDOWS_2000:Lae/sun/awt/OSInfo$WindowsVersion;

.field public static final WINDOWS_2003:Lae/sun/awt/OSInfo$WindowsVersion;

.field public static final WINDOWS_95:Lae/sun/awt/OSInfo$WindowsVersion;

.field public static final WINDOWS_98:Lae/sun/awt/OSInfo$WindowsVersion;

.field public static final WINDOWS_ME:Lae/sun/awt/OSInfo$WindowsVersion;

.field public static final WINDOWS_UNKNOWN:Lae/sun/awt/OSInfo$WindowsVersion;

.field public static final WINDOWS_VISTA:Lae/sun/awt/OSInfo$WindowsVersion;

.field public static final WINDOWS_XP:Lae/sun/awt/OSInfo$WindowsVersion;

.field private static final osTypeAction:Ljava/security/PrivilegedAction;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/security/PrivilegedAction",
            "<",
            "Lae/sun/awt/OSInfo$OSType;",
            ">;"
        }
    .end annotation
.end field

.field private static final windowsVersionMap:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map",
            "<",
            "Ljava/lang/String;",
            "Lae/sun/awt/OSInfo$WindowsVersion;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method static constructor <clinit>()V
    .locals 6

    .prologue
    const/4 v1, -0x1

    const/4 v5, 0x5

    const/4 v4, 0x4

    const/4 v3, 0x0

    const/4 v2, 0x0

    .line 50
    new-instance v0, Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-direct {v0, v1, v1, v2}, Lae/sun/awt/OSInfo$WindowsVersion;-><init>(IILae/sun/awt/OSInfo$WindowsVersion;)V

    sput-object v0, Lae/sun/awt/OSInfo;->WINDOWS_UNKNOWN:Lae/sun/awt/OSInfo$WindowsVersion;

    .line 51
    new-instance v0, Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-direct {v0, v4, v3, v2}, Lae/sun/awt/OSInfo$WindowsVersion;-><init>(IILae/sun/awt/OSInfo$WindowsVersion;)V

    sput-object v0, Lae/sun/awt/OSInfo;->WINDOWS_95:Lae/sun/awt/OSInfo$WindowsVersion;

    .line 52
    new-instance v0, Lae/sun/awt/OSInfo$WindowsVersion;

    const/16 v1, 0xa

    invoke-direct {v0, v4, v1, v2}, Lae/sun/awt/OSInfo$WindowsVersion;-><init>(IILae/sun/awt/OSInfo$WindowsVersion;)V

    sput-object v0, Lae/sun/awt/OSInfo;->WINDOWS_98:Lae/sun/awt/OSInfo$WindowsVersion;

    .line 53
    new-instance v0, Lae/sun/awt/OSInfo$WindowsVersion;

    const/16 v1, 0x5a

    invoke-direct {v0, v4, v1, v2}, Lae/sun/awt/OSInfo$WindowsVersion;-><init>(IILae/sun/awt/OSInfo$WindowsVersion;)V

    sput-object v0, Lae/sun/awt/OSInfo;->WINDOWS_ME:Lae/sun/awt/OSInfo$WindowsVersion;

    .line 54
    new-instance v0, Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-direct {v0, v5, v3, v2}, Lae/sun/awt/OSInfo$WindowsVersion;-><init>(IILae/sun/awt/OSInfo$WindowsVersion;)V

    sput-object v0, Lae/sun/awt/OSInfo;->WINDOWS_2000:Lae/sun/awt/OSInfo$WindowsVersion;

    .line 55
    new-instance v0, Lae/sun/awt/OSInfo$WindowsVersion;

    const/4 v1, 0x1

    invoke-direct {v0, v5, v1, v2}, Lae/sun/awt/OSInfo$WindowsVersion;-><init>(IILae/sun/awt/OSInfo$WindowsVersion;)V

    sput-object v0, Lae/sun/awt/OSInfo;->WINDOWS_XP:Lae/sun/awt/OSInfo$WindowsVersion;

    .line 56
    new-instance v0, Lae/sun/awt/OSInfo$WindowsVersion;

    const/4 v1, 0x2

    invoke-direct {v0, v5, v1, v2}, Lae/sun/awt/OSInfo$WindowsVersion;-><init>(IILae/sun/awt/OSInfo$WindowsVersion;)V

    sput-object v0, Lae/sun/awt/OSInfo;->WINDOWS_2003:Lae/sun/awt/OSInfo$WindowsVersion;

    .line 57
    new-instance v0, Lae/sun/awt/OSInfo$WindowsVersion;

    const/4 v1, 0x6

    invoke-direct {v0, v1, v3, v2}, Lae/sun/awt/OSInfo$WindowsVersion;-><init>(IILae/sun/awt/OSInfo$WindowsVersion;)V

    sput-object v0, Lae/sun/awt/OSInfo;->WINDOWS_VISTA:Lae/sun/awt/OSInfo$WindowsVersion;

    .line 62
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    sput-object v0, Lae/sun/awt/OSInfo;->windowsVersionMap:Ljava/util/Map;

    .line 65
    sget-object v0, Lae/sun/awt/OSInfo;->windowsVersionMap:Ljava/util/Map;

    sget-object v1, Lae/sun/awt/OSInfo;->WINDOWS_95:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-virtual {v1}, Lae/sun/awt/OSInfo$WindowsVersion;->toString()Ljava/lang/String;

    move-result-object v1

    sget-object v2, Lae/sun/awt/OSInfo;->WINDOWS_95:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-interface {v0, v1, v2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 66
    sget-object v0, Lae/sun/awt/OSInfo;->windowsVersionMap:Ljava/util/Map;

    sget-object v1, Lae/sun/awt/OSInfo;->WINDOWS_98:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-virtual {v1}, Lae/sun/awt/OSInfo$WindowsVersion;->toString()Ljava/lang/String;

    move-result-object v1

    sget-object v2, Lae/sun/awt/OSInfo;->WINDOWS_98:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-interface {v0, v1, v2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 67
    sget-object v0, Lae/sun/awt/OSInfo;->windowsVersionMap:Ljava/util/Map;

    sget-object v1, Lae/sun/awt/OSInfo;->WINDOWS_ME:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-virtual {v1}, Lae/sun/awt/OSInfo$WindowsVersion;->toString()Ljava/lang/String;

    move-result-object v1

    sget-object v2, Lae/sun/awt/OSInfo;->WINDOWS_ME:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-interface {v0, v1, v2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 68
    sget-object v0, Lae/sun/awt/OSInfo;->windowsVersionMap:Ljava/util/Map;

    sget-object v1, Lae/sun/awt/OSInfo;->WINDOWS_2000:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-virtual {v1}, Lae/sun/awt/OSInfo$WindowsVersion;->toString()Ljava/lang/String;

    move-result-object v1

    sget-object v2, Lae/sun/awt/OSInfo;->WINDOWS_2000:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-interface {v0, v1, v2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 69
    sget-object v0, Lae/sun/awt/OSInfo;->windowsVersionMap:Ljava/util/Map;

    sget-object v1, Lae/sun/awt/OSInfo;->WINDOWS_XP:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-virtual {v1}, Lae/sun/awt/OSInfo$WindowsVersion;->toString()Ljava/lang/String;

    move-result-object v1

    sget-object v2, Lae/sun/awt/OSInfo;->WINDOWS_XP:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-interface {v0, v1, v2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 70
    sget-object v0, Lae/sun/awt/OSInfo;->windowsVersionMap:Ljava/util/Map;

    sget-object v1, Lae/sun/awt/OSInfo;->WINDOWS_2003:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-virtual {v1}, Lae/sun/awt/OSInfo$WindowsVersion;->toString()Ljava/lang/String;

    move-result-object v1

    sget-object v2, Lae/sun/awt/OSInfo;->WINDOWS_2003:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-interface {v0, v1, v2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 71
    sget-object v0, Lae/sun/awt/OSInfo;->windowsVersionMap:Ljava/util/Map;

    sget-object v1, Lae/sun/awt/OSInfo;->WINDOWS_VISTA:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-virtual {v1}, Lae/sun/awt/OSInfo$WindowsVersion;->toString()Ljava/lang/String;

    move-result-object v1

    sget-object v2, Lae/sun/awt/OSInfo;->WINDOWS_VISTA:Lae/sun/awt/OSInfo$WindowsVersion;

    invoke-interface {v0, v1, v2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 74
    new-instance v0, Lae/sun/awt/OSInfo$1;

    invoke-direct {v0}, Lae/sun/awt/OSInfo$1;-><init>()V

    sput-object v0, Lae/sun/awt/OSInfo;->osTypeAction:Ljava/security/PrivilegedAction;

    .line 78
    return-void
.end method

.method private constructor <init>()V
    .locals 0

    .prologue
    .line 80
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 82
    return-void
.end method

.method public static getOSType()Lae/sun/awt/OSInfo$OSType;
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .prologue
    .line 88
    const-string v1, "os.name"

    invoke-static {v1}, Ljava/lang/System;->getProperty(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 90
    .local v0, "osName":Ljava/lang/String;
    if-eqz v0, :cond_3

    .line 91
    const-string v1, "Windows"

    invoke-virtual {v0, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 92
    sget-object v1, Lae/sun/awt/OSInfo$OSType;->WINDOWS:Lae/sun/awt/OSInfo$OSType;

    .line 106
    :goto_0
    return-object v1

    .line 95
    :cond_0
    const-string v1, "Linux"

    invoke-virtual {v0, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 96
    sget-object v1, Lae/sun/awt/OSInfo$OSType;->LINUX:Lae/sun/awt/OSInfo$OSType;

    goto :goto_0

    .line 99
    :cond_1
    const-string v1, "Solaris"

    invoke-virtual {v0, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_2

    const-string v1, "SunOS"

    invoke-virtual {v0, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 100
    :cond_2
    sget-object v1, Lae/sun/awt/OSInfo$OSType;->SOLARIS:Lae/sun/awt/OSInfo$OSType;

    goto :goto_0

    .line 106
    :cond_3
    sget-object v1, Lae/sun/awt/OSInfo$OSType;->UNKNOWN:Lae/sun/awt/OSInfo$OSType;

    goto :goto_0
.end method

.method public static getOSTypeAction()Ljava/security/PrivilegedAction;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/security/PrivilegedAction",
            "<",
            "Lae/sun/awt/OSInfo$OSType;",
            ">;"
        }
    .end annotation

    .prologue
    .line 110
    sget-object v0, Lae/sun/awt/OSInfo;->osTypeAction:Ljava/security/PrivilegedAction;

    return-object v0
.end method

.method public static getWindowsVersion()Lae/sun/awt/OSInfo$WindowsVersion;
    .locals 8
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .prologue
    .line 114
    const-string v4, "os.version"

    invoke-static {v4}, Ljava/lang/System;->getProperty(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 116
    .local v2, "osVersion":Ljava/lang/String;
    if-nez v2, :cond_0

    .line 117
    sget-object v3, Lae/sun/awt/OSInfo;->WINDOWS_UNKNOWN:Lae/sun/awt/OSInfo$WindowsVersion;

    .line 140
    :goto_0
    return-object v3

    .line 120
    :cond_0
    sget-object v5, Lae/sun/awt/OSInfo;->windowsVersionMap:Ljava/util/Map;

    monitor-enter v5

    .line 121
    :try_start_0
    sget-object v4, Lae/sun/awt/OSInfo;->windowsVersionMap:Ljava/util/Map;

    invoke-interface {v4, v2}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lae/sun/awt/OSInfo$WindowsVersion;

    .line 123
    .local v3, "result":Lae/sun/awt/OSInfo$WindowsVersion;
    if-nez v3, :cond_1

    .line 125
    const-string v4, "\\."

    invoke-virtual {v2, v4}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    .line 127
    .local v0, "arr":[Ljava/lang/String;
    array-length v4, v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/4 v6, 0x2

    if-ne v4, v6, :cond_2

    .line 129
    :try_start_1
    new-instance v3, Lae/sun/awt/OSInfo$WindowsVersion;

    .end local v3    # "result":Lae/sun/awt/OSInfo$WindowsVersion;
    const/4 v4, 0x0

    aget-object v4, v0, v4

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v4

    const/4 v6, 0x1

    aget-object v6, v0, v6

    invoke-static {v6}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v6

    const/4 v7, 0x0

    invoke-direct {v3, v4, v6, v7}, Lae/sun/awt/OSInfo$WindowsVersion;-><init>(IILae/sun/awt/OSInfo$WindowsVersion;)V
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 137
    .restart local v3    # "result":Lae/sun/awt/OSInfo$WindowsVersion;
    :try_start_2
    sget-object v4, Lae/sun/awt/OSInfo;->windowsVersionMap:Ljava/util/Map;

    invoke-interface {v4, v2, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 140
    .end local v0    # "arr":[Ljava/lang/String;
    :cond_1
    monitor-exit v5

    goto :goto_0

    .line 120
    .end local v3    # "result":Lae/sun/awt/OSInfo$WindowsVersion;
    :catchall_0
    move-exception v4

    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v4

    .line 130
    .restart local v0    # "arr":[Ljava/lang/String;
    :catch_0
    move-exception v1

    .line 131
    .local v1, "e":Ljava/lang/NumberFormatException;
    :try_start_3
    sget-object v3, Lae/sun/awt/OSInfo;->WINDOWS_UNKNOWN:Lae/sun/awt/OSInfo$WindowsVersion;

    monitor-exit v5

    goto :goto_0

    .line 134
    .end local v1    # "e":Ljava/lang/NumberFormatException;
    .restart local v3    # "result":Lae/sun/awt/OSInfo$WindowsVersion;
    :cond_2
    sget-object v3, Lae/sun/awt/OSInfo;->WINDOWS_UNKNOWN:Lae/sun/awt/OSInfo$WindowsVersion;

    .end local v3    # "result":Lae/sun/awt/OSInfo$WindowsVersion;
    monitor-exit v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0
.end method

.class Lae/sun/awt/AppContext$3;
.super Ljava/lang/Object;
.source "AppContext.java"

# interfaces
.implements Ljava/security/PrivilegedAction;


# annotations
.annotation system Ldalvik/annotation/EnclosingMethod;
    value = Lae/sun/awt/AppContext;->getAppContext()Lae/sun/awt/AppContext;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x0
    name = null
.end annotation

.annotation system Ldalvik/annotation/Signature;
    value = {
        "Ljava/lang/Object;",
        "Ljava/security/PrivilegedAction",
        "<",
        "Lae/sun/awt/AppContext;",
        ">;"
    }
.end annotation


# direct methods
.method constructor <init>()V
    .locals 0

    .prologue
    .line 271
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 1
    return-void
.end method


# virtual methods
.method public run()Lae/sun/awt/AppContext;
    .locals 6

    .prologue
    .line 278
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Thread;->getThreadGroup()Ljava/lang/ThreadGroup;

    move-result-object v1

    .line 279
    .local v1, "currentThreadGroup":Ljava/lang/ThreadGroup;
    move-object v3, v1

    .line 280
    .local v3, "threadGroup":Ljava/lang/ThreadGroup;
    # getter for: Lae/sun/awt/AppContext;->threadGroup2appContext:Ljava/util/Map;
    invoke-static {}, Lae/sun/awt/AppContext;->access$3()Ljava/util/Map;

    move-result-object v4

    invoke-interface {v4, v3}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lae/sun/awt/AppContext;

    .line 281
    .local v0, "context":Lae/sun/awt/AppContext;
    :goto_0
    if-eqz v0, :cond_0

    .line 296
    move-object v2, v1

    .local v2, "tg":Ljava/lang/ThreadGroup;
    :goto_1
    if-ne v2, v3, :cond_2

    .line 303
    # getter for: Lae/sun/awt/AppContext;->threadAppContext:Ljava/lang/ThreadLocal;
    invoke-static {}, Lae/sun/awt/AppContext;->access$4()Ljava/lang/ThreadLocal;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/ThreadLocal;->set(Ljava/lang/Object;)V

    .line 305
    return-object v0

    .line 282
    .end local v2    # "tg":Ljava/lang/ThreadGroup;
    :cond_0
    invoke-virtual {v3}, Ljava/lang/ThreadGroup;->getParent()Ljava/lang/ThreadGroup;

    move-result-object v3

    .line 283
    if-nez v3, :cond_1

    .line 289
    new-instance v4, Ljava/lang/RuntimeException;

    const-string v5, "Invalid ThreadGroup"

    invoke-direct {v4, v5}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 291
    :cond_1
    # getter for: Lae/sun/awt/AppContext;->threadGroup2appContext:Ljava/util/Map;
    invoke-static {}, Lae/sun/awt/AppContext;->access$3()Ljava/util/Map;

    move-result-object v4

    invoke-interface {v4, v3}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    .end local v0    # "context":Lae/sun/awt/AppContext;
    check-cast v0, Lae/sun/awt/AppContext;

    .restart local v0    # "context":Lae/sun/awt/AppContext;
    goto :goto_0

    .line 297
    .restart local v2    # "tg":Ljava/lang/ThreadGroup;
    :cond_2
    # getter for: Lae/sun/awt/AppContext;->threadGroup2appContext:Ljava/util/Map;
    invoke-static {}, Lae/sun/awt/AppContext;->access$3()Ljava/util/Map;

    move-result-object v4

    invoke-interface {v4, v2, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 296
    invoke-virtual {v2}, Ljava/lang/ThreadGroup;->getParent()Ljava/lang/ThreadGroup;

    move-result-object v2

    goto :goto_1
.end method

.method public bridge synthetic run()Ljava/lang/Object;
    .locals 1

    .prologue
    .line 1
    invoke-virtual {p0}, Lae/sun/awt/AppContext$3;->run()Lae/sun/awt/AppContext;

    move-result-object v0

    return-object v0
.end method

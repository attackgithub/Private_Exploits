.class Lae/sun/font/FreetypeFontScaler;
.super Lae/sun/font/FontScaler;
.source "FreetypeFontScaler.java"


# static fields
.field private static final TRUETYPE_FONT:I = 0x1

.field private static final TYPE1_FONT:I = 0x2


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .prologue
    .line 49
    invoke-static {}, Lae/sun/font/FontManagerNativeLibrary;->load()V

    .line 50
    const-class v0, Lae/sun/font/FreetypeFontScaler;

    invoke-static {v0}, Lae/sun/font/FreetypeFontScaler;->initIDs(Ljava/lang/Class;)V

    .line 51
    return-void
.end method

.method public constructor <init>(Lae/sun/font/Font2D;IZI)V
    .locals 6
    .param p1, "font"    # Lae/sun/font/Font2D;
    .param p2, "indexInCollection"    # I
    .param p3, "supportsCJK"    # Z
    .param p4, "filesize"    # I

    .prologue
    .line 61
    invoke-direct {p0}, Lae/sun/font/FontScaler;-><init>()V

    .line 63
    const/4 v2, 0x1

    .line 64
    .local v2, "fonttype":I
    instance-of v0, p1, Lae/sun/font/Type1Font;

    if-eqz v0, :cond_0

    .line 65
    const/4 v2, 0x2

    :cond_0
    move-object v0, p0

    move-object v1, p1

    move v3, p2

    move v4, p3

    move v5, p4

    .line 67
    invoke-direct/range {v0 .. v5}, Lae/sun/font/FreetypeFontScaler;->initNativeScaler(Lae/sun/font/Font2D;IIZI)J

    move-result-wide v0

    iput-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    .line 72
    new-instance v0, Ljava/lang/ref/WeakReference;

    invoke-direct {v0, p1}, Ljava/lang/ref/WeakReference;-><init>(Ljava/lang/Object;)V

    iput-object v0, p0, Lae/sun/font/FreetypeFontScaler;->font:Ljava/lang/ref/WeakReference;

    .line 73
    return-void
.end method

.method private native disposeNativeScaler(J)V
.end method

.method private native getFontMetricsNative(Lae/sun/font/Font2D;JJ)Lae/sun/font/StrikeMetrics;
.end method

.method private native getGlyphAdvanceNative(Lae/sun/font/Font2D;JJI)F
.end method

.method private native getGlyphCodeNative(JC)I
.end method

.method private native getGlyphImageNative(Lae/sun/font/Font2D;JJI)J
.end method

.method private native getGlyphMetricsNative(Lae/sun/font/Font2D;JJILae/java/awt/geom/Point2D$Float;)V
.end method

.method private native getGlyphOutlineBoundsNative(Lae/sun/font/Font2D;JJI)Lae/java/awt/geom/Rectangle2D$Float;
.end method

.method private native getGlyphOutlineNative(Lae/sun/font/Font2D;JJIFF)Lae/java/awt/geom/GeneralPath;
.end method

.method private native getGlyphVectorOutlineNative(Lae/sun/font/Font2D;JJ[IIFF)Lae/java/awt/geom/GeneralPath;
.end method

.method private native getLayoutTableCacheNative(J)J
.end method

.method private native getMissingGlyphCodeNative(J)I
.end method

.method private native getNumGlyphsNative(J)I
.end method

.method private native getUnitsPerEMNative(J)J
.end method

.method private static native initIDs(Ljava/lang/Class;)V
.end method

.method private native initNativeScaler(Lae/sun/font/Font2D;IIZI)J
.end method

.method private invalidateScaler()V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    .line 56
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    .line 57
    const/4 v0, 0x0

    iput-object v0, p0, Lae/sun/font/FreetypeFontScaler;->font:Ljava/lang/ref/WeakReference;

    .line 58
    new-instance v0, Lae/sun/font/FontScalerException;

    invoke-direct {v0}, Lae/sun/font/FontScalerException;-><init>()V

    throw v0
.end method


# virtual methods
.method createScalerContext([DZIIFF)J
    .locals 10
    .param p1, "matrix"    # [D
    .param p2, "fontType"    # Z
    .param p3, "aa"    # I
    .param p4, "fm"    # I
    .param p5, "boldness"    # F
    .param p6, "italic"    # F

    .prologue
    .line 210
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 211
    iget-wide v2, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    move-object v1, p0

    move-object v4, p1

    move v5, p2

    move v6, p3

    move v7, p4

    move v8, p5

    move/from16 v9, p6

    invoke-virtual/range {v1 .. v9}, Lae/sun/font/FreetypeFontScaler;->createScalerContextNative(J[DZIIFF)J

    move-result-wide v0

    .line 214
    :goto_0
    return-wide v0

    :cond_0
    invoke-static {}, Lae/sun/font/NullFontScaler;->getNullScalerContext()J

    move-result-wide v0

    goto :goto_0
.end method

.method native createScalerContextNative(J[DZIIFF)J
.end method

.method public declared-synchronized dispose()V
    .locals 4

    .prologue
    const-wide/16 v2, 0x0

    .line 166
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 167
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    invoke-direct {p0, v0, v1}, Lae/sun/font/FreetypeFontScaler;->disposeNativeScaler(J)V

    .line 168
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 170
    :cond_0
    monitor-exit p0

    return-void

    .line 166
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getFontMetrics(J)Lae/sun/font/StrikeMetrics;
    .locals 7
    .param p1, "pScalerContext"    # J
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    const-wide/16 v2, 0x0

    .line 77
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 78
    iget-object v0, p0, Lae/sun/font/FreetypeFontScaler;->font:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/sun/font/Font2D;

    .line 80
    iget-wide v4, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    move-object v0, p0

    move-wide v2, p1

    .line 78
    invoke-direct/range {v0 .. v5}, Lae/sun/font/FreetypeFontScaler;->getFontMetricsNative(Lae/sun/font/Font2D;JJ)Lae/sun/font/StrikeMetrics;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 82
    :goto_0
    monitor-exit p0

    return-object v0

    :cond_0
    :try_start_1
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v0

    const-wide/16 v2, 0x0

    invoke-virtual {v0, v2, v3}, Lae/sun/font/FontScaler;->getFontMetrics(J)Lae/sun/font/StrikeMetrics;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v0

    goto :goto_0

    .line 77
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getGlyphAdvance(JI)F
    .locals 7
    .param p1, "pScalerContext"    # J
    .param p3, "glyphCode"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    const-wide/16 v2, 0x0

    .line 87
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 88
    iget-object v0, p0, Lae/sun/font/FreetypeFontScaler;->font:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/sun/font/Font2D;

    .line 90
    iget-wide v4, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    move-object v0, p0

    move-wide v2, p1

    move v6, p3

    .line 88
    invoke-direct/range {v0 .. v6}, Lae/sun/font/FreetypeFontScaler;->getGlyphAdvanceNative(Lae/sun/font/Font2D;JJI)F
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    .line 93
    :goto_0
    monitor-exit p0

    return v0

    :cond_0
    :try_start_1
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v0

    const-wide/16 v2, 0x0

    invoke-virtual {v0, v2, v3, p3}, Lae/sun/font/FontScaler;->getGlyphAdvance(JI)F
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v0

    goto :goto_0

    .line 87
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getGlyphCode(C)I
    .locals 4
    .param p1, "charCode"    # C
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    .line 187
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 188
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    invoke-direct {p0, v0, v1, p1}, Lae/sun/font/FreetypeFontScaler;->getGlyphCodeNative(JC)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    .line 190
    :goto_0
    monitor-exit p0

    return v0

    :cond_0
    :try_start_1
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v0

    invoke-virtual {v0, p1}, Lae/sun/font/FontScaler;->getGlyphCode(C)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v0

    goto :goto_0

    .line 187
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getGlyphImage(JI)J
    .locals 7
    .param p1, "pScalerContext"    # J
    .param p3, "glyphCode"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    const-wide/16 v2, 0x0

    .line 112
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 113
    iget-object v0, p0, Lae/sun/font/FreetypeFontScaler;->font:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/sun/font/Font2D;

    .line 115
    iget-wide v4, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    move-object v0, p0

    move-wide v2, p1

    move v6, p3

    .line 113
    invoke-direct/range {v0 .. v6}, Lae/sun/font/FreetypeFontScaler;->getGlyphImageNative(Lae/sun/font/Font2D;JJI)J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    .line 118
    :goto_0
    monitor-exit p0

    return-wide v0

    :cond_0
    :try_start_1
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v0

    const-wide/16 v2, 0x0

    invoke-virtual {v0, v2, v3, p3}, Lae/sun/font/FontScaler;->getGlyphImage(JI)J
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-wide v0

    goto :goto_0

    .line 112
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getGlyphMetrics(JILae/java/awt/geom/Point2D$Float;)V
    .locals 9
    .param p1, "pScalerContext"    # J
    .param p3, "glyphCode"    # I
    .param p4, "metrics"    # Lae/java/awt/geom/Point2D$Float;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    const-wide/16 v2, 0x0

    .line 99
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 100
    iget-object v0, p0, Lae/sun/font/FreetypeFontScaler;->font:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/sun/font/Font2D;

    .line 102
    iget-wide v4, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    move-object v0, p0

    move-wide v2, p1

    move v6, p3

    move-object v7, p4

    .line 100
    invoke-direct/range {v0 .. v7}, Lae/sun/font/FreetypeFontScaler;->getGlyphMetricsNative(Lae/sun/font/Font2D;JJILae/java/awt/geom/Point2D$Float;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 108
    :goto_0
    monitor-exit p0

    return-void

    .line 107
    :cond_0
    :try_start_1
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v0

    const-wide/16 v2, 0x0

    invoke-virtual {v0, v2, v3, p3, p4}, Lae/sun/font/FontScaler;->getGlyphMetrics(JILae/java/awt/geom/Point2D$Float;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 99
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getGlyphOutline(JIFF)Lae/java/awt/geom/GeneralPath;
    .locals 9
    .param p1, "pScalerContext"    # J
    .param p3, "glyphCode"    # I
    .param p4, "x"    # F
    .param p5, "y"    # F
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    const-wide/16 v2, 0x0

    .line 136
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 137
    iget-object v0, p0, Lae/sun/font/FreetypeFontScaler;->font:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/sun/font/Font2D;

    .line 139
    iget-wide v4, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    move-object v0, p0

    move-wide v2, p1

    move v6, p3

    move v7, p4

    move v8, p5

    .line 137
    invoke-direct/range {v0 .. v8}, Lae/sun/font/FreetypeFontScaler;->getGlyphOutlineNative(Lae/sun/font/Font2D;JJIFF)Lae/java/awt/geom/GeneralPath;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 143
    :goto_0
    monitor-exit p0

    return-object v0

    :cond_0
    :try_start_1
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    const-wide/16 v2, 0x0

    move v4, p3

    move v5, p4

    move v6, p5

    invoke-virtual/range {v1 .. v6}, Lae/sun/font/FontScaler;->getGlyphOutline(JIFF)Lae/java/awt/geom/GeneralPath;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v0

    goto :goto_0

    .line 136
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getGlyphOutlineBounds(JI)Lae/java/awt/geom/Rectangle2D$Float;
    .locals 7
    .param p1, "pScalerContext"    # J
    .param p3, "glyphCode"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    const-wide/16 v2, 0x0

    .line 124
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 125
    iget-object v0, p0, Lae/sun/font/FreetypeFontScaler;->font:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/sun/font/Font2D;

    .line 127
    iget-wide v4, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    move-object v0, p0

    move-wide v2, p1

    move v6, p3

    .line 125
    invoke-direct/range {v0 .. v6}, Lae/sun/font/FreetypeFontScaler;->getGlyphOutlineBoundsNative(Lae/sun/font/Font2D;JJI)Lae/java/awt/geom/Rectangle2D$Float;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 130
    :goto_0
    monitor-exit p0

    return-object v0

    :cond_0
    :try_start_1
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v0

    const-wide/16 v2, 0x0

    invoke-virtual {v0, v2, v3, p3}, Lae/sun/font/FontScaler;->getGlyphOutlineBounds(JI)Lae/java/awt/geom/Rectangle2D$Float;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v0

    goto :goto_0

    .line 124
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getGlyphPoint(JII)Lae/java/awt/geom/Point2D$Float;
    .locals 9
    .param p1, "pScalerContext"    # J
    .param p3, "glyphCode"    # I
    .param p4, "ptNumber"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    .line 196
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 197
    iget-object v0, p0, Lae/sun/font/FreetypeFontScaler;->font:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/sun/font/Font2D;

    .line 198
    iget-wide v4, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    move-object v0, p0

    move-wide v2, p1

    move v6, p3

    move v7, p4

    .line 197
    invoke-virtual/range {v0 .. v7}, Lae/sun/font/FreetypeFontScaler;->getGlyphPointNative(Lae/sun/font/Font2D;JJII)Lae/java/awt/geom/Point2D$Float;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 200
    :goto_0
    monitor-exit p0

    return-object v0

    :cond_0
    :try_start_1
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v0

    invoke-virtual {v0, p1, p2, p3, p4}, Lae/sun/font/FontScaler;->getGlyphPoint(JII)Lae/java/awt/geom/Point2D$Float;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v0

    goto :goto_0

    .line 196
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method native getGlyphPointNative(Lae/sun/font/Font2D;JJII)Lae/java/awt/geom/Point2D$Float;
.end method

.method declared-synchronized getGlyphVectorOutline(J[IIFF)Lae/java/awt/geom/GeneralPath;
    .locals 11
    .param p1, "pScalerContext"    # J
    .param p3, "glyphs"    # [I
    .param p4, "numGlyphs"    # I
    .param p5, "x"    # F
    .param p6, "y"    # F
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    .line 149
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 150
    iget-object v0, p0, Lae/sun/font/FreetypeFontScaler;->font:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/sun/font/Font2D;

    .line 152
    iget-wide v4, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    move-object v0, p0

    move-wide v2, p1

    move-object v6, p3

    move v7, p4

    move/from16 v8, p5

    move/from16 v9, p6

    .line 150
    invoke-direct/range {v0 .. v9}, Lae/sun/font/FreetypeFontScaler;->getGlyphVectorOutlineNative(Lae/sun/font/Font2D;JJ[IIFF)Lae/java/awt/geom/GeneralPath;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 157
    :goto_0
    monitor-exit p0

    return-object v0

    :cond_0
    :try_start_1
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    .line 158
    const-wide/16 v2, 0x0

    move-object v4, p3

    move v5, p4

    move/from16 v6, p5

    move/from16 v7, p6

    .line 157
    invoke-virtual/range {v1 .. v7}, Lae/sun/font/FontScaler;->getGlyphVectorOutline(J[IIFF)Lae/java/awt/geom/GeneralPath;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v0

    goto :goto_0

    .line 149
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getLayoutTableCache()J
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    .line 162
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    invoke-direct {p0, v0, v1}, Lae/sun/font/FreetypeFontScaler;->getLayoutTableCacheNative(J)J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    monitor-exit p0

    return-wide v0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getMissingGlyphCode()I
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    .line 180
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 181
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    invoke-direct {p0, v0, v1}, Lae/sun/font/FreetypeFontScaler;->getMissingGlyphCodeNative(J)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    .line 183
    :goto_0
    monitor-exit p0

    return v0

    :cond_0
    :try_start_1
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v0

    invoke-virtual {v0}, Lae/sun/font/FontScaler;->getMissingGlyphCode()I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v0

    goto :goto_0

    .line 180
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getNumGlyphs()I
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/sun/font/FontScalerException;
        }
    .end annotation

    .prologue
    .line 173
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 174
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    invoke-direct {p0, v0, v1}, Lae/sun/font/FreetypeFontScaler;->getNumGlyphsNative(J)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    .line 176
    :goto_0
    monitor-exit p0

    return v0

    :cond_0
    :try_start_1
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v0

    invoke-virtual {v0}, Lae/sun/font/FontScaler;->getNumGlyphs()I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v0

    goto :goto_0

    .line 173
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method declared-synchronized getUnitsPerEm()J
    .locals 2

    .prologue
    .line 205
    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lae/sun/font/FreetypeFontScaler;->nativeScaler:J

    invoke-direct {p0, v0, v1}, Lae/sun/font/FreetypeFontScaler;->getUnitsPerEMNative(J)J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    monitor-exit p0

    return-wide v0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method invalidateScalerContext(J)V
    .locals 0
    .param p1, "pScalerContext"    # J

    .prologue
    .line 255
    return-void
.end method

.class public Lae/sun/font/TrueTypeGlyphMapper;
.super Lae/sun/font/CharToGlyphMapper;
.source "TrueTypeGlyphMapper.java"


# static fields
.field static final JA_FULLWIDTH_TILDE_CHAR:C = '\uff5e'

.field static final JA_WAVE_DASH_CHAR:C = '\u301c'

.field static final JA_YEN:C = '\u00a5'

.field static final REVERSE_SOLIDUS:C = '\\'

.field static final isJAlocale:Z


# instance fields
.field cmap:Lae/sun/font/CMap;

.field font:Lae/sun/font/TrueTypeFont;

.field private final needsJAremapping:Z

.field numGlyphs:I

.field private remapJAWaveDash:Z


# direct methods
.method static constructor <clinit>()V
    .locals 2

    .prologue
    .line 42
    sget-object v0, Ljava/util/Locale;->JAPAN:Ljava/util/Locale;

    invoke-static {}, Ljava/util/Locale;->getDefault()Ljava/util/Locale;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/Locale;->equals(Ljava/lang/Object;)Z

    move-result v0

    sput-boolean v0, Lae/sun/font/TrueTypeGlyphMapper;->isJAlocale:Z

    return-void
.end method

.method public constructor <init>(Lae/sun/font/TrueTypeFont;)V
    .locals 5
    .param p1, "font"    # Lae/sun/font/TrueTypeFont;

    .prologue
    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 50
    invoke-direct {p0}, Lae/sun/font/CharToGlyphMapper;-><init>()V

    .line 51
    iput-object p1, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    .line 53
    :try_start_0
    invoke-static {p1}, Lae/sun/font/CMap;->initialize(Lae/sun/font/TrueTypeFont;)Lae/sun/font/CMap;

    move-result-object v2

    iput-object v2, p0, Lae/sun/font/TrueTypeGlyphMapper;->cmap:Lae/sun/font/CMap;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 57
    :goto_0
    iget-object v2, p0, Lae/sun/font/TrueTypeGlyphMapper;->cmap:Lae/sun/font/CMap;

    if-nez v2, :cond_0

    .line 58
    invoke-direct {p0}, Lae/sun/font/TrueTypeGlyphMapper;->handleBadCMAP()V

    .line 60
    :cond_0
    iput v3, p0, Lae/sun/font/TrueTypeGlyphMapper;->missingGlyph:I

    .line 61
    const v2, 0x6d617870

    invoke-virtual {p1, v2}, Lae/sun/font/TrueTypeFont;->getTableBuffer(I)Ljava/nio/ByteBuffer;

    move-result-object v0

    .line 62
    .local v0, "buffer":Ljava/nio/ByteBuffer;
    const/4 v2, 0x4

    invoke-virtual {v0, v2}, Ljava/nio/ByteBuffer;->getChar(I)C

    move-result v2

    iput v2, p0, Lae/sun/font/TrueTypeGlyphMapper;->numGlyphs:I

    .line 63
    sget-boolean v2, Lae/sun/font/FontManager;->isSolaris:Z

    if-eqz v2, :cond_2

    sget-boolean v2, Lae/sun/font/TrueTypeGlyphMapper;->isJAlocale:Z

    if-eqz v2, :cond_2

    invoke-virtual {p1}, Lae/sun/font/TrueTypeFont;->supportsJA()Z

    move-result v2

    if-eqz v2, :cond_2

    .line 64
    iput-boolean v4, p0, Lae/sun/font/TrueTypeGlyphMapper;->needsJAremapping:Z

    .line 65
    sget-boolean v2, Lae/sun/font/FontManager;->isSolaris8:Z

    if-eqz v2, :cond_1

    .line 66
    const/16 v2, 0x301c

    invoke-direct {p0, v2}, Lae/sun/font/TrueTypeGlyphMapper;->getGlyphFromCMAP(I)C

    move-result v2

    iget v3, p0, Lae/sun/font/TrueTypeGlyphMapper;->missingGlyph:I

    if-ne v2, v3, :cond_1

    .line 67
    iput-boolean v4, p0, Lae/sun/font/TrueTypeGlyphMapper;->remapJAWaveDash:Z

    .line 72
    :cond_1
    :goto_1
    return-void

    .line 54
    .end local v0    # "buffer":Ljava/nio/ByteBuffer;
    :catch_0
    move-exception v1

    .line 55
    .local v1, "e":Ljava/lang/Exception;
    const/4 v2, 0x0

    iput-object v2, p0, Lae/sun/font/TrueTypeGlyphMapper;->cmap:Lae/sun/font/CMap;

    goto :goto_0

    .line 70
    .end local v1    # "e":Ljava/lang/Exception;
    .restart local v0    # "buffer":Ljava/nio/ByteBuffer;
    :cond_2
    iput-boolean v3, p0, Lae/sun/font/TrueTypeGlyphMapper;->needsJAremapping:Z

    goto :goto_1
.end method

.method private getGlyphFromCMAP(I)C
    .locals 5
    .param p1, "charCode"    # I

    .prologue
    .line 80
    :try_start_0
    iget-object v2, p0, Lae/sun/font/TrueTypeGlyphMapper;->cmap:Lae/sun/font/CMap;

    invoke-virtual {v2, p1}, Lae/sun/font/CMap;->getGlyph(I)C

    move-result v1

    .line 81
    .local v1, "glyphCode":C
    iget v2, p0, Lae/sun/font/TrueTypeGlyphMapper;->numGlyphs:I

    if-lt v1, v2, :cond_0

    .line 82
    const v2, 0xfffe

    if-lt v1, v2, :cond_1

    .line 95
    .end local v1    # "glyphCode":C
    :cond_0
    :goto_0
    return v1

    .line 85
    .restart local v1    # "glyphCode":C
    :cond_1
    sget-boolean v2, Lae/sun/font/FontManager;->logging:Z

    if-eqz v2, :cond_2

    .line 86
    sget-object v2, Lae/sun/font/FontManager;->logger:Ljava/util/logging/Logger;

    .line 87
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v4, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " out of range glyph id="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 88
    invoke-static {v1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 89
    const-string v4, " for char "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 87
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 86
    invoke-virtual {v2, v3}, Ljava/util/logging/Logger;->warning(Ljava/lang/String;)V

    .line 91
    :cond_2
    iget v2, p0, Lae/sun/font/TrueTypeGlyphMapper;->missingGlyph:I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    int-to-char v1, v2

    goto :goto_0

    .line 93
    .end local v1    # "glyphCode":C
    :catch_0
    move-exception v0

    .line 94
    .local v0, "e":Ljava/lang/Exception;
    invoke-direct {p0}, Lae/sun/font/TrueTypeGlyphMapper;->handleBadCMAP()V

    .line 95
    iget v2, p0, Lae/sun/font/TrueTypeGlyphMapper;->missingGlyph:I

    int-to-char v1, v2

    goto :goto_0
.end method

.method private handleBadCMAP()V
    .locals 3

    .prologue
    .line 100
    sget-boolean v0, Lae/sun/font/FontManager;->logging:Z

    if-eqz v0, :cond_0

    .line 101
    sget-object v0, Lae/sun/font/FontManager;->logger:Ljava/util/logging/Logger;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "Null Cmap for "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v2, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 102
    const-string v2, "substituting for this font"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 101
    invoke-virtual {v0, v1}, Ljava/util/logging/Logger;->severe(Ljava/lang/String;)V

    .line 104
    :cond_0
    iget-object v0, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    invoke-static {v0}, Lae/sun/font/FontManager;->deRegisterBadFont(Lae/sun/font/Font2D;)V

    .line 109
    sget-object v0, Lae/sun/font/CMap;->theNullCmap:Lae/sun/font/CMap$NullCMapClass;

    iput-object v0, p0, Lae/sun/font/TrueTypeGlyphMapper;->cmap:Lae/sun/font/CMap;

    .line 110
    return-void
.end method

.method private final remapJAChar(C)C
    .locals 1
    .param p1, "unicode"    # C

    .prologue
    .line 113
    sparse-switch p1, :sswitch_data_0

    .line 123
    .end local p1    # "unicode":C
    :cond_0
    :goto_0
    return p1

    .line 115
    .restart local p1    # "unicode":C
    :sswitch_0
    const/16 p1, 0xa5

    goto :goto_0

    .line 120
    :sswitch_1
    iget-boolean v0, p0, Lae/sun/font/TrueTypeGlyphMapper;->remapJAWaveDash:Z

    if-eqz v0, :cond_0

    .line 121
    const p1, 0xff5e

    goto :goto_0

    .line 113
    nop

    :sswitch_data_0
    .sparse-switch
        0x5c -> :sswitch_0
        0x301c -> :sswitch_1
    .end sparse-switch
.end method

.method private final remapJAIntChar(I)I
    .locals 1
    .param p1, "unicode"    # I

    .prologue
    .line 127
    sparse-switch p1, :sswitch_data_0

    .line 137
    .end local p1    # "unicode":I
    :cond_0
    :goto_0
    return p1

    .line 129
    .restart local p1    # "unicode":I
    :sswitch_0
    const/16 p1, 0xa5

    goto :goto_0

    .line 134
    :sswitch_1
    iget-boolean v0, p0, Lae/sun/font/TrueTypeGlyphMapper;->remapJAWaveDash:Z

    if-eqz v0, :cond_0

    .line 135
    const p1, 0xff5e

    goto :goto_0

    .line 127
    nop

    :sswitch_data_0
    .sparse-switch
        0x5c -> :sswitch_0
        0x301c -> :sswitch_1
    .end sparse-switch
.end method


# virtual methods
.method public charToGlyph(C)I
    .locals 2
    .param p1, "unicode"    # C

    .prologue
    .line 142
    iget-boolean v1, p0, Lae/sun/font/TrueTypeGlyphMapper;->needsJAremapping:Z

    if-eqz v1, :cond_0

    .line 143
    invoke-direct {p0, p1}, Lae/sun/font/TrueTypeGlyphMapper;->remapJAChar(C)C

    move-result p1

    .line 145
    :cond_0
    invoke-direct {p0, p1}, Lae/sun/font/TrueTypeGlyphMapper;->getGlyphFromCMAP(I)C

    move-result v0

    .line 146
    .local v0, "glyph":I
    iget-object v1, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    invoke-virtual {v1}, Lae/sun/font/TrueTypeFont;->checkUseNatives()Z

    move-result v1

    if-eqz v1, :cond_1

    iget-object v1, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    iget-object v1, v1, Lae/sun/font/TrueTypeFont;->glyphToCharMap:[C

    array-length v1, v1

    if-ge v0, v1, :cond_1

    .line 147
    iget-object v1, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    iget-object v1, v1, Lae/sun/font/TrueTypeFont;->glyphToCharMap:[C

    aput-char p1, v1, v0

    .line 149
    :cond_1
    return v0
.end method

.method public charToGlyph(I)I
    .locals 3
    .param p1, "unicode"    # I

    .prologue
    .line 153
    iget-boolean v1, p0, Lae/sun/font/TrueTypeGlyphMapper;->needsJAremapping:Z

    if-eqz v1, :cond_0

    .line 154
    invoke-direct {p0, p1}, Lae/sun/font/TrueTypeGlyphMapper;->remapJAIntChar(I)I

    move-result p1

    .line 156
    :cond_0
    invoke-direct {p0, p1}, Lae/sun/font/TrueTypeGlyphMapper;->getGlyphFromCMAP(I)C

    move-result v0

    .line 157
    .local v0, "glyph":I
    iget-object v1, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    invoke-virtual {v1}, Lae/sun/font/TrueTypeFont;->checkUseNatives()Z

    move-result v1

    if-eqz v1, :cond_1

    iget-object v1, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    iget-object v1, v1, Lae/sun/font/TrueTypeFont;->glyphToCharMap:[C

    array-length v1, v1

    if-ge v0, v1, :cond_1

    .line 158
    iget-object v1, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    iget-object v1, v1, Lae/sun/font/TrueTypeFont;->glyphToCharMap:[C

    int-to-char v2, p1

    aput-char v2, v1, v0

    .line 160
    :cond_1
    return v0
.end method

.method public charsToGlyphs(I[C[I)V
    .locals 8
    .param p1, "count"    # I
    .param p2, "unicodes"    # [C
    .param p3, "glyphs"    # [I

    .prologue
    const v7, 0xdc00

    const v6, 0xd800

    .line 179
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-lt v1, p1, :cond_0

    .line 210
    return-void

    .line 181
    :cond_0
    iget-boolean v3, p0, Lae/sun/font/TrueTypeGlyphMapper;->needsJAremapping:Z

    if-eqz v3, :cond_2

    .line 182
    aget-char v3, p2, v1

    invoke-direct {p0, v3}, Lae/sun/font/TrueTypeGlyphMapper;->remapJAChar(C)C

    move-result v0

    .line 187
    .local v0, "code":I
    :goto_1
    if-lt v0, v6, :cond_3

    .line 188
    const v3, 0xdbff

    if-gt v0, v3, :cond_3

    add-int/lit8 v3, p1, -0x1

    if-ge v1, v3, :cond_3

    .line 189
    add-int/lit8 v3, v1, 0x1

    aget-char v2, p2, v3

    .line 191
    .local v2, "low":C
    if-lt v2, v7, :cond_3

    .line 192
    const v3, 0xdfff

    if-gt v2, v3, :cond_3

    .line 193
    sub-int v3, v0, v6

    mul-int/lit16 v3, v3, 0x400

    add-int/2addr v3, v2

    sub-int/2addr v3, v7

    .line 194
    const/high16 v4, 0x10000

    .line 193
    add-int v0, v3, v4

    .line 196
    invoke-direct {p0, v0}, Lae/sun/font/TrueTypeGlyphMapper;->getGlyphFromCMAP(I)C

    move-result v3

    aput v3, p3, v1

    .line 197
    add-int/lit8 v1, v1, 0x1

    .line 198
    const v3, 0xffff

    aput v3, p3, v1

    .line 179
    .end local v2    # "low":C
    :cond_1
    :goto_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 184
    .end local v0    # "code":I
    :cond_2
    aget-char v0, p2, v1

    .restart local v0    # "code":I
    goto :goto_1

    .line 202
    :cond_3
    invoke-direct {p0, v0}, Lae/sun/font/TrueTypeGlyphMapper;->getGlyphFromCMAP(I)C

    move-result v3

    aput v3, p3, v1

    .line 204
    iget-object v3, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    invoke-virtual {v3}, Lae/sun/font/TrueTypeFont;->checkUseNatives()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 205
    aget v3, p3, v1

    iget-object v4, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    iget-object v4, v4, Lae/sun/font/TrueTypeFont;->glyphToCharMap:[C

    array-length v4, v4

    if-ge v3, v4, :cond_1

    .line 206
    iget-object v3, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    iget-object v3, v3, Lae/sun/font/TrueTypeFont;->glyphToCharMap:[C

    aget v4, p3, v1

    int-to-char v5, v0

    aput-char v5, v3, v4

    goto :goto_2
.end method

.method public charsToGlyphs(I[I[I)V
    .locals 4
    .param p1, "count"    # I
    .param p2, "unicodes"    # [I
    .param p3, "glyphs"    # [I

    .prologue
    .line 164
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    if-lt v0, p1, :cond_0

    .line 175
    return-void

    .line 165
    :cond_0
    iget-boolean v1, p0, Lae/sun/font/TrueTypeGlyphMapper;->needsJAremapping:Z

    if-eqz v1, :cond_2

    .line 166
    aget v1, p2, v0

    invoke-direct {p0, v1}, Lae/sun/font/TrueTypeGlyphMapper;->remapJAIntChar(I)I

    move-result v1

    invoke-direct {p0, v1}, Lae/sun/font/TrueTypeGlyphMapper;->getGlyphFromCMAP(I)C

    move-result v1

    aput v1, p3, v0

    .line 170
    :goto_1
    iget-object v1, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    invoke-virtual {v1}, Lae/sun/font/TrueTypeFont;->checkUseNatives()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 171
    aget v1, p3, v0

    iget-object v2, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    iget-object v2, v2, Lae/sun/font/TrueTypeFont;->glyphToCharMap:[C

    array-length v2, v2

    if-ge v1, v2, :cond_1

    .line 172
    iget-object v1, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    iget-object v1, v1, Lae/sun/font/TrueTypeFont;->glyphToCharMap:[C

    aget v2, p3, v0

    aget v3, p2, v0

    int-to-char v3, v3

    aput-char v3, v1, v2

    .line 164
    :cond_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 168
    :cond_2
    aget v1, p2, v0

    invoke-direct {p0, v1}, Lae/sun/font/TrueTypeGlyphMapper;->getGlyphFromCMAP(I)C

    move-result v1

    aput v1, p3, v0

    goto :goto_1
.end method

.method public charsToGlyphsNS(I[C[I)Z
    .locals 9
    .param p1, "count"    # I
    .param p2, "unicodes"    # [C
    .param p3, "glyphs"    # [I

    .prologue
    const/high16 v8, 0x10000

    const v7, 0xdc00

    const v6, 0xd800

    .line 219
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-lt v1, p1, :cond_0

    .line 257
    const/4 v3, 0x0

    :goto_1
    return v3

    .line 221
    :cond_0
    iget-boolean v3, p0, Lae/sun/font/TrueTypeGlyphMapper;->needsJAremapping:Z

    if-eqz v3, :cond_4

    .line 222
    aget-char v3, p2, v1

    invoke-direct {p0, v3}, Lae/sun/font/TrueTypeGlyphMapper;->remapJAChar(C)C

    move-result v0

    .line 227
    .local v0, "code":I
    :goto_2
    if-lt v0, v6, :cond_1

    .line 228
    const v3, 0xdbff

    if-gt v0, v3, :cond_1

    add-int/lit8 v3, p1, -0x1

    if-ge v1, v3, :cond_1

    .line 229
    add-int/lit8 v3, v1, 0x1

    aget-char v2, p2, v3

    .line 231
    .local v2, "low":C
    if-lt v2, v7, :cond_1

    .line 232
    const v3, 0xdfff

    if-gt v2, v3, :cond_1

    .line 233
    sub-int v3, v0, v6

    mul-int/lit16 v3, v3, 0x400

    add-int/2addr v3, v2

    sub-int/2addr v3, v7

    add-int v0, v3, v8

    .line 235
    add-int/lit8 v3, v1, 0x1

    const v4, 0xffff

    aput v4, p3, v3

    .line 239
    .end local v2    # "low":C
    :cond_1
    invoke-direct {p0, v0}, Lae/sun/font/TrueTypeGlyphMapper;->getGlyphFromCMAP(I)C

    move-result v3

    aput v3, p3, v1

    .line 240
    iget-object v3, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    invoke-virtual {v3}, Lae/sun/font/TrueTypeFont;->checkUseNatives()Z

    move-result v3

    if-eqz v3, :cond_2

    .line 241
    aget v3, p3, v1

    iget-object v4, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    iget-object v4, v4, Lae/sun/font/TrueTypeFont;->glyphToCharMap:[C

    array-length v4, v4

    if-ge v3, v4, :cond_2

    .line 242
    iget-object v3, p0, Lae/sun/font/TrueTypeGlyphMapper;->font:Lae/sun/font/TrueTypeFont;

    iget-object v3, v3, Lae/sun/font/TrueTypeFont;->glyphToCharMap:[C

    aget v4, p3, v1

    int-to-char v5, v0

    aput-char v5, v3, v4

    .line 245
    :cond_2
    const/16 v3, 0x300

    if-ge v0, v3, :cond_5

    .line 219
    :cond_3
    :goto_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 224
    .end local v0    # "code":I
    :cond_4
    aget-char v0, p2, v1

    .restart local v0    # "code":I
    goto :goto_2

    .line 248
    :cond_5
    invoke-static {v0}, Lae/sun/font/FontManager;->isComplexCharCode(I)Z

    move-result v3

    if-eqz v3, :cond_6

    .line 249
    const/4 v3, 0x1

    goto :goto_1

    .line 251
    :cond_6
    if-lt v0, v8, :cond_3

    .line 252
    add-int/lit8 v1, v1, 0x1

    goto :goto_3
.end method

.method public getNumGlyphs()I
    .locals 1

    .prologue
    .line 75
    iget v0, p0, Lae/sun/font/TrueTypeGlyphMapper;->numGlyphs:I

    return v0
.end method

.method hasSupplementaryChars()Z
    .locals 1

    .prologue
    .line 265
    iget-object v0, p0, Lae/sun/font/TrueTypeGlyphMapper;->cmap:Lae/sun/font/CMap;

    instance-of v0, v0, Lae/sun/font/CMap$CMapFormat8;

    if-nez v0, :cond_0

    .line 266
    iget-object v0, p0, Lae/sun/font/TrueTypeGlyphMapper;->cmap:Lae/sun/font/CMap;

    instance-of v0, v0, Lae/sun/font/CMap$CMapFormat10;

    if-nez v0, :cond_0

    .line 267
    iget-object v0, p0, Lae/sun/font/TrueTypeGlyphMapper;->cmap:Lae/sun/font/CMap;

    instance-of v0, v0, Lae/sun/font/CMap$CMapFormat12;

    if-nez v0, :cond_0

    .line 264
    const/4 v0, 0x0

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x1

    goto :goto_0
.end method

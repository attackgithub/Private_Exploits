.class public final Lae/sun/font/CompositeGlyphMapper;
.super Lae/sun/font/CharToGlyphMapper;
.source "CompositeGlyphMapper.java"


# static fields
.field public static final BLOCKSZ:I = 0x100

.field public static final GLYPHMASK:I = 0xffffff

.field public static final MAXUNICODE:I = 0xd800

.field public static final NBLOCKS:I = 0xd8

.field public static final SLOTMASK:I = -0x1000000


# instance fields
.field font:Lae/sun/font/CompositeFont;

.field glyphMaps:[[I

.field private hasExcludes:Z

.field slotMappers:[Lae/sun/font/CharToGlyphMapper;


# direct methods
.method public constructor <init>(Lae/sun/font/CompositeFont;)V
    .locals 1
    .param p1, "compFont"    # Lae/sun/font/CompositeFont;

    .prologue
    .line 60
    invoke-direct {p0}, Lae/sun/font/CharToGlyphMapper;-><init>()V

    .line 61
    iput-object p1, p0, Lae/sun/font/CompositeGlyphMapper;->font:Lae/sun/font/CompositeFont;

    .line 62
    invoke-direct {p0}, Lae/sun/font/CompositeGlyphMapper;->initMapper()V

    .line 66
    iget-object v0, p1, Lae/sun/font/CompositeFont;->exclusionRanges:[I

    if-eqz v0, :cond_0

    .line 67
    iget-object v0, p1, Lae/sun/font/CompositeFont;->maxIndices:[I

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    .line 66
    :goto_0
    iput-boolean v0, p0, Lae/sun/font/CompositeGlyphMapper;->hasExcludes:Z

    .line 68
    return-void

    .line 67
    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private final convertToGlyph(I)I
    .locals 4
    .param p1, "unicode"    # I

    .prologue
    .line 122
    const/4 v2, 0x0

    .local v2, "slot":I
    :goto_0
    iget-object v3, p0, Lae/sun/font/CompositeGlyphMapper;->font:Lae/sun/font/CompositeFont;

    iget v3, v3, Lae/sun/font/CompositeFont;->numSlots:I

    if-lt v2, v3, :cond_0

    .line 133
    iget v0, p0, Lae/sun/font/CompositeGlyphMapper;->missingGlyph:I

    :goto_1
    return v0

    .line 123
    :cond_0
    iget-boolean v3, p0, Lae/sun/font/CompositeGlyphMapper;->hasExcludes:Z

    if-eqz v3, :cond_1

    iget-object v3, p0, Lae/sun/font/CompositeGlyphMapper;->font:Lae/sun/font/CompositeFont;

    invoke-virtual {v3, v2, p1}, Lae/sun/font/CompositeFont;->isExcludedChar(II)Z

    move-result v3

    if-nez v3, :cond_2

    .line 124
    :cond_1
    invoke-direct {p0, v2}, Lae/sun/font/CompositeGlyphMapper;->getSlotMapper(I)Lae/sun/font/CharToGlyphMapper;

    move-result-object v1

    .line 125
    .local v1, "mapper":Lae/sun/font/CharToGlyphMapper;
    invoke-virtual {v1, p1}, Lae/sun/font/CharToGlyphMapper;->charToGlyph(I)I

    move-result v0

    .line 126
    .local v0, "glyphCode":I
    invoke-virtual {v1}, Lae/sun/font/CharToGlyphMapper;->getMissingGlyphCode()I

    move-result v3

    if-eq v0, v3, :cond_2

    .line 127
    invoke-virtual {p0, v2, v0}, Lae/sun/font/CompositeGlyphMapper;->compositeGlyphCode(II)I

    move-result v0

    .line 128
    invoke-direct {p0, p1, v0}, Lae/sun/font/CompositeGlyphMapper;->setCachedGlyphCode(II)V

    goto :goto_1

    .line 122
    .end local v0    # "glyphCode":I
    .end local v1    # "mapper":Lae/sun/font/CharToGlyphMapper;
    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0
.end method

.method private getCachedGlyphCode(I)I
    .locals 4
    .param p1, "unicode"    # I

    .prologue
    const/4 v1, -0x1

    .line 87
    const v2, 0xd800

    if-lt p1, v2, :cond_1

    .line 94
    :cond_0
    :goto_0
    return v1

    .line 91
    :cond_1
    iget-object v2, p0, Lae/sun/font/CompositeGlyphMapper;->glyphMaps:[[I

    shr-int/lit8 v3, p1, 0x8

    aget-object v0, v2, v3

    .local v0, "gmap":[I
    if-eqz v0, :cond_0

    .line 94
    and-int/lit16 v1, p1, 0xff

    aget v1, v0, v1

    goto :goto_0
.end method

.method private final getSlotMapper(I)Lae/sun/font/CharToGlyphMapper;
    .locals 2
    .param p1, "slot"    # I

    .prologue
    .line 112
    iget-object v1, p0, Lae/sun/font/CompositeGlyphMapper;->slotMappers:[Lae/sun/font/CharToGlyphMapper;

    aget-object v0, v1, p1

    .line 113
    .local v0, "mapper":Lae/sun/font/CharToGlyphMapper;
    if-nez v0, :cond_0

    .line 114
    iget-object v1, p0, Lae/sun/font/CompositeGlyphMapper;->font:Lae/sun/font/CompositeFont;

    invoke-virtual {v1, p1}, Lae/sun/font/CompositeFont;->getSlotFont(I)Lae/sun/font/PhysicalFont;

    move-result-object v1

    invoke-virtual {v1}, Lae/sun/font/PhysicalFont;->getMapper()Lae/sun/font/CharToGlyphMapper;

    move-result-object v0

    .line 115
    iget-object v1, p0, Lae/sun/font/CompositeGlyphMapper;->slotMappers:[Lae/sun/font/CharToGlyphMapper;

    aput-object v0, v1, p1

    .line 117
    :cond_0
    return-object v0
.end method

.method private final initMapper()V
    .locals 3

    .prologue
    const/4 v2, 0x0

    .line 75
    iget v0, p0, Lae/sun/font/CompositeGlyphMapper;->missingGlyph:I

    const/4 v1, -0x1

    if-ne v0, v1, :cond_1

    .line 76
    iget-object v0, p0, Lae/sun/font/CompositeGlyphMapper;->glyphMaps:[[I

    if-nez v0, :cond_0

    .line 77
    const/16 v0, 0xd8

    new-array v0, v0, [[I

    iput-object v0, p0, Lae/sun/font/CompositeGlyphMapper;->glyphMaps:[[I

    .line 79
    :cond_0
    iget-object v0, p0, Lae/sun/font/CompositeGlyphMapper;->font:Lae/sun/font/CompositeFont;

    iget v0, v0, Lae/sun/font/CompositeFont;->numSlots:I

    new-array v0, v0, [Lae/sun/font/CharToGlyphMapper;

    iput-object v0, p0, Lae/sun/font/CompositeGlyphMapper;->slotMappers:[Lae/sun/font/CharToGlyphMapper;

    .line 81
    iget-object v0, p0, Lae/sun/font/CompositeGlyphMapper;->font:Lae/sun/font/CompositeFont;

    invoke-virtual {v0, v2}, Lae/sun/font/CompositeFont;->getSlotFont(I)Lae/sun/font/PhysicalFont;

    move-result-object v0

    invoke-virtual {v0}, Lae/sun/font/PhysicalFont;->getMissingGlyphCode()I

    move-result v0

    iput v0, p0, Lae/sun/font/CompositeGlyphMapper;->missingGlyph:I

    .line 82
    iget v0, p0, Lae/sun/font/CompositeGlyphMapper;->missingGlyph:I

    invoke-virtual {p0, v2, v0}, Lae/sun/font/CompositeGlyphMapper;->compositeGlyphCode(II)I

    move-result v0

    iput v0, p0, Lae/sun/font/CompositeGlyphMapper;->missingGlyph:I

    .line 84
    :cond_1
    return-void
.end method

.method private setCachedGlyphCode(II)V
    .locals 5
    .param p1, "unicode"    # I
    .param p2, "glyphCode"    # I

    .prologue
    const/16 v4, 0x100

    .line 98
    const v2, 0xd800

    if-lt p1, v2, :cond_0

    .line 109
    :goto_0
    return-void

    .line 101
    :cond_0
    shr-int/lit8 v1, p1, 0x8

    .line 102
    .local v1, "index0":I
    iget-object v2, p0, Lae/sun/font/CompositeGlyphMapper;->glyphMaps:[[I

    aget-object v2, v2, v1

    if-nez v2, :cond_1

    .line 103
    iget-object v2, p0, Lae/sun/font/CompositeGlyphMapper;->glyphMaps:[[I

    new-array v3, v4, [I

    aput-object v3, v2, v1

    .line 104
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    if-lt v0, v4, :cond_2

    .line 108
    .end local v0    # "i":I
    :cond_1
    iget-object v2, p0, Lae/sun/font/CompositeGlyphMapper;->glyphMaps:[[I

    aget-object v2, v2, v1

    and-int/lit16 v3, p1, 0xff

    aput p2, v2, v3

    goto :goto_0

    .line 105
    .restart local v0    # "i":I
    :cond_2
    iget-object v2, p0, Lae/sun/font/CompositeGlyphMapper;->glyphMaps:[[I

    aget-object v2, v2, v1

    const/4 v3, -0x1

    aput v3, v2, v0

    .line 104
    add-int/lit8 v0, v0, 0x1

    goto :goto_1
.end method


# virtual methods
.method public charToGlyph(C)I
    .locals 2
    .param p1, "unicode"    # C

    .prologue
    .line 180
    invoke-direct {p0, p1}, Lae/sun/font/CompositeGlyphMapper;->getCachedGlyphCode(I)I

    move-result v0

    .line 181
    .local v0, "glyphCode":I
    const/4 v1, -0x1

    if-ne v0, v1, :cond_0

    .line 182
    invoke-direct {p0, p1}, Lae/sun/font/CompositeGlyphMapper;->convertToGlyph(I)I

    move-result v0

    .line 184
    :cond_0
    return v0
.end method

.method public charToGlyph(I)I
    .locals 2
    .param p1, "unicode"    # I

    .prologue
    .line 160
    invoke-direct {p0, p1}, Lae/sun/font/CompositeGlyphMapper;->getCachedGlyphCode(I)I

    move-result v0

    .line 161
    .local v0, "glyphCode":I
    const/4 v1, -0x1

    if-ne v0, v1, :cond_0

    .line 162
    invoke-direct {p0, p1}, Lae/sun/font/CompositeGlyphMapper;->convertToGlyph(I)I

    move-result v0

    .line 164
    :cond_0
    return v0
.end method

.method public charToGlyph(II)I
    .locals 3
    .param p1, "unicode"    # I
    .param p2, "prefSlot"    # I

    .prologue
    .line 168
    if-ltz p2, :cond_0

    .line 169
    invoke-direct {p0, p2}, Lae/sun/font/CompositeGlyphMapper;->getSlotMapper(I)Lae/sun/font/CharToGlyphMapper;

    move-result-object v1

    .line 170
    .local v1, "mapper":Lae/sun/font/CharToGlyphMapper;
    invoke-virtual {v1, p1}, Lae/sun/font/CharToGlyphMapper;->charToGlyph(I)I

    move-result v0

    .line 171
    .local v0, "glyphCode":I
    invoke-virtual {v1}, Lae/sun/font/CharToGlyphMapper;->getMissingGlyphCode()I

    move-result v2

    if-eq v0, v2, :cond_0

    .line 172
    invoke-virtual {p0, p2, v0}, Lae/sun/font/CompositeGlyphMapper;->compositeGlyphCode(II)I

    move-result v2

    .line 175
    .end local v0    # "glyphCode":I
    .end local v1    # "mapper":Lae/sun/font/CharToGlyphMapper;
    :goto_0
    return v2

    :cond_0
    invoke-virtual {p0, p1}, Lae/sun/font/CompositeGlyphMapper;->charToGlyph(I)I

    move-result v2

    goto :goto_0
.end method

.method public charsToGlyphs(I[C[I)V
    .locals 9
    .param p1, "count"    # I
    .param p2, "unicodes"    # [C
    .param p3, "glyphs"    # [I

    .prologue
    const v8, 0xdc00

    const v7, 0xd800

    const/4 v6, -0x1

    .line 233
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-lt v2, p1, :cond_0

    .line 260
    return-void

    .line 234
    :cond_0
    aget-char v0, p2, v2

    .line 236
    .local v0, "code":I
    if-lt v0, v7, :cond_3

    .line 237
    const v4, 0xdbff

    if-gt v0, v4, :cond_3

    add-int/lit8 v4, p1, -0x1

    if-ge v2, v4, :cond_3

    .line 238
    add-int/lit8 v4, v2, 0x1

    aget-char v3, p2, v4

    .line 240
    .local v3, "low":C
    if-lt v3, v8, :cond_3

    .line 241
    const v4, 0xdfff

    if-gt v3, v4, :cond_3

    .line 242
    sub-int v4, v0, v7

    mul-int/lit16 v4, v4, 0x400

    add-int/2addr v4, v3

    sub-int/2addr v4, v8

    .line 243
    const/high16 v5, 0x10000

    .line 242
    add-int v0, v4, v5

    .line 245
    invoke-direct {p0, v0}, Lae/sun/font/CompositeGlyphMapper;->getCachedGlyphCode(I)I

    move-result v1

    aput v1, p3, v2

    .line 246
    .local v1, "gc":I
    if-ne v1, v6, :cond_1

    .line 247
    invoke-direct {p0, v0}, Lae/sun/font/CompositeGlyphMapper;->convertToGlyph(I)I

    move-result v4

    aput v4, p3, v2

    .line 249
    :cond_1
    add-int/lit8 v2, v2, 0x1

    .line 250
    const v4, 0xffff

    aput v4, p3, v2

    .line 233
    .end local v3    # "low":C
    :cond_2
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 255
    .end local v1    # "gc":I
    :cond_3
    invoke-direct {p0, v0}, Lae/sun/font/CompositeGlyphMapper;->getCachedGlyphCode(I)I

    move-result v1

    aput v1, p3, v2

    .line 256
    .restart local v1    # "gc":I
    if-ne v1, v6, :cond_2

    .line 257
    invoke-direct {p0, v0}, Lae/sun/font/CompositeGlyphMapper;->convertToGlyph(I)I

    move-result v4

    aput v4, p3, v2

    goto :goto_1
.end method

.method public charsToGlyphs(I[I[I)V
    .locals 4
    .param p1, "count"    # I
    .param p2, "unicodes"    # [I
    .param p3, "glyphs"    # [I

    .prologue
    .line 263
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-lt v1, p1, :cond_0

    .line 271
    return-void

    .line 264
    :cond_0
    aget v0, p2, v1

    .line 266
    .local v0, "code":I
    invoke-direct {p0, v0}, Lae/sun/font/CompositeGlyphMapper;->getCachedGlyphCode(I)I

    move-result v2

    aput v2, p3, v1

    .line 267
    aget v2, p3, v1

    const/4 v3, -0x1

    if-ne v2, v3, :cond_1

    .line 268
    invoke-direct {p0, v0}, Lae/sun/font/CompositeGlyphMapper;->convertToGlyph(I)I

    move-result v2

    aput v2, p3, v1

    .line 263
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0
.end method

.method public charsToGlyphsNS(I[C[I)Z
    .locals 9
    .param p1, "count"    # I
    .param p2, "unicodes"    # [C
    .param p3, "glyphs"    # [I

    .prologue
    const/high16 v8, 0x10000

    const v7, 0xdc00

    const v6, 0xd800

    .line 194
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-lt v2, p1, :cond_0

    .line 226
    const/4 v4, 0x0

    :goto_1
    return v4

    .line 195
    :cond_0
    aget-char v0, p2, v2

    .line 197
    .local v0, "code":I
    if-lt v0, v6, :cond_1

    .line 198
    const v4, 0xdbff

    if-gt v0, v4, :cond_1

    add-int/lit8 v4, p1, -0x1

    if-ge v2, v4, :cond_1

    .line 199
    add-int/lit8 v4, v2, 0x1

    aget-char v3, p2, v4

    .line 201
    .local v3, "low":C
    if-lt v3, v7, :cond_1

    .line 202
    const v4, 0xdfff

    if-gt v3, v4, :cond_1

    .line 203
    sub-int v4, v0, v6

    mul-int/lit16 v4, v4, 0x400

    add-int/2addr v4, v3

    sub-int/2addr v4, v7

    add-int v0, v4, v8

    .line 205
    add-int/lit8 v4, v2, 0x1

    const v5, 0xffff

    aput v5, p3, v4

    .line 209
    .end local v3    # "low":C
    :cond_1
    invoke-direct {p0, v0}, Lae/sun/font/CompositeGlyphMapper;->getCachedGlyphCode(I)I

    move-result v1

    aput v1, p3, v2

    .line 210
    .local v1, "gc":I
    const/4 v4, -0x1

    if-ne v1, v4, :cond_2

    .line 211
    invoke-direct {p0, v0}, Lae/sun/font/CompositeGlyphMapper;->convertToGlyph(I)I

    move-result v4

    aput v4, p3, v2

    .line 214
    :cond_2
    const/16 v4, 0x300

    if-ge v0, v4, :cond_4

    .line 194
    :cond_3
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 217
    :cond_4
    invoke-static {v0}, Lae/sun/font/FontManager;->isComplexCharCode(I)Z

    move-result v4

    if-eqz v4, :cond_5

    .line 218
    const/4 v4, 0x1

    goto :goto_1

    .line 220
    :cond_5
    if-lt v0, v8, :cond_3

    .line 221
    add-int/lit8 v2, v2, 0x1

    goto :goto_2
.end method

.method public final compositeGlyphCode(II)I
    .locals 2
    .param p1, "slot"    # I
    .param p2, "glyphCode"    # I

    .prologue
    .line 71
    shl-int/lit8 v0, p1, 0x18

    const v1, 0xffffff

    and-int/2addr v1, p2

    or-int/2addr v0, v1

    return v0
.end method

.method public getNumGlyphs()I
    .locals 4

    .prologue
    .line 137
    const/4 v1, 0x0

    .line 147
    .local v1, "numGlyphs":I
    const/4 v2, 0x0

    .local v2, "slot":I
    :goto_0
    const/4 v3, 0x1

    if-lt v2, v3, :cond_0

    .line 155
    return v1

    .line 148
    :cond_0
    iget-object v3, p0, Lae/sun/font/CompositeGlyphMapper;->slotMappers:[Lae/sun/font/CharToGlyphMapper;

    aget-object v0, v3, v2

    .line 149
    .local v0, "mapper":Lae/sun/font/CharToGlyphMapper;
    if-nez v0, :cond_1

    .line 150
    iget-object v3, p0, Lae/sun/font/CompositeGlyphMapper;->font:Lae/sun/font/CompositeFont;

    invoke-virtual {v3, v2}, Lae/sun/font/CompositeFont;->getSlotFont(I)Lae/sun/font/PhysicalFont;

    move-result-object v3

    invoke-virtual {v3}, Lae/sun/font/PhysicalFont;->getMapper()Lae/sun/font/CharToGlyphMapper;

    move-result-object v0

    .line 151
    iget-object v3, p0, Lae/sun/font/CompositeGlyphMapper;->slotMappers:[Lae/sun/font/CharToGlyphMapper;

    aput-object v0, v3, v2

    .line 153
    :cond_1
    invoke-virtual {v0}, Lae/sun/font/CharToGlyphMapper;->getNumGlyphs()I

    move-result v3

    add-int/2addr v1, v3

    .line 147
    add-int/lit8 v2, v2, 0x1

    goto :goto_0
.end method

.class public abstract Lae/sun/font/FileFont;
.super Lae/sun/font/PhysicalFont;
.source "FileFont.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lae/sun/font/FileFont$CreatedFontFileDisposerRecord;
    }
.end annotation


# instance fields
.field protected checkedNatives:Z

.field protected fileSize:I

.field protected glyphToCharMap:[C

.field protected scaler:Lae/sun/font/FontScaler;

.field protected useJavaRasterizer:Z

.field protected useNatives:Z


# direct methods
.method constructor <init>(Ljava/lang/String;Ljava/lang/Object;)V
    .locals 1
    .param p1, "platname"    # Ljava/lang/String;
    .param p2, "nativeNames"    # Ljava/lang/Object;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lae/java/awt/FontFormatException;
        }
    .end annotation

    .prologue
    .line 97
    invoke-direct {p0, p1, p2}, Lae/sun/font/PhysicalFont;-><init>(Ljava/lang/String;Ljava/lang/Object;)V

    .line 54
    const/4 v0, 0x1

    iput-boolean v0, p0, Lae/sun/font/FileFont;->useJavaRasterizer:Z

    .line 98
    return-void
.end method


# virtual methods
.method public canDoStyle(I)Z
    .locals 1
    .param p1, "style"    # I

    .prologue
    .line 125
    const/4 v0, 0x1

    return v0
.end method

.method protected checkUseNatives()Z
    .locals 1

    .prologue
    .line 108
    const/4 v0, 0x1

    iput-boolean v0, p0, Lae/sun/font/FileFont;->checkedNatives:Z

    .line 109
    iget-boolean v0, p0, Lae/sun/font/FileFont;->useNatives:Z

    return v0
.end method

.method protected abstract close()V
.end method

.method createStrike(Lae/sun/font/FontStrikeDesc;)Lae/sun/font/FontStrike;
    .locals 1
    .param p1, "desc"    # Lae/sun/font/FontStrikeDesc;

    .prologue
    .line 101
    iget-boolean v0, p0, Lae/sun/font/FileFont;->checkedNatives:Z

    if-nez v0, :cond_0

    .line 102
    invoke-virtual {p0}, Lae/sun/font/FileFont;->checkUseNatives()Z

    .line 104
    :cond_0
    new-instance v0, Lae/sun/font/FileFontStrike;

    invoke-direct {v0, p0, p1}, Lae/sun/font/FileFontStrike;-><init>(Lae/sun/font/FileFont;Lae/sun/font/FontStrikeDesc;)V

    return-object v0
.end method

.method declared-synchronized deregisterFontAndClearStrikeCache()V
    .locals 8

    .prologue
    .line 161
    monitor-enter p0

    :try_start_0
    invoke-static {p0}, Lae/sun/font/FontManager;->deRegisterBadFont(Lae/sun/font/Font2D;)V

    .line 163
    iget-object v2, p0, Lae/sun/font/FileFont;->strikeCache:Ljava/util/concurrent/ConcurrentHashMap;

    invoke-virtual {v2}, Ljava/util/concurrent/ConcurrentHashMap;->values()Ljava/util/Collection;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :cond_0
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-nez v3, :cond_1

    .line 174
    iget-object v2, p0, Lae/sun/font/FileFont;->scaler:Lae/sun/font/FontScaler;

    invoke-virtual {v2}, Lae/sun/font/FontScaler;->dispose()V

    .line 175
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v2

    iput-object v2, p0, Lae/sun/font/FileFont;->scaler:Lae/sun/font/FontScaler;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 176
    monitor-exit p0

    return-void

    .line 163
    :cond_1
    :try_start_1
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/ref/Reference;

    .line 164
    .local v1, "strikeRef":Ljava/lang/ref/Reference;
    if-eqz v1, :cond_0

    .line 168
    invoke-virtual {v1}, Ljava/lang/ref/Reference;->get()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lae/sun/font/FileFontStrike;

    .line 169
    .local v0, "strike":Lae/sun/font/FileFontStrike;
    if-eqz v0, :cond_0

    iget-wide v4, v0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    const-wide/16 v6, 0x0

    cmp-long v3, v4, v6

    if-eqz v3, :cond_0

    .line 170
    iget-object v3, p0, Lae/sun/font/FileFont;->scaler:Lae/sun/font/FontScaler;

    iget-wide v4, v0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    invoke-virtual {v3, v4, v5}, Lae/sun/font/FontScaler;->invalidateScalerContext(J)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 161
    .end local v0    # "strike":Lae/sun/font/FileFontStrike;
    .end local v1    # "strikeRef":Ljava/lang/ref/Reference;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method getFontMetrics(J)Lae/sun/font/StrikeMetrics;
    .locals 3
    .param p1, "pScalerContext"    # J

    .prologue
    .line 180
    :try_start_0
    invoke-virtual {p0}, Lae/sun/font/FileFont;->getScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    invoke-virtual {v1, p1, p2}, Lae/sun/font/FontScaler;->getFontMetrics(J)Lae/sun/font/StrikeMetrics;
    :try_end_0
    .catch Lae/sun/font/FontScalerException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 183
    :goto_0
    return-object v1

    .line 181
    :catch_0
    move-exception v0

    .line 182
    .local v0, "fe":Lae/sun/font/FontScalerException;
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    iput-object v1, p0, Lae/sun/font/FileFont;->scaler:Lae/sun/font/FontScaler;

    .line 183
    invoke-virtual {p0, p1, p2}, Lae/sun/font/FileFont;->getFontMetrics(J)Lae/sun/font/StrikeMetrics;

    move-result-object v1

    goto :goto_0
.end method

.method getGlyphAdvance(JI)F
    .locals 3
    .param p1, "pScalerContext"    # J
    .param p3, "glyphCode"    # I

    .prologue
    .line 189
    :try_start_0
    invoke-virtual {p0}, Lae/sun/font/FileFont;->getScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    invoke-virtual {v1, p1, p2, p3}, Lae/sun/font/FontScaler;->getGlyphAdvance(JI)F
    :try_end_0
    .catch Lae/sun/font/FontScalerException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v1

    .line 192
    :goto_0
    return v1

    .line 190
    :catch_0
    move-exception v0

    .line 191
    .local v0, "fe":Lae/sun/font/FontScalerException;
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    iput-object v1, p0, Lae/sun/font/FileFont;->scaler:Lae/sun/font/FontScaler;

    .line 192
    invoke-virtual {p0, p1, p2, p3}, Lae/sun/font/FileFont;->getGlyphAdvance(JI)F

    move-result v1

    goto :goto_0
.end method

.method getGlyphImage(JI)J
    .locals 5
    .param p1, "pScalerContext"    # J
    .param p3, "glyphCode"    # I

    .prologue
    .line 207
    :try_start_0
    invoke-virtual {p0}, Lae/sun/font/FileFont;->getScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    invoke-virtual {v1, p1, p2, p3}, Lae/sun/font/FontScaler;->getGlyphImage(JI)J
    :try_end_0
    .catch Lae/sun/font/FontScalerException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-wide v2

    .line 210
    :goto_0
    return-wide v2

    .line 208
    :catch_0
    move-exception v0

    .line 209
    .local v0, "fe":Lae/sun/font/FontScalerException;
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    iput-object v1, p0, Lae/sun/font/FileFont;->scaler:Lae/sun/font/FontScaler;

    .line 210
    invoke-virtual {p0, p1, p2, p3}, Lae/sun/font/FileFont;->getGlyphImage(JI)J

    move-result-wide v2

    goto :goto_0
.end method

.method getGlyphMetrics(JILae/java/awt/geom/Point2D$Float;)V
    .locals 3
    .param p1, "pScalerContext"    # J
    .param p3, "glyphCode"    # I
    .param p4, "metrics"    # Lae/java/awt/geom/Point2D$Float;

    .prologue
    .line 198
    :try_start_0
    invoke-virtual {p0}, Lae/sun/font/FileFont;->getScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    invoke-virtual {v1, p1, p2, p3, p4}, Lae/sun/font/FontScaler;->getGlyphMetrics(JILae/java/awt/geom/Point2D$Float;)V
    :try_end_0
    .catch Lae/sun/font/FontScalerException; {:try_start_0 .. :try_end_0} :catch_0

    .line 203
    :goto_0
    return-void

    .line 199
    :catch_0
    move-exception v0

    .line 200
    .local v0, "fe":Lae/sun/font/FontScalerException;
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    iput-object v1, p0, Lae/sun/font/FileFont;->scaler:Lae/sun/font/FontScaler;

    .line 201
    invoke-virtual {p0, p1, p2, p3, p4}, Lae/sun/font/FileFont;->getGlyphMetrics(JILae/java/awt/geom/Point2D$Float;)V

    goto :goto_0
.end method

.method getGlyphOutline(JIFF)Lae/java/awt/geom/GeneralPath;
    .locals 7
    .param p1, "pScalerContext"    # J
    .param p3, "glyphCode"    # I
    .param p4, "x"    # F
    .param p5, "y"    # F

    .prologue
    .line 225
    :try_start_0
    invoke-virtual {p0}, Lae/sun/font/FileFont;->getScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    move-wide v2, p1

    move v4, p3

    move v5, p4

    move v6, p5

    invoke-virtual/range {v1 .. v6}, Lae/sun/font/FontScaler;->getGlyphOutline(JIFF)Lae/java/awt/geom/GeneralPath;
    :try_end_0
    .catch Lae/sun/font/FontScalerException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 228
    :goto_0
    return-object v1

    .line 226
    :catch_0
    move-exception v0

    .line 227
    .local v0, "fe":Lae/sun/font/FontScalerException;
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    iput-object v1, p0, Lae/sun/font/FileFont;->scaler:Lae/sun/font/FontScaler;

    .line 228
    invoke-virtual/range {p0 .. p5}, Lae/sun/font/FileFont;->getGlyphOutline(JIFF)Lae/java/awt/geom/GeneralPath;

    move-result-object v1

    goto :goto_0
.end method

.method getGlyphOutlineBounds(JI)Lae/java/awt/geom/Rectangle2D$Float;
    .locals 3
    .param p1, "pScalerContext"    # J
    .param p3, "glyphCode"    # I

    .prologue
    .line 216
    :try_start_0
    invoke-virtual {p0}, Lae/sun/font/FileFont;->getScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    invoke-virtual {v1, p1, p2, p3}, Lae/sun/font/FontScaler;->getGlyphOutlineBounds(JI)Lae/java/awt/geom/Rectangle2D$Float;
    :try_end_0
    .catch Lae/sun/font/FontScalerException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 219
    :goto_0
    return-object v1

    .line 217
    :catch_0
    move-exception v0

    .line 218
    .local v0, "fe":Lae/sun/font/FontScalerException;
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    iput-object v1, p0, Lae/sun/font/FileFont;->scaler:Lae/sun/font/FontScaler;

    .line 219
    invoke-virtual {p0, p1, p2, p3}, Lae/sun/font/FileFont;->getGlyphOutlineBounds(JI)Lae/java/awt/geom/Rectangle2D$Float;

    move-result-object v1

    goto :goto_0
.end method

.method getGlyphVectorOutline(J[IIFF)Lae/java/awt/geom/GeneralPath;
    .locals 9
    .param p1, "pScalerContext"    # J
    .param p3, "glyphs"    # [I
    .param p4, "numGlyphs"    # I
    .param p5, "x"    # F
    .param p6, "y"    # F

    .prologue
    .line 234
    :try_start_0
    invoke-virtual {p0}, Lae/sun/font/FileFont;->getScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    move-wide v2, p1

    move-object v4, p3

    move v5, p4

    move v6, p5

    move v7, p6

    invoke-virtual/range {v1 .. v7}, Lae/sun/font/FontScaler;->getGlyphVectorOutline(J[IIFF)Lae/java/awt/geom/GeneralPath;
    :try_end_0
    .catch Lae/sun/font/FontScalerException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 237
    :goto_0
    return-object v1

    .line 235
    :catch_0
    move-exception v0

    .line 236
    .local v0, "fe":Lae/sun/font/FontScalerException;
    invoke-static {}, Lae/sun/font/FontManager;->getNullScaler()Lae/sun/font/FontScaler;

    move-result-object v1

    iput-object v1, p0, Lae/sun/font/FileFont;->scaler:Lae/sun/font/FontScaler;

    .line 237
    invoke-virtual/range {p0 .. p6}, Lae/sun/font/FileFont;->getGlyphVectorOutline(J[IIFF)Lae/java/awt/geom/GeneralPath;

    move-result-object v1

    goto :goto_0
.end method

.method protected abstract getScaler()Lae/sun/font/FontScaler;
.end method

.method protected getUnitsPerEm()J
    .locals 2

    .prologue
    .line 246
    invoke-virtual {p0}, Lae/sun/font/FileFont;->getScaler()Lae/sun/font/FontScaler;

    move-result-object v0

    invoke-virtual {v0}, Lae/sun/font/FontScaler;->getUnitsPerEm()J

    move-result-wide v0

    return-wide v0
.end method

.method abstract readBlock(II)Ljava/nio/ByteBuffer;
.end method

.method setFileToRemove(Ljava/io/File;)V
    .locals 2
    .param p1, "file"    # Ljava/io/File;

    .prologue
    .line 129
    .line 130
    new-instance v0, Lae/sun/font/FileFont$CreatedFontFileDisposerRecord;

    const/4 v1, 0x0

    invoke-direct {v0, p1, v1}, Lae/sun/font/FileFont$CreatedFontFileDisposerRecord;-><init>(Ljava/io/File;Lae/sun/font/FileFont$CreatedFontFileDisposerRecord;)V

    .line 129
    invoke-static {p0, v0}, Lae/sun/java2d/Disposer;->addObjectRecord(Ljava/lang/Object;Lae/sun/java2d/DisposerRecord;)V

    .line 131
    return-void
.end method

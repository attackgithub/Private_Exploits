.class public Lae/sun/font/FileFontStrike;
.super Lae/sun/font/PhysicalStrike;
.source "FileFontStrike.java"


# static fields
.field private static final INTARRAY:I = 0x1

.field static final INVISIBLE_GLYPHS:I = 0xfffe

.field private static final LONGARRAY:I = 0x2

.field private static final SEGINTARRAY:I = 0x3

.field private static final SEGLONGARRAY:I = 0x4

.field private static final SEGSHIFT:I = 0x8

.field private static final SEGSIZE:I = 0x100

.field private static final SLOTZEROMAX:I = 0xffffff

.field private static final UNINITIALISED:I

.field private static isXPorLater:Z


# instance fields
.field boundsMap:Ljava/util/concurrent/ConcurrentHashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/concurrent/ConcurrentHashMap",
            "<",
            "Ljava/lang/Integer;",
            "Lae/java/awt/geom/Rectangle2D$Float;",
            ">;"
        }
    .end annotation
.end field

.field private fileFont:Lae/sun/font/FileFont;

.field private glyphCacheFormat:I

.field glyphMetricsMapRef:Ljava/lang/ref/SoftReference;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/lang/ref/SoftReference",
            "<",
            "Ljava/util/concurrent/ConcurrentHashMap",
            "<",
            "Ljava/lang/Integer;",
            "Lae/java/awt/geom/Point2D$Float;",
            ">;>;"
        }
    .end annotation
.end field

.field private horizontalAdvances:[F

.field private intPtSize:I

.field invertDevTx:Lae/java/awt/geom/AffineTransform;

.field private segHorizontalAdvances:[[F

.field private segIntGlyphImages:[[I

.field private segLongGlyphImages:[[J

.field private segmentedCache:Z

.field useNatives:Z


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .prologue
    .line 114
    const/4 v0, 0x0

    sput-boolean v0, Lae/sun/font/FileFontStrike;->isXPorLater:Z

    .line 116
    sget-boolean v0, Lae/sun/font/FontManager;->isWindows:Z

    if-eqz v0, :cond_0

    sget-boolean v0, Lae/sun/font/FontManager;->useT2K:Z

    if-nez v0, :cond_0

    .line 117
    invoke-static {}, Lae/java/awt/GraphicsEnvironment;->isHeadless()Z

    move-result v0

    if-nez v0, :cond_0

    .line 118
    invoke-static {}, Lae/sun/font/FileFontStrike;->initNative()Z

    move-result v0

    sput-boolean v0, Lae/sun/font/FileFontStrike;->isXPorLater:Z

    .line 406
    :cond_0
    return-void
.end method

.method constructor <init>(Lae/sun/font/FileFont;Lae/sun/font/FontStrikeDesc;)V
    .locals 18
    .param p1, "fileFont"    # Lae/sun/font/FileFont;
    .param p2, "desc"    # Lae/sun/font/FontStrikeDesc;

    .prologue
    .line 123
    invoke-direct/range {p0 .. p2}, Lae/sun/font/PhysicalStrike;-><init>(Lae/sun/font/PhysicalFont;Lae/sun/font/FontStrikeDesc;)V

    .line 60
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput v2, v0, Lae/sun/font/FileFontStrike;->glyphCacheFormat:I

    .line 124
    move-object/from16 v0, p1

    move-object/from16 v1, p0

    iput-object v0, v1, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    .line 126
    move-object/from16 v0, p2

    iget v2, v0, Lae/sun/font/FontStrikeDesc;->style:I

    move-object/from16 v0, p1

    iget v4, v0, Lae/sun/font/FileFont;->style:I

    if-eq v2, v4, :cond_1

    .line 131
    move-object/from16 v0, p2

    iget v2, v0, Lae/sun/font/FontStrikeDesc;->style:I

    and-int/lit8 v2, v2, 0x2

    const/4 v4, 0x2

    if-ne v2, v4, :cond_0

    .line 132
    move-object/from16 v0, p1

    iget v2, v0, Lae/sun/font/FileFont;->style:I

    and-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_0

    .line 133
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lae/sun/font/FileFontStrike;->algoStyle:Z

    .line 134
    const v2, 0x3f333333    # 0.7f

    move-object/from16 v0, p0

    iput v2, v0, Lae/sun/font/FileFontStrike;->italic:F

    .line 136
    :cond_0
    move-object/from16 v0, p2

    iget v2, v0, Lae/sun/font/FontStrikeDesc;->style:I

    and-int/lit8 v2, v2, 0x1

    const/4 v4, 0x1

    if-ne v2, v4, :cond_1

    .line 137
    move-object/from16 v0, p1

    iget v2, v0, Lae/sun/font/FileFont;->style:I

    and-int/lit8 v2, v2, 0x1

    if-nez v2, :cond_1

    .line 138
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lae/sun/font/FileFontStrike;->algoStyle:Z

    .line 139
    const v2, 0x3faa3d71    # 1.33f

    move-object/from16 v0, p0

    iput v2, v0, Lae/sun/font/FileFontStrike;->boldness:F

    .line 142
    :cond_1
    const/4 v2, 0x4

    new-array v3, v2, [D

    .line 143
    .local v3, "matrix":[D
    move-object/from16 v0, p2

    iget-object v9, v0, Lae/sun/font/FontStrikeDesc;->glyphTx:Lae/java/awt/geom/AffineTransform;

    .line 144
    .local v9, "at":Lae/java/awt/geom/AffineTransform;
    invoke-virtual {v9, v3}, Lae/java/awt/geom/AffineTransform;->getMatrix([D)V

    .line 145
    move-object/from16 v0, p2

    iget-object v2, v0, Lae/sun/font/FontStrikeDesc;->devTx:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v2}, Lae/java/awt/geom/AffineTransform;->isIdentity()Z

    move-result v2

    if-nez v2, :cond_2

    .line 146
    move-object/from16 v0, p2

    iget-object v2, v0, Lae/sun/font/FontStrikeDesc;->devTx:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v2}, Lae/java/awt/geom/AffineTransform;->getType()I

    move-result v2

    const/4 v4, 0x1

    if-eq v2, v4, :cond_2

    .line 148
    :try_start_0
    move-object/from16 v0, p2

    iget-object v2, v0, Lae/sun/font/FontStrikeDesc;->devTx:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v2}, Lae/java/awt/geom/AffineTransform;->createInverse()Lae/java/awt/geom/AffineTransform;

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, Lae/sun/font/FileFontStrike;->invertDevTx:Lae/java/awt/geom/AffineTransform;
    :try_end_0
    .catch Lae/java/awt/geom/NoninvertibleTransformException; {:try_start_0 .. :try_end_0} :catch_0

    .line 159
    :cond_2
    :goto_0
    const/4 v2, 0x0

    aget-wide v4, v3, v2

    invoke-static {v4, v5}, Ljava/lang/Double;->isNaN(D)Z

    move-result v2

    if-nez v2, :cond_3

    const/4 v2, 0x1

    aget-wide v4, v3, v2

    invoke-static {v4, v5}, Ljava/lang/Double;->isNaN(D)Z

    move-result v2

    if-nez v2, :cond_3

    .line 160
    const/4 v2, 0x2

    aget-wide v4, v3, v2

    invoke-static {v4, v5}, Ljava/lang/Double;->isNaN(D)Z

    move-result v2

    if-nez v2, :cond_3

    const/4 v2, 0x3

    aget-wide v4, v3, v2

    invoke-static {v4, v5}, Ljava/lang/Double;->isNaN(D)Z

    move-result v2

    if-nez v2, :cond_3

    .line 161
    invoke-virtual/range {p1 .. p1}, Lae/sun/font/FileFont;->getScaler()Lae/sun/font/FontScaler;

    move-result-object v2

    if-nez v2, :cond_6

    .line 162
    :cond_3
    invoke-static {}, Lae/sun/font/NullFontScaler;->getNullScalerContext()J

    move-result-wide v4

    move-object/from16 v0, p0

    iput-wide v4, v0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    .line 170
    :goto_1
    invoke-virtual/range {p1 .. p1}, Lae/sun/font/FileFont;->getMapper()Lae/sun/font/CharToGlyphMapper;

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, Lae/sun/font/FileFontStrike;->mapper:Lae/sun/font/CharToGlyphMapper;

    .line 171
    move-object/from16 v0, p0

    iget-object v2, v0, Lae/sun/font/FileFontStrike;->mapper:Lae/sun/font/CharToGlyphMapper;

    invoke-virtual {v2}, Lae/sun/font/CharToGlyphMapper;->getNumGlyphs()I

    move-result v13

    .line 181
    .local v13, "numGlyphs":I
    const/4 v2, 0x3

    aget-wide v4, v3, v2

    double-to-float v0, v4

    move/from16 v17, v0

    .line 182
    .local v17, "ptSize":F
    move/from16 v0, v17

    float-to-int v11, v0

    move-object/from16 v0, p0

    iput v11, v0, Lae/sun/font/FileFontStrike;->intPtSize:I

    .line 183
    .local v11, "iSize":I
    invoke-virtual {v9}, Lae/java/awt/geom/AffineTransform;->getType()I

    move-result v2

    and-int/lit8 v2, v2, 0x7c

    if-nez v2, :cond_7

    const/4 v12, 0x1

    .line 185
    .local v12, "isSimpleTx":Z
    :goto_2
    const/16 v2, 0x800

    if-gt v13, v2, :cond_8

    .line 186
    const/16 v2, 0x200

    if-le v13, v2, :cond_4

    .line 187
    if-eqz v12, :cond_8

    int-to-float v2, v11

    cmpl-float v2, v17, v2

    if-nez v2, :cond_8

    const/4 v2, 0x6

    if-lt v11, v2, :cond_8

    const/16 v2, 0x24

    if-gt v11, v2, :cond_8

    :cond_4
    const/4 v2, 0x0

    .line 184
    :goto_3
    move-object/from16 v0, p0

    iput-boolean v2, v0, Lae/sun/font/FileFontStrike;->segmentedCache:Z

    .line 196
    move-object/from16 v0, p0

    iget-wide v4, v0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    const-wide/16 v6, 0x0

    cmp-long v2, v4, v6

    if-nez v2, :cond_9

    .line 200
    new-instance v2, Lae/sun/font/FontStrikeDisposer;

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-direct {v2, v0, v1}, Lae/sun/font/FontStrikeDisposer;-><init>(Lae/sun/font/Font2D;Lae/sun/font/FontStrikeDesc;)V

    move-object/from16 v0, p0

    iput-object v2, v0, Lae/sun/font/FileFontStrike;->disposer:Lae/sun/font/FontStrikeDisposer;

    .line 201
    invoke-direct/range {p0 .. p0}, Lae/sun/font/FileFontStrike;->initGlyphCache()V

    .line 202
    invoke-static {}, Lae/sun/font/NullFontScaler;->getNullScalerContext()J

    move-result-wide v4

    move-object/from16 v0, p0

    iput-wide v4, v0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    .line 203
    invoke-static/range {p1 .. p1}, Lae/sun/font/FontManager;->deRegisterBadFont(Lae/sun/font/Font2D;)V

    .line 289
    :cond_5
    :goto_4
    return-void

    .line 164
    .end local v11    # "iSize":I
    .end local v12    # "isSimpleTx":Z
    .end local v13    # "numGlyphs":I
    .end local v17    # "ptSize":F
    :cond_6
    invoke-virtual/range {p1 .. p1}, Lae/sun/font/FileFont;->getScaler()Lae/sun/font/FontScaler;

    move-result-object v2

    .line 165
    move-object/from16 v0, p1

    instance-of v4, v0, Lae/sun/font/TrueTypeFont;

    .line 166
    move-object/from16 v0, p2

    iget v5, v0, Lae/sun/font/FontStrikeDesc;->aaHint:I

    move-object/from16 v0, p2

    iget v6, v0, Lae/sun/font/FontStrikeDesc;->fmHint:I

    .line 167
    move-object/from16 v0, p0

    iget v7, v0, Lae/sun/font/FileFontStrike;->boldness:F

    move-object/from16 v0, p0

    iget v8, v0, Lae/sun/font/FileFontStrike;->italic:F

    .line 164
    invoke-virtual/range {v2 .. v8}, Lae/sun/font/FontScaler;->createScalerContext([DZIIFF)J

    move-result-wide v4

    move-object/from16 v0, p0

    iput-wide v4, v0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    goto/16 :goto_1

    .line 183
    .restart local v11    # "iSize":I
    .restart local v13    # "numGlyphs":I
    .restart local v17    # "ptSize":F
    :cond_7
    const/4 v12, 0x0

    goto :goto_2

    .line 187
    .restart local v12    # "isSimpleTx":Z
    :cond_8
    const/4 v2, 0x1

    goto :goto_3

    .line 213
    :cond_9
    sget-boolean v2, Lae/sun/font/FontManager;->isWindows:Z

    if-eqz v2, :cond_b

    sget-boolean v2, Lae/sun/font/FileFontStrike;->isXPorLater:Z

    if-eqz v2, :cond_b

    .line 214
    sget-boolean v2, Lae/sun/font/FontManager;->useT2K:Z

    if-nez v2, :cond_b

    .line 215
    invoke-static {}, Lae/java/awt/GraphicsEnvironment;->isHeadless()Z

    move-result v2

    if-nez v2, :cond_b

    .line 216
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lae/sun/font/FileFont;->useJavaRasterizer:Z

    if-nez v2, :cond_b

    .line 217
    move-object/from16 v0, p2

    iget v2, v0, Lae/sun/font/FontStrikeDesc;->aaHint:I

    const/4 v4, 0x4

    if-eq v2, v4, :cond_a

    .line 218
    move-object/from16 v0, p2

    iget v2, v0, Lae/sun/font/FontStrikeDesc;->aaHint:I

    const/4 v4, 0x5

    if-ne v2, v4, :cond_b

    .line 219
    :cond_a
    const/4 v2, 0x1

    aget-wide v4, v3, v2

    const-wide/16 v6, 0x0

    cmpl-double v2, v4, v6

    if-nez v2, :cond_b

    const/4 v2, 0x2

    aget-wide v4, v3, v2

    const-wide/16 v6, 0x0

    cmpl-double v2, v4, v6

    if-nez v2, :cond_b

    .line 220
    const/4 v2, 0x0

    aget-wide v4, v3, v2

    const/4 v2, 0x3

    aget-wide v6, v3, v2

    cmpl-double v2, v4, v6

    if-nez v2, :cond_b

    .line 221
    const/4 v2, 0x0

    aget-wide v4, v3, v2

    const-wide/high16 v6, 0x4008000000000000L    # 3.0

    cmpl-double v2, v4, v6

    if-ltz v2, :cond_b

    const/4 v2, 0x0

    aget-wide v4, v3, v2

    const-wide/high16 v6, 0x4059000000000000L    # 100.0

    cmpg-double v2, v4, v6

    if-gtz v2, :cond_b

    move-object/from16 v2, p1

    .line 222
    check-cast v2, Lae/sun/font/TrueTypeFont;

    move-object/from16 v0, p0

    iget v4, v0, Lae/sun/font/FileFontStrike;->intPtSize:I

    invoke-virtual {v2, v4}, Lae/sun/font/TrueTypeFont;->useEmbeddedBitmapsForSize(I)Z

    move-result v2

    if-nez v2, :cond_b

    .line 223
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lae/sun/font/FileFontStrike;->useNatives:Z

    .line 243
    :cond_b
    sget-boolean v2, Lae/sun/font/FontManager;->logging:Z

    if-eqz v2, :cond_c

    sget-boolean v2, Lae/sun/font/FontManager;->isWindows:Z

    if-eqz v2, :cond_c

    .line 244
    sget-object v4, Lae/sun/font/FontManager;->logger:Ljava/util/logging/Logger;

    .line 245
    new-instance v2, Ljava/lang/StringBuilder;

    const-string v5, "Strike for "

    invoke-direct {v2, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v5, " at size = "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget v5, v0, Lae/sun/font/FileFontStrike;->intPtSize:I

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 246
    const-string v5, " use natives = "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lae/sun/font/FileFontStrike;->useNatives:Z

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 247
    const-string v5, " useJavaRasteriser = "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-boolean v5, v0, Lae/sun/font/FileFont;->useJavaRasterizer:Z

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 248
    const-string v5, " AAHint = "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget v5, v0, Lae/sun/font/FontStrikeDesc;->aaHint:I

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 249
    const-string v5, " Has Embedded bitmaps = "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v2, p1

    .line 250
    check-cast v2, Lae/sun/font/TrueTypeFont;

    .line 251
    move-object/from16 v0, p0

    iget v6, v0, Lae/sun/font/FileFontStrike;->intPtSize:I

    invoke-virtual {v2, v6}, Lae/sun/font/TrueTypeFont;->useEmbeddedBitmapsForSize(I)Z

    move-result v2

    .line 250
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 245
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 244
    invoke-virtual {v4, v2}, Ljava/util/logging/Logger;->info(Ljava/lang/String;)V

    .line 253
    :cond_c
    new-instance v2, Lae/sun/font/FontStrikeDisposer;

    move-object/from16 v0, p0

    iget-wide v4, v0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-direct {v2, v0, v1, v4, v5}, Lae/sun/font/FontStrikeDisposer;-><init>(Lae/sun/font/Font2D;Lae/sun/font/FontStrikeDesc;J)V

    move-object/from16 v0, p0

    iput-object v2, v0, Lae/sun/font/FileFontStrike;->disposer:Lae/sun/font/FontStrikeDisposer;

    .line 261
    const-wide/high16 v14, 0x4048000000000000L    # 48.0

    .line 263
    .local v14, "maxSz":D
    invoke-virtual {v9}, Lae/java/awt/geom/AffineTransform;->getScaleX()D

    move-result-wide v4

    invoke-static {v4, v5}, Ljava/lang/Math;->abs(D)D

    move-result-wide v4

    cmpg-double v2, v4, v14

    if-gtz v2, :cond_d

    .line 264
    invoke-virtual {v9}, Lae/java/awt/geom/AffineTransform;->getScaleY()D

    move-result-wide v4

    invoke-static {v4, v5}, Ljava/lang/Math;->abs(D)D

    move-result-wide v4

    cmpg-double v2, v4, v14

    if-gtz v2, :cond_d

    .line 265
    invoke-virtual {v9}, Lae/java/awt/geom/AffineTransform;->getShearX()D

    move-result-wide v4

    invoke-static {v4, v5}, Ljava/lang/Math;->abs(D)D

    move-result-wide v4

    cmpg-double v2, v4, v14

    if-gtz v2, :cond_d

    .line 266
    invoke-virtual {v9}, Lae/java/awt/geom/AffineTransform;->getShearY()D

    move-result-wide v4

    invoke-static {v4, v5}, Ljava/lang/Math;->abs(D)D

    move-result-wide v4

    cmpg-double v2, v4, v14

    if-gtz v2, :cond_d

    const/4 v2, 0x1

    .line 262
    :goto_5
    move-object/from16 v0, p0

    iput-boolean v2, v0, Lae/sun/font/FileFontStrike;->getImageWithAdvance:Z

    .line 277
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lae/sun/font/FileFontStrike;->getImageWithAdvance:Z

    if-nez v2, :cond_5

    .line 278
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lae/sun/font/FileFontStrike;->segmentedCache:Z

    if-nez v2, :cond_e

    .line 279
    new-array v2, v13, [F

    move-object/from16 v0, p0

    iput-object v2, v0, Lae/sun/font/FileFontStrike;->horizontalAdvances:[F

    .line 281
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_6
    if-ge v10, v13, :cond_5

    .line 282
    move-object/from16 v0, p0

    iget-object v2, v0, Lae/sun/font/FileFontStrike;->horizontalAdvances:[F

    const v4, 0x7f7fffff    # Float.MAX_VALUE

    aput v4, v2, v10

    .line 281
    add-int/lit8 v10, v10, 0x1

    goto :goto_6

    .line 266
    .end local v10    # "i":I
    :cond_d
    const/4 v2, 0x0

    goto :goto_5

    .line 285
    :cond_e
    add-int/lit16 v2, v13, 0x100

    add-int/lit8 v2, v2, -0x1

    div-int/lit16 v0, v2, 0x100

    move/from16 v16, v0

    .line 286
    .local v16, "numSegments":I
    move/from16 v0, v16

    new-array v2, v0, [[F

    move-object/from16 v0, p0

    iput-object v2, v0, Lae/sun/font/FileFontStrike;->segHorizontalAdvances:[[F

    goto/16 :goto_4

    .line 149
    .end local v11    # "iSize":I
    .end local v12    # "isSimpleTx":Z
    .end local v13    # "numGlyphs":I
    .end local v14    # "maxSz":D
    .end local v16    # "numSegments":I
    .end local v17    # "ptSize":F
    :catch_0
    move-exception v2

    goto/16 :goto_0
.end method

.method private native _getGlyphImageFromWindows(Ljava/lang/String;IIIZ)J
.end method

.method private getGlyphAdvance(IZ)F
    .locals 12
    .param p1, "glyphCode"    # I
    .param p2, "getUserAdv"    # Z

    .prologue
    const/16 v11, 0x100

    const v10, 0x7f7fffff    # Float.MAX_VALUE

    .line 564
    const v7, 0xfffe

    if-lt p1, v7, :cond_1

    .line 565
    const/4 v0, 0x0

    .line 622
    :cond_0
    :goto_0
    return v0

    .line 567
    :cond_1
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->horizontalAdvances:[F

    if-eqz v7, :cond_4

    .line 568
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->horizontalAdvances:[F

    aget v0, v7, p1

    .line 569
    .local v0, "advance":F
    cmpl-float v7, v0, v10

    if-nez v7, :cond_0

    .line 583
    .end local v0    # "advance":F
    :cond_2
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->invertDevTx:Lae/java/awt/geom/AffineTransform;

    if-nez v7, :cond_3

    if-nez p2, :cond_5

    .line 587
    :cond_3
    invoke-direct {p0, p1, p2}, Lae/sun/font/FileFontStrike;->getGlyphMetrics(IZ)Lae/java/awt/geom/Point2D$Float;

    move-result-object v7

    iget v0, v7, Lae/java/awt/geom/Point2D$Float;->x:F

    .line 609
    .restart local v0    # "advance":F
    :goto_1
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->horizontalAdvances:[F

    if-eqz v7, :cond_8

    .line 610
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->horizontalAdvances:[F

    aput v0, v7, p1

    goto :goto_0

    .line 572
    .end local v0    # "advance":F
    :cond_4
    iget-boolean v7, p0, Lae/sun/font/FileFontStrike;->segmentedCache:Z

    if-eqz v7, :cond_2

    iget-object v7, p0, Lae/sun/font/FileFontStrike;->segHorizontalAdvances:[[F

    if-eqz v7, :cond_2

    .line 573
    shr-int/lit8 v4, p1, 0x8

    .line 574
    .local v4, "segIndex":I
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->segHorizontalAdvances:[[F

    aget-object v5, v7, v4

    .line 575
    .local v5, "subArray":[F
    if-eqz v5, :cond_2

    .line 576
    rem-int/lit16 v7, p1, 0x100

    aget v0, v5, v7

    .line 577
    .restart local v0    # "advance":F
    cmpl-float v7, v0, v10

    if-eqz v7, :cond_2

    goto :goto_0

    .line 590
    .end local v0    # "advance":F
    .end local v4    # "segIndex":I
    .end local v5    # "subArray":[F
    :cond_5
    iget-boolean v7, p0, Lae/sun/font/FileFontStrike;->getImageWithAdvance:Z

    if-eqz v7, :cond_6

    .line 596
    invoke-virtual {p0, p1}, Lae/sun/font/FileFontStrike;->getGlyphImagePtr(I)J

    move-result-wide v2

    .line 600
    .local v2, "glyphPtr":J
    :goto_2
    const-wide/16 v8, 0x0

    cmp-long v7, v2, v8

    if-eqz v7, :cond_7

    .line 601
    sget-object v7, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    .line 602
    sget v8, Lae/sun/font/StrikeCache;->xAdvanceOffset:I

    int-to-long v8, v8

    add-long/2addr v8, v2

    .line 601
    invoke-virtual {v7, v8, v9}, Lsun/misc/Unsafe;->getFloat(J)F

    move-result v0

    .line 604
    .restart local v0    # "advance":F
    goto :goto_1

    .line 598
    .end local v0    # "advance":F
    .end local v2    # "glyphPtr":J
    :cond_6
    invoke-virtual {p0, p1}, Lae/sun/font/FileFontStrike;->getCachedGlyphPtr(I)J

    move-result-wide v2

    .restart local v2    # "glyphPtr":J
    goto :goto_2

    .line 605
    :cond_7
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v8, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    invoke-virtual {v7, v8, v9, p1}, Lae/sun/font/FileFont;->getGlyphAdvance(JI)F

    move-result v0

    .restart local v0    # "advance":F
    goto :goto_1

    .line 611
    .end local v2    # "glyphPtr":J
    :cond_8
    iget-boolean v7, p0, Lae/sun/font/FileFontStrike;->segmentedCache:Z

    if-eqz v7, :cond_0

    iget-object v7, p0, Lae/sun/font/FileFontStrike;->segHorizontalAdvances:[[F

    if-eqz v7, :cond_0

    .line 612
    shr-int/lit8 v4, p1, 0x8

    .line 613
    .restart local v4    # "segIndex":I
    rem-int/lit16 v6, p1, 0x100

    .line 614
    .local v6, "subIndex":I
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->segHorizontalAdvances:[[F

    aget-object v7, v7, v4

    if-nez v7, :cond_9

    .line 615
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->segHorizontalAdvances:[[F

    new-array v8, v11, [F

    aput-object v8, v7, v4

    .line 616
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_3
    if-lt v1, v11, :cond_a

    .line 620
    .end local v1    # "i":I
    :cond_9
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->segHorizontalAdvances:[[F

    aget-object v7, v7, v4

    aput v0, v7, v6

    goto/16 :goto_0

    .line 617
    .restart local v1    # "i":I
    :cond_a
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->segHorizontalAdvances:[[F

    aget-object v7, v7, v4

    aput v10, v7, v1

    .line 616
    add-int/lit8 v1, v1, 0x1

    goto :goto_3
.end method

.method private getGlyphImageMinX(JI)I
    .locals 13
    .param p1, "ptr"    # J
    .param p3, "origMinX"    # I

    .prologue
    .line 677
    sget-object v7, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    sget v8, Lae/sun/font/StrikeCache;->widthOffset:I

    int-to-long v8, v8

    add-long/2addr v8, p1

    invoke-virtual {v7, v8, v9}, Lsun/misc/Unsafe;->getChar(J)C

    move-result v4

    .line 678
    .local v4, "width":I
    sget-object v7, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    sget v8, Lae/sun/font/StrikeCache;->heightOffset:I

    int-to-long v8, v8

    add-long/2addr v8, p1

    invoke-virtual {v7, v8, v9}, Lsun/misc/Unsafe;->getChar(J)C

    move-result v0

    .line 680
    .local v0, "height":I
    sget-object v7, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    sget v8, Lae/sun/font/StrikeCache;->rowBytesOffset:I

    int-to-long v8, v8

    add-long/2addr v8, p1

    invoke-virtual {v7, v8, v9}, Lsun/misc/Unsafe;->getChar(J)C

    move-result v1

    .line 682
    .local v1, "rowBytes":I
    if-ne v1, v4, :cond_1

    .line 705
    .end local p3    # "origMinX":I
    :cond_0
    :goto_0
    return p3

    .line 687
    .restart local p3    # "origMinX":I
    :cond_1
    sget v7, Lae/sun/font/StrikeCache;->nativeAddressSize:I

    const/4 v8, 0x4

    if-ne v7, v8, :cond_2

    .line 689
    sget-object v7, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    sget v8, Lae/sun/font/StrikeCache;->pixelDataOffset:I

    int-to-long v8, v8

    add-long/2addr v8, p1

    invoke-virtual {v7, v8, v9}, Lsun/misc/Unsafe;->getInt(J)I

    move-result v7

    .line 688
    and-int/lit8 v7, v7, -0x1

    int-to-long v2, v7

    .line 694
    .local v2, "pixelData":J
    :goto_1
    const-wide/16 v8, 0x0

    cmp-long v7, v2, v8

    if-eqz v7, :cond_0

    .line 698
    const/4 v6, 0x0

    .local v6, "y":I
    :goto_2
    if-lt v6, v0, :cond_3

    .line 705
    add-int/lit8 p3, p3, 0x1

    goto :goto_0

    .line 692
    .end local v2    # "pixelData":J
    .end local v6    # "y":I
    :cond_2
    sget-object v7, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    sget v8, Lae/sun/font/StrikeCache;->pixelDataOffset:I

    int-to-long v8, v8

    add-long/2addr v8, p1

    invoke-virtual {v7, v8, v9}, Lsun/misc/Unsafe;->getLong(J)J

    move-result-wide v2

    .line 691
    .restart local v2    # "pixelData":J
    goto :goto_1

    .line 699
    .restart local v6    # "y":I
    :cond_3
    const/4 v5, 0x0

    .local v5, "x":I
    :goto_3
    const/4 v7, 0x3

    if-lt v5, v7, :cond_4

    .line 698
    add-int/lit8 v6, v6, 0x1

    goto :goto_2

    .line 700
    :cond_4
    sget-object v7, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    mul-int v8, v6, v1

    int-to-long v8, v8

    add-long/2addr v8, v2

    int-to-long v10, v5

    add-long/2addr v8, v10

    invoke-virtual {v7, v8, v9}, Lsun/misc/Unsafe;->getByte(J)B

    move-result v7

    if-nez v7, :cond_0

    .line 699
    add-int/lit8 v5, v5, 0x1

    goto :goto_3
.end method

.method private getGlyphMetrics(IZ)Lae/java/awt/geom/Point2D$Float;
    .locals 10
    .param p1, "glyphCode"    # I
    .param p2, "getUserAdv"    # Z

    .prologue
    .line 727
    new-instance v4, Lae/java/awt/geom/Point2D$Float;

    invoke-direct {v4}, Lae/java/awt/geom/Point2D$Float;-><init>()V

    .line 730
    .local v4, "metrics":Lae/java/awt/geom/Point2D$Float;
    const v7, 0xfffe

    if-lt p1, v7, :cond_0

    move-object v5, v4

    .line 801
    .end local v4    # "metrics":Lae/java/awt/geom/Point2D$Float;
    .local v5, "metrics":Ljava/lang/Object;
    :goto_0
    return-object v5

    .line 734
    .end local v5    # "metrics":Ljava/lang/Object;
    .restart local v4    # "metrics":Lae/java/awt/geom/Point2D$Float;
    :cond_0
    iget-boolean v7, p0, Lae/sun/font/FileFontStrike;->getImageWithAdvance:Z

    if-eqz v7, :cond_2

    if-eqz p2, :cond_2

    .line 740
    invoke-virtual {p0, p1}, Lae/sun/font/FileFontStrike;->getGlyphImagePtr(I)J

    move-result-wide v2

    .line 744
    .local v2, "glyphPtr":J
    :goto_1
    const-wide/16 v8, 0x0

    cmp-long v7, v2, v8

    if-eqz v7, :cond_3

    .line 745
    new-instance v4, Lae/java/awt/geom/Point2D$Float;

    .end local v4    # "metrics":Lae/java/awt/geom/Point2D$Float;
    invoke-direct {v4}, Lae/java/awt/geom/Point2D$Float;-><init>()V

    .line 746
    .restart local v4    # "metrics":Lae/java/awt/geom/Point2D$Float;
    sget-object v7, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    .line 747
    sget v8, Lae/sun/font/StrikeCache;->xAdvanceOffset:I

    int-to-long v8, v8

    add-long/2addr v8, v2

    .line 746
    invoke-virtual {v7, v8, v9}, Lsun/misc/Unsafe;->getFloat(J)F

    move-result v7

    iput v7, v4, Lae/java/awt/geom/Point2D$Float;->x:F

    .line 748
    sget-object v7, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    .line 749
    sget v8, Lae/sun/font/StrikeCache;->yAdvanceOffset:I

    int-to-long v8, v8

    add-long/2addr v8, v2

    .line 748
    invoke-virtual {v7, v8, v9}, Lsun/misc/Unsafe;->getFloat(J)F

    move-result v7

    iput v7, v4, Lae/java/awt/geom/Point2D$Float;->y:F

    .line 753
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->invertDevTx:Lae/java/awt/geom/AffineTransform;

    if-eqz v7, :cond_1

    if-eqz p2, :cond_1

    .line 754
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->invertDevTx:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v7, v4, v4}, Lae/java/awt/geom/AffineTransform;->deltaTransform(Lae/java/awt/geom/Point2D;Lae/java/awt/geom/Point2D;)Lae/java/awt/geom/Point2D;

    :cond_1
    :goto_2
    move-object v5, v4

    .line 801
    .restart local v5    # "metrics":Ljava/lang/Object;
    goto :goto_0

    .line 742
    .end local v2    # "glyphPtr":J
    .end local v5    # "metrics":Ljava/lang/Object;
    :cond_2
    invoke-virtual {p0, p1}, Lae/sun/font/FileFontStrike;->getCachedGlyphPtr(I)J

    move-result-wide v2

    .restart local v2    # "glyphPtr":J
    goto :goto_1

    .line 764
    :cond_3
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    .line 765
    .local v1, "key":Ljava/lang/Integer;
    const/4 v6, 0x0

    .line 766
    .local v6, "value":Lae/java/awt/geom/Point2D$Float;
    const/4 v0, 0x0

    .line 767
    .local v0, "glyphMetricsMap":Ljava/util/concurrent/ConcurrentHashMap;, "Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/Integer;Lae/java/awt/geom/Point2D$Float;>;"
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->glyphMetricsMapRef:Ljava/lang/ref/SoftReference;

    if-eqz v7, :cond_4

    .line 768
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->glyphMetricsMapRef:Ljava/lang/ref/SoftReference;

    invoke-virtual {v7}, Ljava/lang/ref/SoftReference;->get()Ljava/lang/Object;

    move-result-object v0

    .end local v0    # "glyphMetricsMap":Ljava/util/concurrent/ConcurrentHashMap;, "Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/Integer;Lae/java/awt/geom/Point2D$Float;>;"
    check-cast v0, Ljava/util/concurrent/ConcurrentHashMap;

    .line 770
    .restart local v0    # "glyphMetricsMap":Ljava/util/concurrent/ConcurrentHashMap;, "Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/Integer;Lae/java/awt/geom/Point2D$Float;>;"
    :cond_4
    if-eqz v0, :cond_5

    .line 771
    invoke-virtual {v0, v1}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    .end local v6    # "value":Lae/java/awt/geom/Point2D$Float;
    check-cast v6, Lae/java/awt/geom/Point2D$Float;

    .line 772
    .restart local v6    # "value":Lae/java/awt/geom/Point2D$Float;
    if-eqz v6, :cond_5

    .line 773
    iget v7, v6, Lae/java/awt/geom/Point2D$Float;->x:F

    iput v7, v4, Lae/java/awt/geom/Point2D$Float;->x:F

    .line 774
    iget v7, v6, Lae/java/awt/geom/Point2D$Float;->y:F

    iput v7, v4, Lae/java/awt/geom/Point2D$Float;->y:F

    move-object v5, v4

    .line 776
    .restart local v5    # "metrics":Ljava/lang/Object;
    goto :goto_0

    .line 779
    .end local v5    # "metrics":Ljava/lang/Object;
    :cond_5
    if-nez v6, :cond_1

    .line 780
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v8, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    invoke-virtual {v7, v8, v9, p1, v4}, Lae/sun/font/FileFont;->getGlyphMetrics(JILae/java/awt/geom/Point2D$Float;)V

    .line 784
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->invertDevTx:Lae/java/awt/geom/AffineTransform;

    if-eqz v7, :cond_6

    if-eqz p2, :cond_6

    .line 785
    iget-object v7, p0, Lae/sun/font/FileFontStrike;->invertDevTx:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v7, v4, v4}, Lae/java/awt/geom/AffineTransform;->deltaTransform(Lae/java/awt/geom/Point2D;Lae/java/awt/geom/Point2D;)Lae/java/awt/geom/Point2D;

    .line 787
    :cond_6
    new-instance v6, Lae/java/awt/geom/Point2D$Float;

    .end local v6    # "value":Lae/java/awt/geom/Point2D$Float;
    iget v7, v4, Lae/java/awt/geom/Point2D$Float;->x:F

    iget v8, v4, Lae/java/awt/geom/Point2D$Float;->y:F

    invoke-direct {v6, v7, v8}, Lae/java/awt/geom/Point2D$Float;-><init>(FF)V

    .line 791
    .restart local v6    # "value":Lae/java/awt/geom/Point2D$Float;
    if-nez v0, :cond_7

    .line 793
    new-instance v0, Ljava/util/concurrent/ConcurrentHashMap;

    .end local v0    # "glyphMetricsMap":Ljava/util/concurrent/ConcurrentHashMap;, "Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/Integer;Lae/java/awt/geom/Point2D$Float;>;"
    invoke-direct {v0}, Ljava/util/concurrent/ConcurrentHashMap;-><init>()V

    .line 795
    .restart local v0    # "glyphMetricsMap":Ljava/util/concurrent/ConcurrentHashMap;, "Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/Integer;Lae/java/awt/geom/Point2D$Float;>;"
    new-instance v7, Ljava/lang/ref/SoftReference;

    invoke-direct {v7, v0}, Ljava/lang/ref/SoftReference;-><init>(Ljava/lang/Object;)V

    .line 794
    iput-object v7, p0, Lae/sun/font/FileFontStrike;->glyphMetricsMapRef:Ljava/lang/ref/SoftReference;

    .line 798
    :cond_7
    invoke-virtual {v0, v1, v6}, Ljava/util/concurrent/ConcurrentHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_2
.end method

.method private initGlyphCache()V
    .locals 4

    .prologue
    .line 526
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->mapper:Lae/sun/font/CharToGlyphMapper;

    invoke-virtual {v2}, Lae/sun/font/CharToGlyphMapper;->getNumGlyphs()I

    move-result v0

    .line 528
    .local v0, "numGlyphs":I
    iget-boolean v2, p0, Lae/sun/font/FileFontStrike;->segmentedCache:Z

    if-eqz v2, :cond_1

    .line 529
    add-int/lit16 v2, v0, 0x100

    add-int/lit8 v2, v2, -0x1

    div-int/lit16 v1, v2, 0x100

    .line 530
    .local v1, "numSegments":I
    sget-boolean v2, Lae/sun/font/FontManager;->longAddresses:Z

    if-eqz v2, :cond_0

    .line 531
    const/4 v2, 0x4

    iput v2, p0, Lae/sun/font/FileFontStrike;->glyphCacheFormat:I

    .line 532
    new-array v2, v1, [[J

    iput-object v2, p0, Lae/sun/font/FileFontStrike;->segLongGlyphImages:[[J

    .line 533
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->disposer:Lae/sun/font/FontStrikeDisposer;

    iget-object v3, p0, Lae/sun/font/FileFontStrike;->segLongGlyphImages:[[J

    iput-object v3, v2, Lae/sun/font/FontStrikeDisposer;->segLongGlyphImages:[[J

    .line 550
    .end local v1    # "numSegments":I
    :goto_0
    return-void

    .line 535
    .restart local v1    # "numSegments":I
    :cond_0
    const/4 v2, 0x3

    iput v2, p0, Lae/sun/font/FileFontStrike;->glyphCacheFormat:I

    .line 536
    new-array v2, v1, [[I

    iput-object v2, p0, Lae/sun/font/FileFontStrike;->segIntGlyphImages:[[I

    .line 537
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->disposer:Lae/sun/font/FontStrikeDisposer;

    iget-object v3, p0, Lae/sun/font/FileFontStrike;->segIntGlyphImages:[[I

    iput-object v3, v2, Lae/sun/font/FontStrikeDisposer;->segIntGlyphImages:[[I

    goto :goto_0

    .line 540
    .end local v1    # "numSegments":I
    :cond_1
    sget-boolean v2, Lae/sun/font/FontManager;->longAddresses:Z

    if-eqz v2, :cond_2

    .line 541
    const/4 v2, 0x2

    iput v2, p0, Lae/sun/font/FileFontStrike;->glyphCacheFormat:I

    .line 542
    new-array v2, v0, [J

    iput-object v2, p0, Lae/sun/font/FileFontStrike;->longGlyphImages:[J

    .line 543
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->disposer:Lae/sun/font/FontStrikeDisposer;

    iget-object v3, p0, Lae/sun/font/FileFontStrike;->longGlyphImages:[J

    iput-object v3, v2, Lae/sun/font/FontStrikeDisposer;->longGlyphImages:[J

    goto :goto_0

    .line 545
    :cond_2
    const/4 v2, 0x1

    iput v2, p0, Lae/sun/font/FileFontStrike;->glyphCacheFormat:I

    .line 546
    new-array v2, v0, [I

    iput-object v2, p0, Lae/sun/font/FileFontStrike;->intGlyphImages:[I

    .line 547
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->disposer:Lae/sun/font/FontStrikeDisposer;

    iget-object v3, p0, Lae/sun/font/FileFontStrike;->intGlyphImages:[I

    iput-object v3, v2, Lae/sun/font/FontStrikeDisposer;->intGlyphImages:[I

    goto :goto_0
.end method

.method private static native initNative()Z
.end method

.method private declared-synchronized setCachedGlyphPtr(IJ)J
    .locals 8
    .param p1, "glyphCode"    # I
    .param p2, "glyphPtr"    # J

    .prologue
    const-wide v6, 0xffffffffL

    const-wide/16 v4, 0x0

    .line 467
    monitor-enter p0

    :try_start_0
    iget v2, p0, Lae/sun/font/FileFontStrike;->glyphCacheFormat:I

    packed-switch v2, :pswitch_data_0

    .line 519
    invoke-direct {p0}, Lae/sun/font/FileFontStrike;->initGlyphCache()V

    .line 520
    invoke-direct {p0, p1, p2, p3}, Lae/sun/font/FileFontStrike;->setCachedGlyphPtr(IJ)J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide p2

    .end local p2    # "glyphPtr":J
    :goto_0
    monitor-exit p0

    return-wide p2

    .line 469
    .restart local p2    # "glyphPtr":J
    :pswitch_0
    :try_start_1
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->intGlyphImages:[I

    aget v2, v2, p1

    if-nez v2, :cond_0

    .line 470
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->intGlyphImages:[I

    long-to-int v3, p2

    aput v3, v2, p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 467
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2

    .line 473
    :cond_0
    long-to-int v2, p2

    :try_start_2
    invoke-static {v2}, Lae/sun/font/StrikeCache;->freeIntPointer(I)V

    .line 474
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->intGlyphImages:[I

    aget v2, v2, p1

    int-to-long v2, v2

    and-long p2, v2, v6

    goto :goto_0

    .line 478
    :pswitch_1
    shr-int/lit8 v0, p1, 0x8

    .line 479
    .local v0, "segIndex":I
    rem-int/lit16 v1, p1, 0x100

    .line 480
    .local v1, "subIndex":I
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segIntGlyphImages:[[I

    aget-object v2, v2, v0

    if-nez v2, :cond_1

    .line 481
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segIntGlyphImages:[[I

    const/16 v3, 0x100

    new-array v3, v3, [I

    aput-object v3, v2, v0

    .line 483
    :cond_1
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segIntGlyphImages:[[I

    aget-object v2, v2, v0

    aget v2, v2, v1

    if-nez v2, :cond_2

    .line 484
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segIntGlyphImages:[[I

    aget-object v2, v2, v0

    long-to-int v3, p2

    aput v3, v2, v1

    goto :goto_0

    .line 487
    :cond_2
    long-to-int v2, p2

    invoke-static {v2}, Lae/sun/font/StrikeCache;->freeIntPointer(I)V

    .line 488
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segIntGlyphImages:[[I

    aget-object v2, v2, v0

    aget v2, v2, v1

    int-to-long v2, v2

    and-long p2, v2, v6

    goto :goto_0

    .line 492
    .end local v0    # "segIndex":I
    .end local v1    # "subIndex":I
    :pswitch_2
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->longGlyphImages:[J

    aget-wide v2, v2, p1

    cmp-long v2, v2, v4

    if-nez v2, :cond_3

    .line 493
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->longGlyphImages:[J

    aput-wide p2, v2, p1

    goto :goto_0

    .line 496
    :cond_3
    invoke-static {p2, p3}, Lae/sun/font/StrikeCache;->freeLongPointer(J)V

    .line 497
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->longGlyphImages:[J

    aget-wide p2, v2, p1

    goto :goto_0

    .line 501
    :pswitch_3
    shr-int/lit8 v0, p1, 0x8

    .line 502
    .restart local v0    # "segIndex":I
    rem-int/lit16 v1, p1, 0x100

    .line 503
    .restart local v1    # "subIndex":I
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segLongGlyphImages:[[J

    aget-object v2, v2, v0

    if-nez v2, :cond_4

    .line 504
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segLongGlyphImages:[[J

    const/16 v3, 0x100

    new-array v3, v3, [J

    aput-object v3, v2, v0

    .line 506
    :cond_4
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segLongGlyphImages:[[J

    aget-object v2, v2, v0

    aget-wide v2, v2, v1

    cmp-long v2, v2, v4

    if-nez v2, :cond_5

    .line 507
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segLongGlyphImages:[[J

    aget-object v2, v2, v0

    aput-wide p2, v2, v1

    goto/16 :goto_0

    .line 510
    :cond_5
    invoke-static {p2, p3}, Lae/sun/font/StrikeCache;->freeLongPointer(J)V

    .line 511
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segLongGlyphImages:[[J

    aget-object v2, v2, v0

    aget-wide p2, v2, v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto/16 :goto_0

    .line 467
    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_2
        :pswitch_1
        :pswitch_3
    .end packed-switch
.end method


# virtual methods
.method protected adjustPoint(Lae/java/awt/geom/Point2D$Float;)V
    .locals 1
    .param p1, "pt"    # Lae/java/awt/geom/Point2D$Float;

    .prologue
    .line 855
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->invertDevTx:Lae/java/awt/geom/AffineTransform;

    if-eqz v0, :cond_0

    .line 856
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->invertDevTx:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v0, p1, p1}, Lae/java/awt/geom/AffineTransform;->deltaTransform(Lae/java/awt/geom/Point2D;Lae/java/awt/geom/Point2D;)Lae/java/awt/geom/Point2D;

    .line 858
    :cond_0
    return-void
.end method

.method getCachedGlyphPtr(I)J
    .locals 8
    .param p1, "glyphCode"    # I

    .prologue
    const-wide v6, 0xffffffffL

    const-wide/16 v2, 0x0

    .line 440
    iget v4, p0, Lae/sun/font/FileFontStrike;->glyphCacheFormat:I

    packed-switch v4, :pswitch_data_0

    .line 463
    :cond_0
    :goto_0
    return-wide v2

    .line 442
    :pswitch_0
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->intGlyphImages:[I

    aget v2, v2, p1

    int-to-long v2, v2

    and-long/2addr v2, v6

    goto :goto_0

    .line 444
    :pswitch_1
    shr-int/lit8 v0, p1, 0x8

    .line 445
    .local v0, "segIndex":I
    iget-object v4, p0, Lae/sun/font/FileFontStrike;->segIntGlyphImages:[[I

    aget-object v4, v4, v0

    if-eqz v4, :cond_0

    .line 446
    rem-int/lit16 v1, p1, 0x100

    .line 447
    .local v1, "subIndex":I
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segIntGlyphImages:[[I

    aget-object v2, v2, v0

    aget v2, v2, v1

    int-to-long v2, v2

    and-long/2addr v2, v6

    goto :goto_0

    .line 452
    .end local v0    # "segIndex":I
    .end local v1    # "subIndex":I
    :pswitch_2
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->longGlyphImages:[J

    aget-wide v2, v2, p1

    goto :goto_0

    .line 454
    :pswitch_3
    shr-int/lit8 v0, p1, 0x8

    .line 455
    .restart local v0    # "segIndex":I
    iget-object v4, p0, Lae/sun/font/FileFontStrike;->segLongGlyphImages:[[J

    aget-object v4, v4, v0

    if-eqz v4, :cond_0

    .line 456
    rem-int/lit16 v1, p1, 0x100

    .line 457
    .restart local v1    # "subIndex":I
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->segLongGlyphImages:[[J

    aget-object v2, v2, v0

    aget-wide v2, v2, v1

    goto :goto_0

    .line 440
    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_2
        :pswitch_1
        :pswitch_3
    .end packed-switch
.end method

.method getCharMetrics(C)Lae/java/awt/geom/Point2D$Float;
    .locals 1
    .param p1, "ch"    # C

    .prologue
    .line 805
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->mapper:Lae/sun/font/CharToGlyphMapper;

    invoke-virtual {v0, p1}, Lae/sun/font/CharToGlyphMapper;->charToGlyph(C)I

    move-result v0

    invoke-virtual {p0, v0}, Lae/sun/font/FileFontStrike;->getGlyphMetrics(I)Lae/java/awt/geom/Point2D$Float;

    move-result-object v0

    return-object v0
.end method

.method getCodePointAdvance(I)F
    .locals 1
    .param p1, "cp"    # I

    .prologue
    .line 626
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->mapper:Lae/sun/font/CharToGlyphMapper;

    invoke-virtual {v0, p1}, Lae/sun/font/CharToGlyphMapper;->charToGlyph(I)I

    move-result v0

    invoke-virtual {p0, v0}, Lae/sun/font/FileFontStrike;->getGlyphAdvance(I)F

    move-result v0

    return v0
.end method

.method getFontMetrics()Lae/sun/font/StrikeMetrics;
    .locals 4

    .prologue
    .line 712
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->strikeMetrics:Lae/sun/font/StrikeMetrics;

    if-nez v0, :cond_0

    .line 714
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v2, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    invoke-virtual {v0, v2, v3}, Lae/sun/font/FileFont;->getFontMetrics(J)Lae/sun/font/StrikeMetrics;

    move-result-object v0

    .line 713
    iput-object v0, p0, Lae/sun/font/FileFontStrike;->strikeMetrics:Lae/sun/font/StrikeMetrics;

    .line 715
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->invertDevTx:Lae/java/awt/geom/AffineTransform;

    if-eqz v0, :cond_0

    .line 716
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->strikeMetrics:Lae/sun/font/StrikeMetrics;

    iget-object v1, p0, Lae/sun/font/FileFontStrike;->invertDevTx:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v0, v1}, Lae/sun/font/StrikeMetrics;->convertToUserSpace(Lae/java/awt/geom/AffineTransform;)V

    .line 719
    :cond_0
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->strikeMetrics:Lae/sun/font/StrikeMetrics;

    return-object v0
.end method

.method getGlyphAdvance(I)F
    .locals 1
    .param p1, "glyphCode"    # I

    .prologue
    .line 553
    const/4 v0, 0x1

    invoke-direct {p0, p1, v0}, Lae/sun/font/FileFontStrike;->getGlyphAdvance(IZ)F

    move-result v0

    return v0
.end method

.method getGlyphImageBounds(ILae/java/awt/geom/Point2D$Float;Lae/java/awt/Rectangle;)V
    .locals 9
    .param p1, "glyphCode"    # I
    .param p2, "pt"    # Lae/java/awt/geom/Point2D$Float;
    .param p3, "result"    # Lae/java/awt/Rectangle;

    .prologue
    const v8, 0xffff

    .line 635
    invoke-virtual {p0, p1}, Lae/sun/font/FileFontStrike;->getGlyphImagePtr(I)J

    move-result-wide v2

    .line 641
    .local v2, "ptr":J
    const-wide/16 v6, 0x0

    cmp-long v5, v2, v6

    if-nez v5, :cond_1

    .line 642
    iget v5, p2, Lae/java/awt/geom/Point2D$Float;->x:F

    float-to-double v6, v5

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v6

    double-to-int v5, v6

    iput v5, p3, Lae/java/awt/Rectangle;->x:I

    .line 643
    iget v5, p2, Lae/java/awt/geom/Point2D$Float;->y:F

    float-to-double v6, v5

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v6

    double-to-int v5, v6

    iput v5, p3, Lae/java/awt/Rectangle;->y:I

    .line 644
    const/4 v5, 0x0

    iput v5, p3, Lae/java/awt/Rectangle;->height:I

    iput v5, p3, Lae/java/awt/Rectangle;->width:I

    .line 673
    :cond_0
    :goto_0
    return-void

    .line 648
    :cond_1
    sget-object v5, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    sget v6, Lae/sun/font/StrikeCache;->topLeftXOffset:I

    int-to-long v6, v6

    add-long/2addr v6, v2

    invoke-virtual {v5, v6, v7}, Lsun/misc/Unsafe;->getFloat(J)F

    move-result v1

    .line 649
    .local v1, "topLeftX":F
    sget-object v5, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    sget v6, Lae/sun/font/StrikeCache;->topLeftYOffset:I

    int-to-long v6, v6

    add-long/2addr v6, v2

    invoke-virtual {v5, v6, v7}, Lsun/misc/Unsafe;->getFloat(J)F

    move-result v4

    .line 651
    .local v4, "topLeftY":F
    iget v5, p2, Lae/java/awt/geom/Point2D$Float;->x:F

    add-float/2addr v5, v1

    float-to-double v6, v5

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v6

    double-to-int v5, v6

    iput v5, p3, Lae/java/awt/Rectangle;->x:I

    .line 652
    iget v5, p2, Lae/java/awt/geom/Point2D$Float;->y:F

    add-float/2addr v5, v4

    float-to-double v6, v5

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v6

    double-to-int v5, v6

    iput v5, p3, Lae/java/awt/Rectangle;->y:I

    .line 654
    sget-object v5, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    sget v6, Lae/sun/font/StrikeCache;->widthOffset:I

    int-to-long v6, v6

    add-long/2addr v6, v2

    invoke-virtual {v5, v6, v7}, Lsun/misc/Unsafe;->getShort(J)S

    move-result v5

    and-int/2addr v5, v8

    .line 653
    iput v5, p3, Lae/java/awt/Rectangle;->width:I

    .line 656
    sget-object v5, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    sget v6, Lae/sun/font/StrikeCache;->heightOffset:I

    int-to-long v6, v6

    add-long/2addr v6, v2

    invoke-virtual {v5, v6, v7}, Lsun/misc/Unsafe;->getShort(J)S

    move-result v5

    and-int/2addr v5, v8

    .line 655
    iput v5, p3, Lae/java/awt/Rectangle;->height:I

    .line 664
    iget-object v5, p0, Lae/sun/font/FileFontStrike;->desc:Lae/sun/font/FontStrikeDesc;

    iget v5, v5, Lae/sun/font/FontStrikeDesc;->aaHint:I

    const/4 v6, 0x4

    if-eq v5, v6, :cond_2

    .line 665
    iget-object v5, p0, Lae/sun/font/FileFontStrike;->desc:Lae/sun/font/FontStrikeDesc;

    iget v5, v5, Lae/sun/font/FontStrikeDesc;->aaHint:I

    const/4 v6, 0x5

    if-ne v5, v6, :cond_0

    .line 666
    :cond_2
    const/high16 v5, -0x40000000    # -2.0f

    cmpg-float v5, v1, v5

    if-gtz v5, :cond_0

    .line 667
    iget v5, p3, Lae/java/awt/Rectangle;->x:I

    invoke-direct {p0, v2, v3, v5}, Lae/sun/font/FileFontStrike;->getGlyphImageMinX(JI)I

    move-result v0

    .line 668
    .local v0, "minx":I
    iget v5, p3, Lae/java/awt/Rectangle;->x:I

    if-le v0, v5, :cond_0

    .line 669
    iget v5, p3, Lae/java/awt/Rectangle;->x:I

    add-int/lit8 v5, v5, 0x1

    iput v5, p3, Lae/java/awt/Rectangle;->x:I

    .line 670
    iget v5, p3, Lae/java/awt/Rectangle;->width:I

    add-int/lit8 v5, v5, -0x1

    iput v5, p3, Lae/java/awt/Rectangle;->width:I

    goto :goto_0
.end method

.method getGlyphImageFromNative(I)J
    .locals 2
    .param p1, "glyphCode"    # I

    .prologue
    .line 300
    sget-boolean v0, Lae/sun/font/FontManager;->isWindows:Z

    if-eqz v0, :cond_0

    .line 301
    invoke-virtual {p0, p1}, Lae/sun/font/FileFontStrike;->getGlyphImageFromWindows(I)J

    move-result-wide v0

    .line 303
    :goto_0
    return-wide v0

    :cond_0
    invoke-virtual {p0, p1}, Lae/sun/font/FileFontStrike;->getGlyphImageFromX11(I)J

    move-result-wide v0

    goto :goto_0
.end method

.method getGlyphImageFromWindows(I)J
    .locals 10
    .param p1, "glyphCode"    # I

    .prologue
    const/4 v7, 0x0

    .line 317
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    const/4 v4, 0x0

    invoke-virtual {v0, v4}, Lae/sun/font/FileFont;->getFamilyName(Ljava/util/Locale;)Ljava/lang/String;

    move-result-object v1

    .line 318
    .local v1, "family":Ljava/lang/String;
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->desc:Lae/sun/font/FontStrikeDesc;

    iget v0, v0, Lae/sun/font/FontStrikeDesc;->style:I

    and-int/lit8 v0, v0, 0x1

    iget-object v4, p0, Lae/sun/font/FileFontStrike;->desc:Lae/sun/font/FontStrikeDesc;

    iget v4, v4, Lae/sun/font/FontStrikeDesc;->style:I

    and-int/lit8 v4, v4, 0x2

    or-int/2addr v0, v4

    .line 319
    iget-object v4, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    invoke-virtual {v4}, Lae/sun/font/FileFont;->getStyle()I

    move-result v4

    .line 318
    or-int v2, v0, v4

    .line 320
    .local v2, "style":I
    iget v3, p0, Lae/sun/font/FileFontStrike;->intPtSize:I

    .line 323
    .local v3, "size":I
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->desc:Lae/sun/font/FontStrikeDesc;

    iget v0, v0, Lae/sun/font/FontStrikeDesc;->fmHint:I

    const/4 v4, 0x2

    if-ne v0, v4, :cond_0

    const/4 v5, 0x1

    :goto_0
    move-object v0, p0

    move v4, p1

    .line 321
    invoke-direct/range {v0 .. v5}, Lae/sun/font/FileFontStrike;->_getGlyphImageFromWindows(Ljava/lang/String;IIIZ)J

    move-result-wide v8

    .line 324
    .local v8, "ptr":J
    const-wide/16 v4, 0x0

    cmp-long v0, v8, v4

    if-eqz v0, :cond_1

    .line 332
    invoke-direct {p0, p1, v7}, Lae/sun/font/FileFontStrike;->getGlyphAdvance(IZ)F

    move-result v6

    .line 333
    .local v6, "advance":F
    sget-object v0, Lae/sun/font/StrikeCache;->unsafe:Lsun/misc/Unsafe;

    sget v4, Lae/sun/font/StrikeCache;->xAdvanceOffset:I

    int-to-long v4, v4

    add-long/2addr v4, v8

    invoke-virtual {v0, v4, v5, v6}, Lsun/misc/Unsafe;->putFloat(JF)V

    .line 337
    .end local v6    # "advance":F
    .end local v8    # "ptr":J
    :goto_1
    return-wide v8

    :cond_0
    move v5, v7

    .line 323
    goto :goto_0

    .line 337
    .restart local v8    # "ptr":J
    :cond_1
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v4, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    invoke-virtual {v0, v4, v5, p1}, Lae/sun/font/FileFont;->getGlyphImage(JI)J

    move-result-wide v8

    goto :goto_1
.end method

.method getGlyphImageFromX11(I)J
    .locals 4
    .param p1, "glyphCode"    # I

    .prologue
    .line 344
    iget-object v1, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-object v1, v1, Lae/sun/font/FileFont;->glyphToCharMap:[C

    aget-char v0, v1, p1

    .line 355
    .local v0, "charCode":C
    iget-object v1, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v2, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    invoke-virtual {v1, v2, v3, p1}, Lae/sun/font/FileFont;->getGlyphImage(JI)J

    move-result-wide v2

    return-wide v2
.end method

.method getGlyphImagePtr(I)J
    .locals 8
    .param p1, "glyphCode"    # I

    .prologue
    const-wide/16 v6, 0x0

    .line 359
    const v2, 0xfffe

    if-lt p1, v2, :cond_1

    .line 360
    sget-wide v0, Lae/sun/font/StrikeCache;->invisibleGlyphPtr:J

    .line 378
    :cond_0
    :goto_0
    return-wide v0

    .line 362
    :cond_1
    const-wide/16 v0, 0x0

    .line 363
    .local v0, "glyphPtr":J
    invoke-virtual {p0, p1}, Lae/sun/font/FileFontStrike;->getCachedGlyphPtr(I)J

    move-result-wide v0

    cmp-long v2, v0, v6

    if-nez v2, :cond_0

    .line 366
    iget-boolean v2, p0, Lae/sun/font/FileFontStrike;->useNatives:Z

    if-eqz v2, :cond_2

    .line 367
    invoke-virtual {p0, p1}, Lae/sun/font/FileFontStrike;->getGlyphImageFromNative(I)J

    move-result-wide v0

    .line 368
    cmp-long v2, v0, v6

    if-nez v2, :cond_2

    sget-boolean v2, Lae/sun/font/FontManager;->logging:Z

    if-eqz v2, :cond_2

    .line 369
    sget-object v2, Lae/sun/font/FontManager;->logger:Ljava/util/logging/Logger;

    .line 370
    new-instance v3, Ljava/lang/StringBuilder;

    const-string v4, "Strike for "

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v4, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 371
    const-string v4, " at size = "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget v4, p0, Lae/sun/font/FileFontStrike;->intPtSize:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 372
    const-string v4, " couldn\'t get native glyph for code = "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 370
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 369
    invoke-virtual {v2, v3}, Ljava/util/logging/Logger;->info(Ljava/lang/String;)V

    .line 374
    :cond_2
    cmp-long v2, v0, v6

    if-nez v2, :cond_3

    .line 375
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v4, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    invoke-virtual {v2, v4, v5, p1}, Lae/sun/font/FileFont;->getGlyphImage(JI)J

    move-result-wide v0

    .line 378
    :cond_3
    invoke-direct {p0, p1, v0, v1}, Lae/sun/font/FileFontStrike;->setCachedGlyphPtr(IJ)J

    move-result-wide v0

    goto :goto_0
.end method

.method getGlyphImagePtrs([I[JI)V
    .locals 10
    .param p1, "glyphCodes"    # [I
    .param p2, "images"    # [J
    .param p3, "len"    # I

    .prologue
    const-wide/16 v8, 0x0

    .line 384
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-lt v1, p3, :cond_0

    .line 402
    return-void

    .line 385
    :cond_0
    aget v0, p1, v1

    .line 386
    .local v0, "glyphCode":I
    const v4, 0xfffe

    if-lt v0, v4, :cond_2

    .line 387
    sget-wide v4, Lae/sun/font/StrikeCache;->invisibleGlyphPtr:J

    aput-wide v4, p2, v1

    .line 384
    :cond_1
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 389
    :cond_2
    invoke-virtual {p0, v0}, Lae/sun/font/FileFontStrike;->getCachedGlyphPtr(I)J

    move-result-wide v4

    aput-wide v4, p2, v1

    cmp-long v4, v4, v8

    if-nez v4, :cond_1

    .line 392
    const-wide/16 v2, 0x0

    .line 393
    .local v2, "glyphPtr":J
    iget-boolean v4, p0, Lae/sun/font/FileFontStrike;->useNatives:Z

    if-eqz v4, :cond_3

    .line 394
    invoke-virtual {p0, v0}, Lae/sun/font/FileFontStrike;->getGlyphImageFromNative(I)J

    move-result-wide v2

    .line 395
    :cond_3
    cmp-long v4, v2, v8

    if-nez v4, :cond_4

    .line 396
    iget-object v4, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v6, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    invoke-virtual {v4, v6, v7, v0}, Lae/sun/font/FileFont;->getGlyphImage(JI)J

    move-result-wide v2

    .line 399
    :cond_4
    invoke-direct {p0, v0, v2, v3}, Lae/sun/font/FileFontStrike;->setCachedGlyphPtr(IJ)J

    move-result-wide v4

    aput-wide v4, p2, v1

    goto :goto_1
.end method

.method getGlyphMetrics(I)Lae/java/awt/geom/Point2D$Float;
    .locals 1
    .param p1, "glyphCode"    # I

    .prologue
    .line 723
    const/4 v0, 0x1

    invoke-direct {p0, p1, v0}, Lae/sun/font/FileFontStrike;->getGlyphMetrics(IZ)Lae/java/awt/geom/Point2D$Float;

    move-result-object v0

    return-object v0
.end method

.method getGlyphOutline(IFF)Lae/java/awt/geom/GeneralPath;
    .locals 7
    .param p1, "glyphCode"    # I
    .param p2, "x"    # F
    .param p3, "y"    # F

    .prologue
    .line 846
    iget-object v1, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v2, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    move v4, p1

    move v5, p2

    move v6, p3

    invoke-virtual/range {v1 .. v6}, Lae/sun/font/FileFont;->getGlyphOutline(JIFF)Lae/java/awt/geom/GeneralPath;

    move-result-object v0

    return-object v0
.end method

.method getGlyphOutlineBounds(I)Lae/java/awt/geom/Rectangle2D$Float;
    .locals 6
    .param p1, "glyphCode"    # I

    .prologue
    .line 827
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->boundsMap:Ljava/util/concurrent/ConcurrentHashMap;

    if-nez v2, :cond_0

    .line 828
    new-instance v2, Ljava/util/concurrent/ConcurrentHashMap;

    invoke-direct {v2}, Ljava/util/concurrent/ConcurrentHashMap;-><init>()V

    iput-object v2, p0, Lae/sun/font/FileFontStrike;->boundsMap:Ljava/util/concurrent/ConcurrentHashMap;

    .line 831
    :cond_0
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    .line 832
    .local v1, "key":Ljava/lang/Integer;
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->boundsMap:Ljava/util/concurrent/ConcurrentHashMap;

    invoke-virtual {v2, v1}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lae/java/awt/geom/Rectangle2D$Float;

    .line 834
    .local v0, "bounds":Lae/java/awt/geom/Rectangle2D$Float;
    if-nez v0, :cond_1

    .line 835
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v4, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    invoke-virtual {v2, v4, v5, p1}, Lae/sun/font/FileFont;->getGlyphOutlineBounds(JI)Lae/java/awt/geom/Rectangle2D$Float;

    move-result-object v0

    .line 836
    iget-object v2, p0, Lae/sun/font/FileFontStrike;->boundsMap:Ljava/util/concurrent/ConcurrentHashMap;

    invoke-virtual {v2, v1, v0}, Ljava/util/concurrent/ConcurrentHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 838
    :cond_1
    return-object v0
.end method

.method getGlyphVectorOutline([IFF)Lae/java/awt/geom/GeneralPath;
    .locals 8
    .param p1, "glyphs"    # [I
    .param p2, "x"    # F
    .param p3, "y"    # F

    .prologue
    .line 850
    iget-object v1, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v2, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    .line 851
    array-length v5, p1

    move-object v4, p1

    move v6, p2

    move v7, p3

    .line 850
    invoke-virtual/range {v1 .. v7}, Lae/sun/font/FileFont;->getGlyphVectorOutline(J[IIFF)Lae/java/awt/geom/GeneralPath;

    move-result-object v0

    return-object v0
.end method

.method public getNumGlyphs()I
    .locals 1

    .prologue
    .line 296
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    invoke-virtual {v0}, Lae/sun/font/FileFont;->getNumGlyphs()I

    move-result v0

    return v0
.end method

.method public getOutlineBounds(I)Lae/java/awt/geom/Rectangle2D;
    .locals 4
    .param p1, "glyphCode"    # I

    .prologue
    .line 842
    iget-object v0, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v2, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    invoke-virtual {v0, v2, v3, p1}, Lae/sun/font/FileFont;->getGlyphOutlineBounds(JI)Lae/java/awt/geom/Rectangle2D$Float;

    move-result-object v0

    return-object v0
.end method

.method getSlot0GlyphImagePtrs([I[JI)I
    .locals 10
    .param p1, "glyphCodes"    # [I
    .param p2, "images"    # [J
    .param p3, "len"    # I

    .prologue
    const-wide/16 v8, 0x0

    .line 409
    const/4 v0, 0x0

    .line 411
    .local v0, "convertedCnt":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_0
    if-lt v4, p3, :cond_1

    .line 435
    :cond_0
    return v0

    .line 412
    :cond_1
    aget v1, p1, v4

    .line 413
    .local v1, "glyphCode":I
    const v5, 0xffffff

    if-ge v1, v5, :cond_0

    .line 416
    add-int/lit8 v0, v0, 0x1

    .line 418
    const v5, 0xfffe

    if-lt v1, v5, :cond_3

    .line 419
    sget-wide v6, Lae/sun/font/StrikeCache;->invisibleGlyphPtr:J

    aput-wide v6, p2, v4

    .line 411
    :cond_2
    :goto_1
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 421
    :cond_3
    invoke-virtual {p0, v1}, Lae/sun/font/FileFontStrike;->getCachedGlyphPtr(I)J

    move-result-wide v6

    aput-wide v6, p2, v4

    cmp-long v5, v6, v8

    if-nez v5, :cond_2

    .line 424
    const-wide/16 v2, 0x0

    .line 425
    .local v2, "glyphPtr":J
    iget-boolean v5, p0, Lae/sun/font/FileFontStrike;->useNatives:Z

    if-eqz v5, :cond_4

    .line 426
    invoke-virtual {p0, v1}, Lae/sun/font/FileFontStrike;->getGlyphImageFromNative(I)J

    move-result-wide v2

    .line 428
    :cond_4
    cmp-long v5, v2, v8

    if-nez v5, :cond_5

    .line 429
    iget-object v5, p0, Lae/sun/font/FileFontStrike;->fileFont:Lae/sun/font/FileFont;

    iget-wide v6, p0, Lae/sun/font/FileFontStrike;->pScalerContext:J

    invoke-virtual {v5, v6, v7, v1}, Lae/sun/font/FileFont;->getGlyphImage(JI)J

    move-result-wide v2

    .line 432
    :cond_5
    invoke-direct {p0, v1, v2, v3}, Lae/sun/font/FileFontStrike;->setCachedGlyphPtr(IJ)J

    move-result-wide v6

    aput-wide v6, p2, v4

    goto :goto_1
.end method

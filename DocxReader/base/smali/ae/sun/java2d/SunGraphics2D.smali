.class public final Lae/sun/java2d/SunGraphics2D;
.super Lae/java/awt/Graphics2D;
.source "SunGraphics2D.java"

# interfaces
.implements Lae/sun/awt/ConstrainableGraphics;
.implements Ljava/lang/Cloneable;
.implements Lae/sun/java2d/DestSurfaceProvider;


# static fields
.field public static final CLIP_DEVICE:I = 0x0

.field public static final CLIP_RECTANGULAR:I = 0x1

.field public static final CLIP_SHAPE:I = 0x2

.field public static final COMP_ALPHA:I = 0x1

.field public static final COMP_CUSTOM:I = 0x3

.field public static final COMP_ISCOPY:I = 0x0

.field public static final COMP_XOR:I = 0x2

.field private static final IDENT_ATX:Lae/java/awt/geom/AffineTransform;

.field private static final IDENT_MATRIX:[D

.field private static final MINALLOCATED:I = 0x8

.field public static final MinPenSizeAA:D

.field public static final MinPenSizeAASquared:D

.field public static final MinPenSizeSquared:D = 1.000000001

.field static final NON_RECTILINEAR_TRANSFORM_MASK:I = 0x30

.field static final NON_UNIFORM_SCALE_MASK:I = 0x24

.field public static final PAINT_ALPHACOLOR:I = 0x1

.field public static final PAINT_CUSTOM:I = 0x6

.field public static final PAINT_GRADIENT:I = 0x2

.field public static final PAINT_LIN_GRADIENT:I = 0x3

.field public static final PAINT_OPAQUECOLOR:I = 0x0

.field public static final PAINT_RAD_GRADIENT:I = 0x4

.field public static final PAINT_TEXTURE:I = 0x5

.field public static final STROKE_CUSTOM:I = 0x3

.field public static final STROKE_THIN:I = 0x0

.field public static final STROKE_THINDASHED:I = 0x1

.field public static final STROKE_WIDE:I = 0x2

.field private static final TEXTARRSIZE:I = 0x11

.field public static final TRANSFORM_ANY_TRANSLATE:I = 0x2

.field public static final TRANSFORM_GENERIC:I = 0x4

.field public static final TRANSFORM_INT_TRANSLATE:I = 0x1

.field public static final TRANSFORM_ISIDENT:I = 0x0

.field public static final TRANSFORM_TRANSLATESCALE:I = 0x3

.field protected static final defaultComposite:Lae/java/awt/Composite;

.field private static final defaultFont:Lae/java/awt/Font;

.field protected static final defaultStroke:Lae/java/awt/Stroke;

.field protected static invalidpipe:Lae/sun/java2d/pipe/ValidatePipe; = null

.field private static lcdTextContrastDefaultValue:I = 0x0

.field private static final slowTextTransformMask:I = 0x78

.field private static textAtArr:[Lae/java/awt/geom/AffineTransform;

.field private static textTxArr:[[D


# instance fields
.field public alphafill:Lae/sun/java2d/loops/MaskFill;

.field public antialiasHint:I

.field public backgroundColor:Lae/java/awt/Color;

.field private cachedFRC:Lae/java/awt/font/FontRenderContext;

.field public clipRegion:Lae/sun/java2d/pipe/Region;

.field public clipState:I

.field public composite:Lae/java/awt/Composite;

.field public compositeState:I

.field public constrainClip:Lae/sun/java2d/pipe/Region;

.field public constrainX:I

.field public constrainY:I

.field protected devClip:Lae/sun/java2d/pipe/Region;

.field public drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

.field public eargb:I

.field public fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

.field protected font:Lae/java/awt/Font;

.field private fontInfo:Lae/sun/java2d/loops/FontInfo;

.field protected fontMetrics:Lae/java/awt/FontMetrics;

.field public foregroundColor:Lae/java/awt/Color;

.field private fractionalMetricsHint:I

.field private glyphVectorFRC:Lae/java/awt/font/FontRenderContext;

.field private glyphVectorFontInfo:Lae/sun/java2d/loops/FontInfo;

.field public hints:Lae/java/awt/RenderingHints;

.field public imageComp:Lae/sun/java2d/loops/CompositeType;

.field public imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

.field private interpolationHint:I

.field public interpolationType:I

.field lastCAblit:Lae/sun/java2d/loops/Blit;

.field lastCAcomp:Lae/java/awt/Composite;

.field public lcdTextContrast:I

.field public loops:Lae/sun/java2d/loops/RenderLoops;

.field public paint:Lae/java/awt/Paint;

.field public paintState:I

.field public pixel:I

.field public renderHint:I

.field public shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

.field public stroke:Lae/java/awt/Stroke;

.field public strokeHint:I

.field public strokeState:I

.field public surfaceData:Lae/sun/java2d/SurfaceData;

.field public textAntialiasHint:I

.field public textpipe:Lae/sun/java2d/pipe/TextPipe;

.field public transX:I

.field public transY:I

.field public transform:Lae/java/awt/geom/AffineTransform;

.field public transformState:I

.field public usrClip:Lae/java/awt/Shape;

.field private validFontInfo:Z


# direct methods
.method static constructor <clinit>()V
    .locals 11

    .prologue
    const/4 v10, 0x4

    const/4 v7, 0x0

    const-wide/16 v8, 0x0

    const/16 v6, 0x11

    .line 178
    new-instance v1, Lae/java/awt/BasicStroke;

    invoke-direct {v1}, Lae/java/awt/BasicStroke;-><init>()V

    sput-object v1, Lae/sun/java2d/SunGraphics2D;->defaultStroke:Lae/java/awt/Stroke;

    .line 179
    sget-object v1, Lae/java/awt/AlphaComposite;->SrcOver:Lae/java/awt/AlphaComposite;

    sput-object v1, Lae/sun/java2d/SunGraphics2D;->defaultComposite:Lae/java/awt/Composite;

    .line 181
    new-instance v1, Lae/java/awt/Font;

    const-string v2, "Dialog"

    const/16 v3, 0xc

    invoke-direct {v1, v2, v7, v3}, Lae/java/awt/Font;-><init>(Ljava/lang/String;II)V

    .line 180
    sput-object v1, Lae/sun/java2d/SunGraphics2D;->defaultFont:Lae/java/awt/Font;

    .line 196
    const/16 v1, 0x8c

    sput v1, Lae/sun/java2d/SunGraphics2D;->lcdTextContrastDefaultValue:I

    .line 226
    invoke-static {}, Lsun/misc/PerformanceLogger;->loggingEnabled()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 227
    const-string v1, "SunGraphics2D static initialization"

    invoke-static {v1}, Lsun/misc/PerformanceLogger;->setTime(Ljava/lang/String;)I

    .line 359
    :cond_0
    new-instance v1, Lae/sun/java2d/pipe/ValidatePipe;

    invoke-direct {v1}, Lae/sun/java2d/pipe/ValidatePipe;-><init>()V

    sput-object v1, Lae/sun/java2d/SunGraphics2D;->invalidpipe:Lae/sun/java2d/pipe/ValidatePipe;

    .line 498
    new-array v1, v10, [D

    fill-array-data v1, :array_0

    sput-object v1, Lae/sun/java2d/SunGraphics2D;->IDENT_MATRIX:[D

    .line 500
    new-instance v1, Lae/java/awt/geom/AffineTransform;

    invoke-direct {v1}, Lae/java/awt/geom/AffineTransform;-><init>()V

    .line 499
    sput-object v1, Lae/sun/java2d/SunGraphics2D;->IDENT_ATX:Lae/java/awt/geom/AffineTransform;

    .line 504
    new-array v1, v6, [[D

    sput-object v1, Lae/sun/java2d/SunGraphics2D;->textTxArr:[[D

    .line 506
    new-array v1, v6, [Lae/java/awt/geom/AffineTransform;

    .line 505
    sput-object v1, Lae/sun/java2d/SunGraphics2D;->textAtArr:[Lae/java/awt/geom/AffineTransform;

    .line 509
    const/16 v0, 0x8

    .local v0, "i":I
    :goto_0
    if-lt v0, v6, :cond_1

    .line 963
    invoke-static {}, Lae/sun/java2d/pipe/RenderingEngine;->getInstance()Lae/sun/java2d/pipe/RenderingEngine;

    move-result-object v1

    invoke-virtual {v1}, Lae/sun/java2d/pipe/RenderingEngine;->getMinimumAAPenSize()F

    move-result v1

    float-to-double v2, v1

    .line 962
    sput-wide v2, Lae/sun/java2d/SunGraphics2D;->MinPenSizeAA:D

    .line 965
    sget-wide v2, Lae/sun/java2d/SunGraphics2D;->MinPenSizeAA:D

    sget-wide v4, Lae/sun/java2d/SunGraphics2D;->MinPenSizeAA:D

    mul-double/2addr v2, v4

    .line 964
    sput-wide v2, Lae/sun/java2d/SunGraphics2D;->MinPenSizeAASquared:D

    .line 1856
    return-void

    .line 510
    :cond_1
    sget-object v1, Lae/sun/java2d/SunGraphics2D;->textTxArr:[[D

    new-array v2, v10, [D

    int-to-double v4, v0

    aput-wide v4, v2, v7

    const/4 v3, 0x1

    aput-wide v8, v2, v3

    const/4 v3, 0x2

    aput-wide v8, v2, v3

    const/4 v3, 0x3

    int-to-double v4, v0

    aput-wide v4, v2, v3

    aput-object v2, v1, v0

    .line 511
    sget-object v1, Lae/sun/java2d/SunGraphics2D;->textAtArr:[Lae/java/awt/geom/AffineTransform;

    new-instance v2, Lae/java/awt/geom/AffineTransform;

    sget-object v3, Lae/sun/java2d/SunGraphics2D;->textTxArr:[[D

    aget-object v3, v3, v0

    invoke-direct {v2, v3}, Lae/java/awt/geom/AffineTransform;-><init>([D)V

    aput-object v2, v1, v0

    .line 509
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 498
    :array_0
    .array-data 8
        0x3ff0000000000000L    # 1.0
        0x0
        0x0
        0x3ff0000000000000L    # 1.0
    .end array-data
.end method

.method public constructor <init>(Lae/sun/java2d/SurfaceData;Lae/java/awt/Color;Lae/java/awt/Color;Lae/java/awt/Font;)V
    .locals 3
    .param p1, "sd"    # Lae/sun/java2d/SurfaceData;
    .param p2, "fg"    # Lae/java/awt/Color;
    .param p3, "bg"    # Lae/java/awt/Color;
    .param p4, "f"    # Lae/java/awt/Font;

    .prologue
    const/4 v2, 0x1

    const/4 v1, 0x0

    .line 231
    invoke-direct {p0}, Lae/java/awt/Graphics2D;-><init>()V

    .line 232
    iput-object p1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    .line 233
    iput-object p2, p0, Lae/sun/java2d/SunGraphics2D;->foregroundColor:Lae/java/awt/Color;

    .line 234
    iput-object p3, p0, Lae/sun/java2d/SunGraphics2D;->backgroundColor:Lae/java/awt/Color;

    .line 236
    new-instance v0, Lae/java/awt/geom/AffineTransform;

    invoke-direct {v0}, Lae/java/awt/geom/AffineTransform;-><init>()V

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    .line 237
    sget-object v0, Lae/sun/java2d/SunGraphics2D;->defaultStroke:Lae/java/awt/Stroke;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    .line 238
    sget-object v0, Lae/sun/java2d/SunGraphics2D;->defaultComposite:Lae/java/awt/Composite;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->composite:Lae/java/awt/Composite;

    .line 239
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->foregroundColor:Lae/java/awt/Color;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->paint:Lae/java/awt/Paint;

    .line 241
    sget-object v0, Lae/sun/java2d/loops/CompositeType;->SrcOverNoEa:Lae/sun/java2d/loops/CompositeType;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    .line 243
    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->renderHint:I

    .line 244
    iput v2, p0, Lae/sun/java2d/SunGraphics2D;->antialiasHint:I

    .line 245
    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->textAntialiasHint:I

    .line 246
    iput v2, p0, Lae/sun/java2d/SunGraphics2D;->fractionalMetricsHint:I

    .line 247
    sget v0, Lae/sun/java2d/SunGraphics2D;->lcdTextContrastDefaultValue:I

    iput v0, p0, Lae/sun/java2d/SunGraphics2D;->lcdTextContrast:I

    .line 248
    const/4 v0, -0x1

    iput v0, p0, Lae/sun/java2d/SunGraphics2D;->interpolationHint:I

    .line 249
    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->strokeHint:I

    .line 251
    iput v2, p0, Lae/sun/java2d/SunGraphics2D;->interpolationType:I

    .line 253
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->validateColor()V

    .line 255
    iput-object p4, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    .line 256
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    if-nez v0, :cond_0

    .line 257
    sget-object v0, Lae/sun/java2d/SunGraphics2D;->defaultFont:Lae/java/awt/Font;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    .line 260
    :cond_0
    invoke-virtual {p1, p0}, Lae/sun/java2d/SurfaceData;->getRenderLoops(Lae/sun/java2d/SunGraphics2D;)Lae/sun/java2d/loops/RenderLoops;

    move-result-object v0

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->loops:Lae/sun/java2d/loops/RenderLoops;

    .line 261
    invoke-virtual {p1}, Lae/sun/java2d/SurfaceData;->getBounds()Lae/java/awt/Rectangle;

    move-result-object v0

    invoke-virtual {p0, v0}, Lae/sun/java2d/SunGraphics2D;->setDevClip(Lae/java/awt/Rectangle;)V

    .line 262
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidatePipe()V

    .line 263
    return-void
.end method

.method private clipTo(Lae/java/awt/Rectangle;Lae/java/awt/Rectangle;)Z
    .locals 8
    .param p1, "destRect"    # Lae/java/awt/Rectangle;
    .param p2, "clip"    # Lae/java/awt/Rectangle;

    .prologue
    const/4 v7, -0x1

    .line 2645
    iget v4, p1, Lae/java/awt/Rectangle;->x:I

    iget v5, p2, Lae/java/awt/Rectangle;->x:I

    invoke-static {v4, v5}, Ljava/lang/Math;->max(II)I

    move-result v0

    .line 2646
    .local v0, "x1":I
    iget v4, p1, Lae/java/awt/Rectangle;->x:I

    iget v5, p1, Lae/java/awt/Rectangle;->width:I

    add-int/2addr v4, v5

    iget v5, p2, Lae/java/awt/Rectangle;->x:I

    iget v6, p2, Lae/java/awt/Rectangle;->width:I

    add-int/2addr v5, v6

    invoke-static {v4, v5}, Ljava/lang/Math;->min(II)I

    move-result v1

    .line 2647
    .local v1, "x2":I
    iget v4, p1, Lae/java/awt/Rectangle;->y:I

    iget v5, p2, Lae/java/awt/Rectangle;->y:I

    invoke-static {v4, v5}, Ljava/lang/Math;->max(II)I

    move-result v2

    .line 2648
    .local v2, "y1":I
    iget v4, p1, Lae/java/awt/Rectangle;->y:I

    iget v5, p1, Lae/java/awt/Rectangle;->height:I

    add-int/2addr v4, v5

    iget v5, p2, Lae/java/awt/Rectangle;->y:I

    iget v6, p2, Lae/java/awt/Rectangle;->height:I

    add-int/2addr v5, v6

    invoke-static {v4, v5}, Ljava/lang/Math;->min(II)I

    move-result v3

    .line 2649
    .local v3, "y2":I
    sub-int v4, v1, v0

    if-ltz v4, :cond_0

    sub-int v4, v3, v2

    if-gez v4, :cond_1

    .line 2650
    :cond_0
    iput v7, p1, Lae/java/awt/Rectangle;->width:I

    .line 2651
    iput v7, p1, Lae/java/awt/Rectangle;->height:I

    .line 2652
    const/4 v4, 0x0

    .line 2658
    :goto_0
    return v4

    .line 2654
    :cond_1
    iput v0, p1, Lae/java/awt/Rectangle;->x:I

    .line 2655
    iput v2, p1, Lae/java/awt/Rectangle;->y:I

    .line 2656
    sub-int v4, v1, v0

    iput v4, p1, Lae/java/awt/Rectangle;->width:I

    .line 2657
    sub-int v4, v3, v2

    iput v4, p1, Lae/java/awt/Rectangle;->height:I

    .line 2658
    const/4 v4, 0x1

    goto :goto_0
.end method

.method protected static cloneShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;
    .locals 1
    .param p0, "s"    # Lae/java/awt/Shape;

    .prologue
    .line 438
    new-instance v0, Lae/java/awt/geom/GeneralPath;

    invoke-direct {v0, p0}, Lae/java/awt/geom/GeneralPath;-><init>(Lae/java/awt/Shape;)V

    return-object v0
.end method

.method private doCopyArea(IIIIII)V
    .locals 38
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I
    .param p5, "dx"    # I
    .param p6, "dy"    # I

    .prologue
    .line 2004
    if-lez p3, :cond_0

    if-gtz p4, :cond_1

    .line 2057
    :cond_0
    :goto_0
    return-void

    .line 2007
    :cond_1
    move-object/from16 v0, p0

    iget-object v3, v0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    .local v3, "theData":Lae/sun/java2d/SurfaceData;
    move-object/from16 v4, p0

    move/from16 v5, p1

    move/from16 v6, p2

    move/from16 v7, p3

    move/from16 v8, p4

    move/from16 v9, p5

    move/from16 v10, p6

    .line 2008
    invoke-virtual/range {v3 .. v10}, Lae/sun/java2d/SurfaceData;->copyArea(Lae/sun/java2d/SunGraphics2D;IIIIII)Z

    move-result v5

    if-nez v5, :cond_0

    .line 2011
    move-object/from16 v0, p0

    iget v5, v0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v6, 0x3

    if-lt v5, v6, :cond_2

    .line 2012
    new-instance v5, Ljava/lang/InternalError;

    const-string v6, "transformed copyArea not implemented yet"

    invoke-direct {v5, v6}, Ljava/lang/InternalError;-><init>(Ljava/lang/String;)V

    throw v5

    .line 2017
    :cond_2
    invoke-virtual/range {p0 .. p0}, Lae/sun/java2d/SunGraphics2D;->getCompClip()Lae/sun/java2d/pipe/Region;

    move-result-object v8

    .line 2019
    .local v8, "clip":Lae/sun/java2d/pipe/Region;
    move-object/from16 v0, p0

    iget-object v7, v0, Lae/sun/java2d/SunGraphics2D;->composite:Lae/java/awt/Composite;

    .line 2020
    .local v7, "comp":Lae/java/awt/Composite;
    move-object/from16 v0, p0

    iget-object v5, v0, Lae/sun/java2d/SunGraphics2D;->lastCAcomp:Lae/java/awt/Composite;

    if-eq v5, v7, :cond_4

    .line 2021
    invoke-virtual {v3}, Lae/sun/java2d/SurfaceData;->getSurfaceType()Lae/sun/java2d/loops/SurfaceType;

    move-result-object v37

    .line 2022
    .local v37, "dsttype":Lae/sun/java2d/loops/SurfaceType;
    move-object/from16 v0, p0

    iget-object v0, v0, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    move-object/from16 v36, v0

    .line 2023
    .local v36, "comptype":Lae/sun/java2d/loops/CompositeType;
    sget-object v5, Lae/sun/java2d/loops/CompositeType;->SrcOverNoEa:Lae/sun/java2d/loops/CompositeType;

    move-object/from16 v0, v36

    invoke-virtual {v5, v0}, Lae/sun/java2d/loops/CompositeType;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_3

    .line 2024
    invoke-virtual {v3}, Lae/sun/java2d/SurfaceData;->getTransparency()I

    move-result v5

    const/4 v6, 0x1

    if-ne v5, v6, :cond_3

    .line 2026
    sget-object v36, Lae/sun/java2d/loops/CompositeType;->SrcNoEa:Lae/sun/java2d/loops/CompositeType;

    .line 2028
    :cond_3
    move-object/from16 v0, v37

    move-object/from16 v1, v36

    move-object/from16 v2, v37

    invoke-static {v0, v1, v2}, Lae/sun/java2d/loops/Blit;->locate(Lae/sun/java2d/loops/SurfaceType;Lae/sun/java2d/loops/CompositeType;Lae/sun/java2d/loops/SurfaceType;)Lae/sun/java2d/loops/Blit;

    move-result-object v5

    move-object/from16 v0, p0

    iput-object v5, v0, Lae/sun/java2d/SunGraphics2D;->lastCAblit:Lae/sun/java2d/loops/Blit;

    .line 2029
    move-object/from16 v0, p0

    iput-object v7, v0, Lae/sun/java2d/SunGraphics2D;->lastCAcomp:Lae/java/awt/Composite;

    .line 2032
    .end local v36    # "comptype":Lae/sun/java2d/loops/CompositeType;
    .end local v37    # "dsttype":Lae/sun/java2d/loops/SurfaceType;
    :cond_4
    move-object/from16 v0, p0

    iget v5, v0, Lae/sun/java2d/SunGraphics2D;->transX:I

    add-int p1, p1, v5

    .line 2033
    move-object/from16 v0, p0

    iget v5, v0, Lae/sun/java2d/SunGraphics2D;->transY:I

    add-int p2, p2, v5

    .line 2035
    move-object/from16 v0, p0

    iget-object v4, v0, Lae/sun/java2d/SunGraphics2D;->lastCAblit:Lae/sun/java2d/loops/Blit;

    .line 2036
    .local v4, "ob":Lae/sun/java2d/loops/Blit;
    if-nez p6, :cond_5

    if-lez p5, :cond_5

    move/from16 v0, p5

    move/from16 v1, p3

    if-ge v0, v1, :cond_5

    .line 2037
    :goto_1
    if-lez p3, :cond_0

    .line 2038
    move/from16 v0, p3

    move/from16 v1, p5

    invoke-static {v0, v1}, Ljava/lang/Math;->min(II)I

    move-result v13

    .line 2039
    .local v13, "partW":I
    sub-int p3, p3, v13

    .line 2040
    add-int v9, p1, p3

    .line 2042
    .local v9, "sx":I
    add-int v11, v9, p5

    add-int v12, p2, p6

    move-object v5, v3

    move-object v6, v3

    move/from16 v10, p2

    move/from16 v14, p4

    .line 2041
    invoke-virtual/range {v4 .. v14}, Lae/sun/java2d/loops/Blit;->Blit(Lae/sun/java2d/SurfaceData;Lae/sun/java2d/SurfaceData;Lae/java/awt/Composite;Lae/sun/java2d/pipe/Region;IIIIII)V

    goto :goto_1

    .line 2046
    .end local v9    # "sx":I
    .end local v13    # "partW":I
    :cond_5
    if-lez p6, :cond_6

    move/from16 v0, p6

    move/from16 v1, p4

    if-ge v0, v1, :cond_6

    move/from16 v0, p3

    neg-int v5, v0

    move/from16 v0, p5

    if-le v0, v5, :cond_6

    move/from16 v0, p5

    move/from16 v1, p3

    if-ge v0, v1, :cond_6

    .line 2047
    :goto_2
    if-lez p4, :cond_0

    .line 2048
    move/from16 v0, p4

    move/from16 v1, p6

    invoke-static {v0, v1}, Ljava/lang/Math;->min(II)I

    move-result v24

    .line 2049
    .local v24, "partH":I
    sub-int p4, p4, v24

    .line 2050
    add-int v20, p2, p4

    .line 2052
    .local v20, "sy":I
    add-int v21, p1, p5

    add-int v22, v20, p6

    move-object v14, v4

    move-object v15, v3

    move-object/from16 v16, v3

    move-object/from16 v17, v7

    move-object/from16 v18, v8

    move/from16 v19, p1

    move/from16 v23, p3

    .line 2051
    invoke-virtual/range {v14 .. v24}, Lae/sun/java2d/loops/Blit;->Blit(Lae/sun/java2d/SurfaceData;Lae/sun/java2d/SurfaceData;Lae/java/awt/Composite;Lae/sun/java2d/pipe/Region;IIIIII)V

    goto :goto_2

    .line 2056
    .end local v20    # "sy":I
    .end local v24    # "partH":I
    :cond_6
    add-int v32, p1, p5

    add-int v33, p2, p6

    move-object/from16 v25, v4

    move-object/from16 v26, v3

    move-object/from16 v27, v3

    move-object/from16 v28, v7

    move-object/from16 v29, v8

    move/from16 v30, p1

    move/from16 v31, p2

    move/from16 v34, p3

    move/from16 v35, p4

    invoke-virtual/range {v25 .. v35}, Lae/sun/java2d/loops/Blit;->Blit(Lae/sun/java2d/SurfaceData;Lae/sun/java2d/SurfaceData;Lae/java/awt/Composite;Lae/sun/java2d/pipe/Region;IIIIII)V

    goto/16 :goto_0
.end method

.method private drawTranslatedRenderedImage(Lae/java/awt/image/RenderedImage;Lae/java/awt/Rectangle;II)V
    .locals 27
    .param p1, "img"    # Lae/java/awt/image/RenderedImage;
    .param p2, "region"    # Lae/java/awt/Rectangle;
    .param p3, "i2uTransX"    # I
    .param p4, "i2uTransY"    # I

    .prologue
    .line 2672
    invoke-interface/range {p1 .. p1}, Lae/java/awt/image/RenderedImage;->getTileGridXOffset()I

    move-result v20

    .line 2673
    .local v20, "tileGridXOffset":I
    invoke-interface/range {p1 .. p1}, Lae/java/awt/image/RenderedImage;->getTileGridYOffset()I

    move-result v21

    .line 2674
    .local v21, "tileGridYOffset":I
    invoke-interface/range {p1 .. p1}, Lae/java/awt/image/RenderedImage;->getTileWidth()I

    move-result v24

    .line 2675
    .local v24, "tileWidth":I
    invoke-interface/range {p1 .. p1}, Lae/java/awt/image/RenderedImage;->getTileHeight()I

    move-result v22

    .line 2679
    .local v22, "tileHeight":I
    move-object/from16 v0, p2

    iget v4, v0, Lae/java/awt/Rectangle;->x:I

    move/from16 v0, v20

    move/from16 v1, v24

    invoke-static {v4, v0, v1}, Lae/sun/java2d/SunGraphics2D;->getTileIndex(III)I

    move-result v17

    .line 2681
    .local v17, "minTileX":I
    move-object/from16 v0, p2

    iget v4, v0, Lae/java/awt/Rectangle;->y:I

    move/from16 v0, v21

    move/from16 v1, v22

    invoke-static {v4, v0, v1}, Lae/sun/java2d/SunGraphics2D;->getTileIndex(III)I

    move-result v18

    .line 2683
    .local v18, "minTileY":I
    move-object/from16 v0, p2

    iget v4, v0, Lae/java/awt/Rectangle;->x:I

    move-object/from16 v0, p2

    iget v6, v0, Lae/java/awt/Rectangle;->width:I

    add-int/2addr v4, v6

    add-int/lit8 v4, v4, -0x1

    move/from16 v0, v20

    move/from16 v1, v24

    invoke-static {v4, v0, v1}, Lae/sun/java2d/SunGraphics2D;->getTileIndex(III)I

    move-result v15

    .line 2686
    .local v15, "maxTileX":I
    move-object/from16 v0, p2

    iget v4, v0, Lae/java/awt/Rectangle;->y:I

    move-object/from16 v0, p2

    iget v6, v0, Lae/java/awt/Rectangle;->height:I

    add-int/2addr v4, v6

    add-int/lit8 v4, v4, -0x1

    move/from16 v0, v21

    move/from16 v1, v22

    invoke-static {v4, v0, v1}, Lae/sun/java2d/SunGraphics2D;->getTileIndex(III)I

    move-result v16

    .line 2690
    .local v16, "maxTileY":I
    invoke-interface/range {p1 .. p1}, Lae/java/awt/image/RenderedImage;->getColorModel()Lae/java/awt/image/ColorModel;

    move-result-object v14

    .line 2693
    .local v14, "colorModel":Lae/java/awt/image/ColorModel;
    new-instance v23, Lae/java/awt/Rectangle;

    invoke-direct/range {v23 .. v23}, Lae/java/awt/Rectangle;-><init>()V

    .line 2695
    .local v23, "tileRect":Lae/java/awt/Rectangle;
    move/from16 v26, v18

    .local v26, "ty":I
    :goto_0
    move/from16 v0, v26

    move/from16 v1, v16

    if-le v0, v1, :cond_0

    .line 2749
    return-void

    .line 2696
    :cond_0
    move/from16 v25, v17

    .local v25, "tx":I
    :goto_1
    move/from16 v0, v25

    if-le v0, v15, :cond_1

    .line 2695
    add-int/lit8 v26, v26, 0x1

    goto :goto_0

    .line 2698
    :cond_1
    move-object/from16 v0, p1

    move/from16 v1, v25

    move/from16 v2, v26

    invoke-interface {v0, v1, v2}, Lae/java/awt/image/RenderedImage;->getTile(II)Lae/java/awt/image/Raster;

    move-result-object v19

    .line 2701
    .local v19, "raster":Lae/java/awt/image/Raster;
    mul-int v4, v25, v24

    add-int v4, v4, v20

    move-object/from16 v0, v23

    iput v4, v0, Lae/java/awt/Rectangle;->x:I

    .line 2702
    mul-int v4, v26, v22

    add-int v4, v4, v21

    move-object/from16 v0, v23

    iput v4, v0, Lae/java/awt/Rectangle;->y:I

    .line 2703
    move/from16 v0, v24

    move-object/from16 v1, v23

    iput v0, v1, Lae/java/awt/Rectangle;->width:I

    .line 2704
    move/from16 v0, v22

    move-object/from16 v1, v23

    iput v0, v1, Lae/java/awt/Rectangle;->height:I

    .line 2709
    move-object/from16 v0, p0

    move-object/from16 v1, v23

    move-object/from16 v2, p2

    invoke-direct {v0, v1, v2}, Lae/sun/java2d/SunGraphics2D;->clipTo(Lae/java/awt/Rectangle;Lae/java/awt/Rectangle;)Z

    .line 2712
    const/4 v3, 0x0

    .line 2713
    .local v3, "wRaster":Lae/java/awt/image/WritableRaster;
    move-object/from16 v0, v19

    instance-of v4, v0, Lae/java/awt/image/WritableRaster;

    if-eqz v4, :cond_2

    move-object/from16 v3, v19

    .line 2714
    check-cast v3, Lae/java/awt/image/WritableRaster;

    .line 2726
    :goto_2
    move-object/from16 v0, v23

    iget v4, v0, Lae/java/awt/Rectangle;->x:I

    move-object/from16 v0, v23

    iget v5, v0, Lae/java/awt/Rectangle;->y:I

    .line 2727
    move-object/from16 v0, v23

    iget v6, v0, Lae/java/awt/Rectangle;->width:I

    .line 2728
    move-object/from16 v0, v23

    iget v7, v0, Lae/java/awt/Rectangle;->height:I

    .line 2729
    const/4 v8, 0x0

    const/4 v9, 0x0

    .line 2730
    const/4 v10, 0x0

    .line 2726
    invoke-virtual/range {v3 .. v10}, Lae/java/awt/image/WritableRaster;->createWritableChild(IIIIII[I)Lae/java/awt/image/WritableRaster;

    move-result-object v3

    .line 2734
    new-instance v5, Lae/java/awt/image/BufferedImage;

    .line 2736
    invoke-virtual {v14}, Lae/java/awt/image/ColorModel;->isAlphaPremultiplied()Z

    move-result v4

    .line 2737
    const/4 v6, 0x0

    .line 2734
    invoke-direct {v5, v14, v3, v4, v6}, Lae/java/awt/image/BufferedImage;-><init>(Lae/java/awt/image/ColorModel;Lae/java/awt/image/WritableRaster;ZLjava/util/Hashtable;)V

    .line 2744
    .local v5, "bufImg":Lae/java/awt/image/BufferedImage;
    move-object/from16 v0, v23

    iget v4, v0, Lae/java/awt/Rectangle;->x:I

    add-int v6, v4, p3

    .line 2745
    move-object/from16 v0, v23

    iget v4, v0, Lae/java/awt/Rectangle;->y:I

    add-int v7, v4, p4

    const/4 v8, 0x0

    const/4 v9, 0x0

    move-object/from16 v0, v23

    iget v10, v0, Lae/java/awt/Rectangle;->width:I

    .line 2746
    move-object/from16 v0, v23

    iget v11, v0, Lae/java/awt/Rectangle;->height:I

    const/4 v12, 0x0

    const/4 v13, 0x0

    move-object/from16 v4, p0

    .line 2744
    invoke-virtual/range {v4 .. v13}, Lae/sun/java2d/SunGraphics2D;->copyImage(Lae/java/awt/Image;IIIIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z

    .line 2696
    add-int/lit8 v25, v25, 0x1

    goto/16 :goto_1

    .line 2719
    .end local v5    # "bufImg":Lae/java/awt/image/BufferedImage;
    :cond_2
    invoke-virtual/range {v19 .. v19}, Lae/java/awt/image/Raster;->getSampleModel()Lae/java/awt/image/SampleModel;

    move-result-object v4

    .line 2720
    invoke-virtual/range {v19 .. v19}, Lae/java/awt/image/Raster;->getDataBuffer()Lae/java/awt/image/DataBuffer;

    move-result-object v6

    .line 2721
    const/4 v7, 0x0

    .line 2719
    invoke-static {v4, v6, v7}, Lae/java/awt/image/Raster;->createWritableRaster(Lae/java/awt/image/SampleModel;Lae/java/awt/image/DataBuffer;Lae/java/awt/Point;)Lae/java/awt/image/WritableRaster;

    move-result-object v3

    .line 2718
    goto :goto_2
.end method

.method private static getImageRegion(Lae/java/awt/image/RenderedImage;Lae/sun/java2d/pipe/Region;Lae/java/awt/geom/AffineTransform;Lae/java/awt/geom/AffineTransform;II)Lae/java/awt/Rectangle;
    .locals 30
    .param p0, "img"    # Lae/java/awt/image/RenderedImage;
    .param p1, "compClip"    # Lae/sun/java2d/pipe/Region;
    .param p2, "transform"    # Lae/java/awt/geom/AffineTransform;
    .param p3, "xform"    # Lae/java/awt/geom/AffineTransform;
    .param p4, "padX"    # I
    .param p5, "padY"    # I

    .prologue
    .line 2468
    new-instance v14, Lae/java/awt/Rectangle;

    invoke-interface/range {p0 .. p0}, Lae/java/awt/image/RenderedImage;->getMinX()I

    move-result v4

    invoke-interface/range {p0 .. p0}, Lae/java/awt/image/RenderedImage;->getMinY()I

    move-result v6

    .line 2469
    invoke-interface/range {p0 .. p0}, Lae/java/awt/image/RenderedImage;->getWidth()I

    move-result v7

    invoke-interface/range {p0 .. p0}, Lae/java/awt/image/RenderedImage;->getHeight()I

    move-result v8

    .line 2468
    invoke-direct {v14, v4, v6, v7, v8}, Lae/java/awt/Rectangle;-><init>(IIII)V

    .line 2471
    .local v14, "imageRect":Lae/java/awt/Rectangle;
    const/16 v18, 0x0

    .line 2473
    .local v18, "result":Lae/java/awt/Rectangle;
    const/16 v4, 0x8

    :try_start_0
    new-array v5, v4, [D

    .line 2474
    .local v5, "p":[D
    const/4 v4, 0x0

    const/4 v6, 0x2

    invoke-virtual/range {p1 .. p1}, Lae/sun/java2d/pipe/Region;->getLoX()I

    move-result v7

    int-to-double v8, v7

    aput-wide v8, v5, v6

    aput-wide v8, v5, v4

    .line 2475
    const/4 v4, 0x4

    const/4 v6, 0x6

    invoke-virtual/range {p1 .. p1}, Lae/sun/java2d/pipe/Region;->getHiX()I

    move-result v7

    int-to-double v8, v7

    aput-wide v8, v5, v6

    aput-wide v8, v5, v4

    .line 2476
    const/4 v4, 0x1

    const/4 v6, 0x5

    invoke-virtual/range {p1 .. p1}, Lae/sun/java2d/pipe/Region;->getLoY()I

    move-result v7

    int-to-double v8, v7

    aput-wide v8, v5, v6

    aput-wide v8, v5, v4

    .line 2477
    const/4 v4, 0x3

    const/4 v6, 0x7

    invoke-virtual/range {p1 .. p1}, Lae/sun/java2d/pipe/Region;->getHiY()I

    move-result v7

    int-to-double v8, v7

    aput-wide v8, v5, v6

    aput-wide v8, v5, v4

    .line 2480
    const/4 v6, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x4

    move-object/from16 v4, p2

    move-object v7, v5

    invoke-virtual/range {v4 .. v9}, Lae/java/awt/geom/AffineTransform;->inverseTransform([DI[DII)V

    .line 2481
    const/4 v6, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x4

    move-object/from16 v4, p3

    move-object v7, v5

    invoke-virtual/range {v4 .. v9}, Lae/java/awt/geom/AffineTransform;->inverseTransform([DI[DII)V

    .line 2485
    const/4 v4, 0x0

    aget-wide v24, v5, v4

    .local v24, "x1":D
    move-wide/from16 v22, v24

    .line 2486
    .local v22, "x0":D
    const/4 v4, 0x1

    aget-wide v28, v5, v4

    .local v28, "y1":D
    move-wide/from16 v26, v28

    .line 2488
    .local v26, "y0":D
    const/4 v12, 0x2

    .local v12, "i":I
    move v13, v12

    .end local v12    # "i":I
    .local v13, "i":I
    :cond_0
    :goto_0
    const/16 v4, 0x8

    if-lt v13, v4, :cond_1

    .line 2505
    move-wide/from16 v0, v22

    double-to-int v4, v0

    sub-int v20, v4, p4

    .line 2506
    .local v20, "x":I
    sub-double v6, v24, v22

    mul-int/lit8 v4, p4, 0x2

    int-to-double v8, v4

    add-double/2addr v6, v8

    double-to-int v0, v6

    move/from16 v19, v0

    .line 2507
    .local v19, "w":I
    move-wide/from16 v0, v26

    double-to-int v4, v0

    sub-int v21, v4, p5

    .line 2508
    .local v21, "y":I
    sub-double v6, v28, v26

    mul-int/lit8 v4, p5, 0x2

    int-to-double v8, v4

    add-double/2addr v6, v8

    double-to-int v11, v6

    .line 2510
    .local v11, "h":I
    new-instance v10, Lae/java/awt/Rectangle;

    move/from16 v0, v20

    move/from16 v1, v21

    move/from16 v2, v19

    invoke-direct {v10, v0, v1, v2, v11}, Lae/java/awt/Rectangle;-><init>(IIII)V

    .line 2511
    .local v10, "clipRect":Lae/java/awt/Rectangle;
    invoke-virtual {v10, v14}, Lae/java/awt/Rectangle;->intersection(Lae/java/awt/Rectangle;)Lae/java/awt/Rectangle;

    move-result-object v18

    .line 2517
    .end local v5    # "p":[D
    .end local v10    # "clipRect":Lae/java/awt/Rectangle;
    .end local v11    # "h":I
    .end local v13    # "i":I
    .end local v19    # "w":I
    .end local v20    # "x":I
    .end local v21    # "y":I
    .end local v22    # "x0":D
    .end local v24    # "x1":D
    .end local v26    # "y0":D
    .end local v28    # "y1":D
    :goto_1
    return-object v18

    .line 2489
    .restart local v5    # "p":[D
    .restart local v13    # "i":I
    .restart local v22    # "x0":D
    .restart local v24    # "x1":D
    .restart local v26    # "y0":D
    .restart local v28    # "y1":D
    :cond_1
    add-int/lit8 v12, v13, 0x1

    .end local v13    # "i":I
    .restart local v12    # "i":I
    aget-wide v16, v5, v13

    .line 2490
    .local v16, "pt":D
    cmpg-double v4, v16, v22

    if-gez v4, :cond_3

    .line 2491
    move-wide/from16 v22, v16

    .line 2495
    :cond_2
    :goto_2
    add-int/lit8 v13, v12, 0x1

    .end local v12    # "i":I
    .restart local v13    # "i":I
    aget-wide v16, v5, v12
    :try_end_0
    .catch Lae/java/awt/geom/NoninvertibleTransformException; {:try_start_0 .. :try_end_0} :catch_0

    .line 2496
    cmpg-double v4, v16, v26

    if-gez v4, :cond_4

    .line 2497
    move-wide/from16 v26, v16

    .line 2498
    goto :goto_0

    .line 2492
    .end local v13    # "i":I
    .restart local v12    # "i":I
    :cond_3
    cmpl-double v4, v16, v24

    if-lez v4, :cond_2

    .line 2493
    move-wide/from16 v24, v16

    goto :goto_2

    .line 2498
    .end local v12    # "i":I
    .restart local v13    # "i":I
    :cond_4
    cmpl-double v4, v16, v28

    if-lez v4, :cond_0

    .line 2499
    move-wide/from16 v28, v16

    goto :goto_0

    .line 2512
    .end local v5    # "p":[D
    .end local v13    # "i":I
    .end local v16    # "pt":D
    .end local v22    # "x0":D
    .end local v24    # "x1":D
    .end local v26    # "y0":D
    .end local v28    # "y1":D
    :catch_0
    move-exception v15

    .line 2514
    .local v15, "nte":Lae/java/awt/geom/NoninvertibleTransformException;
    move-object/from16 v18, v14

    goto :goto_1
.end method

.method private static getTileIndex(III)I
    .locals 1
    .param p0, "p"    # I
    .param p1, "tileGridOffset"    # I
    .param p2, "tileSize"    # I

    .prologue
    .line 2448
    sub-int/2addr p0, p1

    .line 2449
    if-gez p0, :cond_0

    .line 2450
    rsub-int/lit8 v0, p2, 0x1

    add-int/2addr p0, v0

    .line 2452
    :cond_0
    div-int v0, p0, p2

    return v0
.end method

.method private static isIntegerTranslation(Lae/java/awt/geom/AffineTransform;)Z
    .locals 8
    .param p0, "xform"    # Lae/java/awt/geom/AffineTransform;

    .prologue
    const/4 v5, 0x0

    const/4 v4, 0x1

    .line 2432
    invoke-virtual {p0}, Lae/java/awt/geom/AffineTransform;->isIdentity()Z

    move-result v6

    if-eqz v6, :cond_1

    .line 2440
    :cond_0
    :goto_0
    return v4

    .line 2435
    :cond_1
    invoke-virtual {p0}, Lae/java/awt/geom/AffineTransform;->getType()I

    move-result v6

    if-ne v6, v4, :cond_3

    .line 2436
    invoke-virtual {p0}, Lae/java/awt/geom/AffineTransform;->getTranslateX()D

    move-result-wide v0

    .line 2437
    .local v0, "tx":D
    invoke-virtual {p0}, Lae/java/awt/geom/AffineTransform;->getTranslateY()D

    move-result-wide v2

    .line 2438
    .local v2, "ty":D
    double-to-int v6, v0

    int-to-double v6, v6

    cmpl-double v6, v0, v6

    if-nez v6, :cond_2

    double-to-int v6, v2

    int-to-double v6, v6

    cmpl-double v6, v2, v6

    if-eqz v6, :cond_0

    :cond_2
    move v4, v5

    goto :goto_0

    .end local v0    # "tx":D
    .end local v2    # "ty":D
    :cond_3
    move v4, v5

    .line 2440
    goto :goto_0
.end method

.method public static isRotated([D)Z
    .locals 8
    .param p0, "mtx"    # [D

    .prologue
    const/4 v1, 0x1

    const/4 v0, 0x0

    const-wide/16 v6, 0x0

    .line 707
    aget-wide v2, p0, v0

    const/4 v4, 0x3

    aget-wide v4, p0, v4

    cmpl-double v2, v2, v4

    if-nez v2, :cond_0

    .line 708
    aget-wide v2, p0, v1

    cmpl-double v2, v2, v6

    if-nez v2, :cond_0

    .line 709
    const/4 v2, 0x2

    aget-wide v2, p0, v2

    cmpl-double v2, v2, v6

    if-nez v2, :cond_0

    .line 710
    aget-wide v2, p0, v0

    cmpl-double v2, v2, v6

    if-lez v2, :cond_0

    .line 715
    :goto_0
    return v0

    :cond_0
    move v0, v1

    goto :goto_0
.end method

.method private revalidateAll()V
    .locals 3

    .prologue
    .line 2331
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->getReplacement()Lae/sun/java2d/SurfaceData;

    move-result-object v1

    iput-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    .line 2332
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    if-nez v1, :cond_0

    .line 2333
    sget-object v1, Lae/sun/java2d/NullSurfaceData;->theInstance:Lae/sun/java2d/SurfaceData;

    iput-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    .line 2337
    :cond_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->getBounds()Lae/java/awt/Rectangle;

    move-result-object v1

    invoke-virtual {p0, v1}, Lae/sun/java2d/SunGraphics2D;->setDevClip(Lae/java/awt/Rectangle;)V

    .line 2339
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    const/4 v2, 0x1

    if-gt v1, v2, :cond_1

    .line 2340
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->validateColor()V

    .line 2342
    :cond_1
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->composite:Lae/java/awt/Composite;

    instance-of v1, v1, Lae/sun/java2d/loops/XORComposite;

    if-eqz v1, :cond_2

    .line 2343
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->composite:Lae/java/awt/Composite;

    check-cast v1, Lae/sun/java2d/loops/XORComposite;

    invoke-virtual {v1}, Lae/sun/java2d/loops/XORComposite;->getXorColor()Lae/java/awt/Color;

    move-result-object v0

    .line 2344
    .local v0, "c":Lae/java/awt/Color;
    new-instance v1, Lae/sun/java2d/loops/XORComposite;

    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-direct {v1, v0, v2}, Lae/sun/java2d/loops/XORComposite;-><init>(Lae/java/awt/Color;Lae/sun/java2d/SurfaceData;)V

    invoke-virtual {p0, v1}, Lae/sun/java2d/SunGraphics2D;->setComposite(Lae/java/awt/Composite;)V

    .line 2346
    .end local v0    # "c":Lae/java/awt/Color;
    :cond_2
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->validatePipe()V

    .line 2351
    return-void
.end method

.method protected static transformShape(IILae/java/awt/Shape;)Lae/java/awt/Shape;
    .locals 12
    .param p0, "tx"    # I
    .param p1, "ty"    # I
    .param p2, "s"    # Lae/java/awt/Shape;

    .prologue
    .line 1885
    if-nez p2, :cond_0

    .line 1886
    const/4 v10, 0x0

    .line 1907
    :goto_0
    return-object v10

    .line 1889
    :cond_0
    instance-of v1, p2, Lae/java/awt/Rectangle;

    if-eqz v1, :cond_1

    .line 1890
    invoke-interface {p2}, Lae/java/awt/Shape;->getBounds()Lae/java/awt/Rectangle;

    move-result-object v10

    .line 1891
    .local v10, "r":Lae/java/awt/Rectangle;
    invoke-virtual {v10, p0, p1}, Lae/java/awt/Rectangle;->translate(II)V

    goto :goto_0

    .line 1894
    .end local v10    # "r":Lae/java/awt/Rectangle;
    :cond_1
    instance-of v1, p2, Lae/java/awt/geom/Rectangle2D;

    if-eqz v1, :cond_2

    move-object v11, p2

    .line 1895
    check-cast v11, Lae/java/awt/geom/Rectangle2D;

    .line 1896
    .local v11, "rect":Lae/java/awt/geom/Rectangle2D;
    new-instance v1, Lae/java/awt/geom/Rectangle2D$Double;

    invoke-virtual {v11}, Lae/java/awt/geom/Rectangle2D;->getX()D

    move-result-wide v2

    int-to-double v4, p0

    add-double/2addr v2, v4

    .line 1897
    invoke-virtual {v11}, Lae/java/awt/geom/Rectangle2D;->getY()D

    move-result-wide v4

    int-to-double v6, p1

    add-double/2addr v4, v6

    .line 1898
    invoke-virtual {v11}, Lae/java/awt/geom/Rectangle2D;->getWidth()D

    move-result-wide v6

    .line 1899
    invoke-virtual {v11}, Lae/java/awt/geom/Rectangle2D;->getHeight()D

    move-result-wide v8

    .line 1896
    invoke-direct/range {v1 .. v9}, Lae/java/awt/geom/Rectangle2D$Double;-><init>(DDDD)V

    move-object v10, v1

    goto :goto_0

    .line 1902
    .end local v11    # "rect":Lae/java/awt/geom/Rectangle2D;
    :cond_2
    if-nez p0, :cond_3

    if-nez p1, :cond_3

    .line 1903
    invoke-static {p2}, Lae/sun/java2d/SunGraphics2D;->cloneShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object v10

    goto :goto_0

    .line 1906
    :cond_3
    int-to-double v2, p0

    int-to-double v4, p1

    invoke-static {v2, v3, v4, v5}, Lae/java/awt/geom/AffineTransform;->getTranslateInstance(DD)Lae/java/awt/geom/AffineTransform;

    move-result-object v0

    .line 1907
    .local v0, "mat":Lae/java/awt/geom/AffineTransform;
    invoke-virtual {v0, p2}, Lae/java/awt/geom/AffineTransform;->createTransformedShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object v10

    goto :goto_0
.end method

.method protected static transformShape(Lae/java/awt/geom/AffineTransform;Lae/java/awt/Shape;)Lae/java/awt/Shape;
    .locals 14
    .param p0, "tx"    # Lae/java/awt/geom/AffineTransform;
    .param p1, "clip"    # Lae/java/awt/Shape;

    .prologue
    const/4 v11, 0x3

    const/4 v5, 0x2

    const/4 v10, 0x1

    const/4 v2, 0x0

    .line 1911
    if-nez p1, :cond_0

    .line 1912
    const/4 v3, 0x0

    .line 1935
    :goto_0
    return-object v3

    .line 1915
    :cond_0
    instance-of v0, p1, Lae/java/awt/geom/Rectangle2D;

    if-eqz v0, :cond_1

    .line 1916
    invoke-virtual {p0}, Lae/java/awt/geom/AffineTransform;->getType()I

    move-result v0

    and-int/lit8 v0, v0, 0x30

    if-nez v0, :cond_1

    move-object v3, p1

    .line 1918
    check-cast v3, Lae/java/awt/geom/Rectangle2D;

    .line 1919
    .local v3, "rect":Lae/java/awt/geom/Rectangle2D;
    const/4 v0, 0x4

    new-array v1, v0, [D

    .line 1920
    .local v1, "matrix":[D
    invoke-virtual {v3}, Lae/java/awt/geom/Rectangle2D;->getX()D

    move-result-wide v6

    aput-wide v6, v1, v2

    .line 1921
    invoke-virtual {v3}, Lae/java/awt/geom/Rectangle2D;->getY()D

    move-result-wide v6

    aput-wide v6, v1, v10

    .line 1922
    aget-wide v6, v1, v2

    invoke-virtual {v3}, Lae/java/awt/geom/Rectangle2D;->getWidth()D

    move-result-wide v8

    add-double/2addr v6, v8

    aput-wide v6, v1, v5

    .line 1923
    aget-wide v6, v1, v10

    invoke-virtual {v3}, Lae/java/awt/geom/Rectangle2D;->getHeight()D

    move-result-wide v8

    add-double/2addr v6, v8

    aput-wide v6, v1, v11

    move-object v0, p0

    move-object v3, v1

    move v4, v2

    .line 1924
    invoke-virtual/range {v0 .. v5}, Lae/java/awt/geom/AffineTransform;->transform([DI[DII)V

    .line 1925
    .end local v3    # "rect":Lae/java/awt/geom/Rectangle2D;
    new-instance v3, Lae/java/awt/geom/Rectangle2D$Float;

    invoke-direct {v3}, Lae/java/awt/geom/Rectangle2D$Float;-><init>()V

    .line 1926
    .restart local v3    # "rect":Lae/java/awt/geom/Rectangle2D;
    aget-wide v12, v1, v2

    aget-wide v6, v1, v10

    .line 1927
    aget-wide v8, v1, v5

    aget-wide v10, v1, v11

    move-wide v4, v12

    .line 1926
    invoke-virtual/range {v3 .. v11}, Lae/java/awt/geom/Rectangle2D;->setFrameFromDiagonal(DDDD)V

    goto :goto_0

    .line 1931
    .end local v1    # "matrix":[D
    .end local v3    # "rect":Lae/java/awt/geom/Rectangle2D;
    :cond_1
    invoke-virtual {p0}, Lae/java/awt/geom/AffineTransform;->isIdentity()Z

    move-result v0

    if-eqz v0, :cond_2

    .line 1932
    invoke-static {p1}, Lae/sun/java2d/SunGraphics2D;->cloneShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object v3

    goto :goto_0

    .line 1935
    :cond_2
    invoke-virtual {p0, p1}, Lae/java/awt/geom/AffineTransform;->createTransformedShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object v3

    goto :goto_0
.end method

.method private validateBasicStroke(Lae/java/awt/BasicStroke;)V
    .locals 28
    .param p1, "bs"    # Lae/java/awt/BasicStroke;

    .prologue
    .line 974
    move-object/from16 v0, p0

    iget v0, v0, Lae/sun/java2d/SunGraphics2D;->antialiasHint:I

    move/from16 v17, v0

    const/16 v22, 0x2

    move/from16 v0, v17

    move/from16 v1, v22

    if-ne v0, v1, :cond_0

    const/16 v16, 0x1

    .line 975
    .local v16, "aa":Z
    :goto_0
    move-object/from16 v0, p0

    iget v0, v0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    move/from16 v17, v0

    const/16 v22, 0x3

    move/from16 v0, v17

    move/from16 v1, v22

    if-ge v0, v1, :cond_7

    .line 976
    if-eqz v16, :cond_3

    .line 977
    invoke-virtual/range {p1 .. p1}, Lae/java/awt/BasicStroke;->getLineWidth()F

    move-result v17

    move/from16 v0, v17

    float-to-double v0, v0

    move-wide/from16 v22, v0

    sget-wide v24, Lae/sun/java2d/SunGraphics2D;->MinPenSizeAA:D

    cmpg-double v17, v22, v24

    if-gtz v17, :cond_2

    .line 978
    invoke-virtual/range {p1 .. p1}, Lae/java/awt/BasicStroke;->getDashArray()[F

    move-result-object v17

    if-nez v17, :cond_1

    .line 979
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    .line 1071
    :goto_1
    return-void

    .line 974
    .end local v16    # "aa":Z
    :cond_0
    const/16 v16, 0x0

    goto :goto_0

    .line 981
    .restart local v16    # "aa":Z
    :cond_1
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    goto :goto_1

    .line 984
    :cond_2
    const/16 v17, 0x2

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    goto :goto_1

    .line 987
    :cond_3
    sget-object v17, Lae/sun/java2d/SunGraphics2D;->defaultStroke:Lae/java/awt/Stroke;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    if-ne v0, v1, :cond_4

    .line 988
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    goto :goto_1

    .line 989
    :cond_4
    invoke-virtual/range {p1 .. p1}, Lae/java/awt/BasicStroke;->getLineWidth()F

    move-result v17

    const/high16 v22, 0x3f800000    # 1.0f

    cmpg-float v17, v17, v22

    if-gtz v17, :cond_6

    .line 990
    invoke-virtual/range {p1 .. p1}, Lae/java/awt/BasicStroke;->getDashArray()[F

    move-result-object v17

    if-nez v17, :cond_5

    .line 991
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    goto :goto_1

    .line 993
    :cond_5
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    goto :goto_1

    .line 996
    :cond_6
    const/16 v17, 0x2

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    goto :goto_1

    .line 1001
    :cond_7
    move-object/from16 v0, p0

    iget-object v0, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lae/java/awt/geom/AffineTransform;->getType()I

    move-result v17

    and-int/lit8 v17, v17, 0x24

    if-nez v17, :cond_9

    .line 1003
    move-object/from16 v0, p0

    iget-object v0, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lae/java/awt/geom/AffineTransform;->getDeterminant()D

    move-result-wide v22

    invoke-static/range {v22 .. v23}, Ljava/lang/Math;->abs(D)D

    move-result-wide v20

    .line 1056
    .local v20, "widthsquared":D
    :goto_2
    sget-object v17, Lae/sun/java2d/SunGraphics2D;->defaultStroke:Lae/java/awt/Stroke;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    if-eq v0, v1, :cond_8

    .line 1057
    invoke-virtual/range {p1 .. p1}, Lae/java/awt/BasicStroke;->getLineWidth()F

    move-result v17

    invoke-virtual/range {p1 .. p1}, Lae/java/awt/BasicStroke;->getLineWidth()F

    move-result v22

    mul-float v17, v17, v22

    move/from16 v0, v17

    float-to-double v0, v0

    move-wide/from16 v22, v0

    mul-double v20, v20, v22

    .line 1060
    :cond_8
    if-eqz v16, :cond_a

    sget-wide v22, Lae/sun/java2d/SunGraphics2D;->MinPenSizeAASquared:D

    :goto_3
    cmpg-double v17, v20, v22

    if-gtz v17, :cond_c

    .line 1062
    invoke-virtual/range {p1 .. p1}, Lae/java/awt/BasicStroke;->getDashArray()[F

    move-result-object v17

    if-nez v17, :cond_b

    .line 1063
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    goto/16 :goto_1

    .line 1006
    .end local v20    # "widthsquared":D
    :cond_9
    move-object/from16 v0, p0

    iget-object v0, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lae/java/awt/geom/AffineTransform;->getScaleX()D

    move-result-wide v2

    .line 1007
    .local v2, "A":D
    move-object/from16 v0, p0

    iget-object v0, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lae/java/awt/geom/AffineTransform;->getShearX()D

    move-result-wide v6

    .line 1008
    .local v6, "C":D
    move-object/from16 v0, p0

    iget-object v0, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lae/java/awt/geom/AffineTransform;->getShearY()D

    move-result-wide v4

    .line 1009
    .local v4, "B":D
    move-object/from16 v0, p0

    iget-object v0, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lae/java/awt/geom/AffineTransform;->getScaleY()D

    move-result-wide v8

    .line 1025
    .local v8, "D":D
    mul-double v22, v2, v2

    mul-double v24, v4, v4

    add-double v10, v22, v24

    .line 1026
    .local v10, "EA":D
    const-wide/high16 v22, 0x4000000000000000L    # 2.0

    mul-double v24, v2, v6

    mul-double v26, v4, v8

    add-double v24, v24, v26

    mul-double v12, v22, v24

    .line 1027
    .local v12, "EB":D
    mul-double v22, v6, v6

    mul-double v24, v8, v8

    add-double v14, v22, v24

    .line 1051
    .local v14, "EC":D
    mul-double v22, v12, v12

    sub-double v24, v10, v14

    sub-double v26, v10, v14

    mul-double v24, v24, v26

    add-double v22, v22, v24

    invoke-static/range {v22 .. v23}, Ljava/lang/Math;->sqrt(D)D

    move-result-wide v18

    .line 1054
    .local v18, "hypot":D
    add-double v22, v10, v14

    add-double v22, v22, v18

    const-wide/high16 v24, 0x4000000000000000L    # 2.0

    div-double v20, v22, v24

    .restart local v20    # "widthsquared":D
    goto/16 :goto_2

    .line 1060
    .end local v2    # "A":D
    .end local v4    # "B":D
    .end local v6    # "C":D
    .end local v8    # "D":D
    .end local v10    # "EA":D
    .end local v12    # "EB":D
    .end local v14    # "EC":D
    .end local v18    # "hypot":D
    :cond_a
    const-wide v22, 0x3ff000000044b830L    # 1.000000001

    goto :goto_3

    .line 1065
    :cond_b
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    goto/16 :goto_1

    .line 1068
    :cond_c
    const/16 v17, 0x2

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    goto/16 :goto_1
.end method


# virtual methods
.method public addRenderingHints(Ljava/util/Map;)V
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/Map",
            "<**>;)V"
        }
    .end annotation

    .prologue
    .line 1312
    .local p1, "hints":Ljava/util/Map;, "Ljava/util/Map<**>;"
    const/4 v0, 0x0

    .line 1313
    .local v0, "customHintPresent":Z
    invoke-interface {p1}, Ljava/util/Map;->keySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 1314
    .local v1, "iter":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-nez v3, :cond_1

    .line 1329
    if-eqz v0, :cond_0

    .line 1330
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    if-nez v3, :cond_4

    .line 1331
    invoke-virtual {p0, p1}, Lae/sun/java2d/SunGraphics2D;->makeHints(Ljava/util/Map;)Lae/java/awt/RenderingHints;

    move-result-object v3

    iput-object v3, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    .line 1336
    :cond_0
    :goto_1
    return-void

    .line 1315
    :cond_1
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    .line 1316
    .local v2, "key":Ljava/lang/Object;
    sget-object v3, Lae/sun/awt/SunHints;->KEY_RENDERING:Lae/sun/awt/SunHints$Key;

    if-eq v2, v3, :cond_2

    .line 1317
    sget-object v3, Lae/sun/awt/SunHints;->KEY_ANTIALIASING:Lae/sun/awt/SunHints$Key;

    if-eq v2, v3, :cond_2

    .line 1318
    sget-object v3, Lae/sun/awt/SunHints;->KEY_TEXT_ANTIALIASING:Lae/sun/awt/SunHints$Key;

    if-eq v2, v3, :cond_2

    .line 1319
    sget-object v3, Lae/sun/awt/SunHints;->KEY_FRACTIONALMETRICS:Lae/sun/awt/SunHints$Key;

    if-eq v2, v3, :cond_2

    .line 1320
    sget-object v3, Lae/sun/awt/SunHints;->KEY_TEXT_ANTIALIAS_LCD_CONTRAST:Lae/java/awt/RenderingHints$Key;

    if-eq v2, v3, :cond_2

    .line 1321
    sget-object v3, Lae/sun/awt/SunHints;->KEY_STROKE_CONTROL:Lae/sun/awt/SunHints$Key;

    if-eq v2, v3, :cond_2

    .line 1322
    sget-object v3, Lae/sun/awt/SunHints;->KEY_INTERPOLATION:Lae/sun/awt/SunHints$Key;

    if-ne v2, v3, :cond_3

    :cond_2
    move-object v3, v2

    .line 1324
    check-cast v3, Lae/java/awt/RenderingHints$Key;

    invoke-interface {p1, v2}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {p0, v3, v4}, Lae/sun/java2d/SunGraphics2D;->setRenderingHint(Lae/java/awt/RenderingHints$Key;Ljava/lang/Object;)V

    goto :goto_0

    .line 1326
    :cond_3
    const/4 v0, 0x1

    goto :goto_0

    .line 1333
    .end local v2    # "key":Ljava/lang/Object;
    :cond_4
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    invoke-virtual {v3, p1}, Lae/java/awt/RenderingHints;->putAll(Ljava/util/Map;)V

    goto :goto_1
.end method

.method public checkFontInfo(Lae/sun/java2d/loops/FontInfo;Lae/java/awt/Font;Lae/java/awt/font/FontRenderContext;)Lae/sun/java2d/loops/FontInfo;
    .locals 20
    .param p1, "info"    # Lae/sun/java2d/loops/FontInfo;
    .param p2, "font"    # Lae/java/awt/Font;
    .param p3, "frc"    # Lae/java/awt/font/FontRenderContext;

    .prologue
    .line 522
    if-nez p1, :cond_0

    .line 523
    new-instance p1, Lae/sun/java2d/loops/FontInfo;

    .end local p1    # "info":Lae/sun/java2d/loops/FontInfo;
    invoke-direct/range {p1 .. p1}, Lae/sun/java2d/loops/FontInfo;-><init>()V

    .line 526
    .restart local p1    # "info":Lae/sun/java2d/loops/FontInfo;
    :cond_0
    invoke-virtual/range {p2 .. p2}, Lae/java/awt/Font;->getSize2D()F

    move-result v10

    .line 528
    .local v10, "ptSize":F
    const/4 v5, 0x0

    .line 529
    .local v5, "textAt":Lae/java/awt/geom/AffineTransform;
    invoke-virtual/range {p2 .. p2}, Lae/java/awt/Font;->isTransformed()Z

    move-result v2

    if-eqz v2, :cond_5

    .line 530
    invoke-virtual/range {p2 .. p2}, Lae/java/awt/Font;->getTransform()Lae/java/awt/geom/AffineTransform;

    move-result-object v5

    .line 531
    float-to-double v2, v10

    float-to-double v0, v10

    move-wide/from16 v16, v0

    move-wide/from16 v0, v16

    invoke-virtual {v5, v2, v3, v0, v1}, Lae/java/awt/geom/AffineTransform;->scale(DD)V

    .line 532
    invoke-virtual {v5}, Lae/java/awt/geom/AffineTransform;->getType()I

    move-result v11

    .line 533
    .local v11, "txFontType":I
    invoke-virtual {v5}, Lae/java/awt/geom/AffineTransform;->getTranslateX()D

    move-result-wide v2

    double-to-float v2, v2

    move-object/from16 v0, p1

    iput v2, v0, Lae/sun/java2d/loops/FontInfo;->originX:F

    .line 534
    invoke-virtual {v5}, Lae/java/awt/geom/AffineTransform;->getTranslateY()D

    move-result-wide v2

    double-to-float v2, v2

    move-object/from16 v0, p1

    iput v2, v0, Lae/sun/java2d/loops/FontInfo;->originY:F

    .line 535
    move-object/from16 v0, p1

    iget v2, v0, Lae/sun/java2d/loops/FontInfo;->originX:F

    neg-float v2, v2

    float-to-double v2, v2

    move-object/from16 v0, p1

    iget v0, v0, Lae/sun/java2d/loops/FontInfo;->originY:F

    move/from16 v16, v0

    move/from16 v0, v16

    neg-float v0, v0

    move/from16 v16, v0

    move/from16 v0, v16

    float-to-double v0, v0

    move-wide/from16 v16, v0

    move-wide/from16 v0, v16

    invoke-virtual {v5, v2, v3, v0, v1}, Lae/java/awt/geom/AffineTransform;->translate(DD)V

    .line 536
    move-object/from16 v0, p0

    iget v2, v0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v3, 0x3

    if-lt v2, v3, :cond_4

    .line 537
    move-object/from16 v0, p0

    iget-object v2, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    const/4 v3, 0x4

    new-array v3, v3, [D

    move-object/from16 v0, p1

    iput-object v3, v0, Lae/sun/java2d/loops/FontInfo;->devTx:[D

    invoke-virtual {v2, v3}, Lae/java/awt/geom/AffineTransform;->getMatrix([D)V

    .line 538
    new-instance v4, Lae/java/awt/geom/AffineTransform;

    move-object/from16 v0, p1

    iget-object v2, v0, Lae/sun/java2d/loops/FontInfo;->devTx:[D

    invoke-direct {v4, v2}, Lae/java/awt/geom/AffineTransform;-><init>([D)V

    .line 539
    .local v4, "devAt":Lae/java/awt/geom/AffineTransform;
    invoke-virtual {v5, v4}, Lae/java/awt/geom/AffineTransform;->preConcatenate(Lae/java/awt/geom/AffineTransform;)V

    .line 544
    :goto_0
    const/4 v2, 0x4

    new-array v2, v2, [D

    move-object/from16 v0, p1

    iput-object v2, v0, Lae/sun/java2d/loops/FontInfo;->glyphTx:[D

    invoke-virtual {v5, v2}, Lae/java/awt/geom/AffineTransform;->getMatrix([D)V

    .line 545
    invoke-virtual {v5}, Lae/java/awt/geom/AffineTransform;->getShearX()D

    move-result-wide v14

    .line 546
    .local v14, "shearx":D
    invoke-virtual {v5}, Lae/java/awt/geom/AffineTransform;->getScaleY()D

    move-result-wide v12

    .line 547
    .local v12, "scaley":D
    const-wide/16 v2, 0x0

    cmpl-double v2, v14, v2

    if-eqz v2, :cond_1

    .line 548
    mul-double v2, v14, v14

    mul-double v16, v12, v12

    add-double v2, v2, v16

    invoke-static {v2, v3}, Ljava/lang/Math;->sqrt(D)D

    move-result-wide v12

    .line 550
    :cond_1
    invoke-static {v12, v13}, Ljava/lang/Math;->abs(D)D

    move-result-wide v2

    const-wide/high16 v16, 0x3fe0000000000000L    # 0.5

    add-double v2, v2, v16

    double-to-int v2, v2

    move-object/from16 v0, p1

    iput v2, v0, Lae/sun/java2d/loops/FontInfo;->pixelHeight:I

    .line 596
    .end local v12    # "scaley":D
    .end local v14    # "shearx":D
    :goto_1
    invoke-static/range {p2 .. p2}, Lae/sun/font/FontManager;->getFont2D(Lae/java/awt/Font;)Lae/sun/font/Font2D;

    move-result-object v2

    move-object/from16 v0, p1

    iput-object v2, v0, Lae/sun/java2d/loops/FontInfo;->font2D:Lae/sun/font/Font2D;

    .line 598
    move-object/from16 v0, p0

    iget v7, v0, Lae/sun/java2d/SunGraphics2D;->fractionalMetricsHint:I

    .line 599
    .local v7, "fmhint":I
    if-nez v7, :cond_2

    .line 600
    const/4 v7, 0x1

    .line 602
    :cond_2
    const/4 v2, 0x0

    move-object/from16 v0, p1

    iput-boolean v2, v0, Lae/sun/java2d/loops/FontInfo;->lcdSubPixPos:Z

    .line 627
    if-nez p3, :cond_b

    .line 628
    move-object/from16 v0, p0

    iget v6, v0, Lae/sun/java2d/SunGraphics2D;->textAntialiasHint:I

    .line 632
    .local v6, "aahint":I
    :goto_2
    if-nez v6, :cond_d

    .line 633
    move-object/from16 v0, p0

    iget v2, v0, Lae/sun/java2d/SunGraphics2D;->antialiasHint:I

    const/4 v3, 0x2

    if-ne v2, v3, :cond_c

    .line 634
    const/4 v6, 0x2

    .line 700
    :cond_3
    :goto_3
    move-object/from16 v0, p1

    iput v6, v0, Lae/sun/java2d/loops/FontInfo;->aaHint:I

    .line 701
    move-object/from16 v0, p1

    iget-object v2, v0, Lae/sun/java2d/loops/FontInfo;->font2D:Lae/sun/font/Font2D;

    move-object/from16 v3, p2

    invoke-virtual/range {v2 .. v7}, Lae/sun/font/Font2D;->getStrike(Lae/java/awt/Font;Lae/java/awt/geom/AffineTransform;Lae/java/awt/geom/AffineTransform;II)Lae/sun/font/FontStrike;

    move-result-object v2

    move-object/from16 v0, p1

    iput-object v2, v0, Lae/sun/java2d/loops/FontInfo;->fontStrike:Lae/sun/font/FontStrike;

    .line 703
    return-object p1

    .line 541
    .end local v4    # "devAt":Lae/java/awt/geom/AffineTransform;
    .end local v6    # "aahint":I
    .end local v7    # "fmhint":I
    :cond_4
    sget-object v2, Lae/sun/java2d/SunGraphics2D;->IDENT_MATRIX:[D

    move-object/from16 v0, p1

    iput-object v2, v0, Lae/sun/java2d/loops/FontInfo;->devTx:[D

    .line 542
    sget-object v4, Lae/sun/java2d/SunGraphics2D;->IDENT_ATX:Lae/java/awt/geom/AffineTransform;

    .restart local v4    # "devAt":Lae/java/awt/geom/AffineTransform;
    goto :goto_0

    .line 552
    .end local v4    # "devAt":Lae/java/awt/geom/AffineTransform;
    .end local v11    # "txFontType":I
    :cond_5
    const/4 v11, 0x0

    .line 553
    .restart local v11    # "txFontType":I
    const/4 v2, 0x0

    move-object/from16 v0, p1

    iput v2, v0, Lae/sun/java2d/loops/FontInfo;->originY:F

    move-object/from16 v0, p1

    iput v2, v0, Lae/sun/java2d/loops/FontInfo;->originX:F

    .line 554
    move-object/from16 v0, p0

    iget v2, v0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v3, 0x3

    if-lt v2, v3, :cond_8

    .line 555
    move-object/from16 v0, p0

    iget-object v2, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    const/4 v3, 0x4

    new-array v3, v3, [D

    move-object/from16 v0, p1

    iput-object v3, v0, Lae/sun/java2d/loops/FontInfo;->devTx:[D

    invoke-virtual {v2, v3}, Lae/java/awt/geom/AffineTransform;->getMatrix([D)V

    .line 556
    new-instance v4, Lae/java/awt/geom/AffineTransform;

    move-object/from16 v0, p1

    iget-object v2, v0, Lae/sun/java2d/loops/FontInfo;->devTx:[D

    invoke-direct {v4, v2}, Lae/java/awt/geom/AffineTransform;-><init>([D)V

    .line 557
    .restart local v4    # "devAt":Lae/java/awt/geom/AffineTransform;
    const/4 v2, 0x4

    new-array v2, v2, [D

    move-object/from16 v0, p1

    iput-object v2, v0, Lae/sun/java2d/loops/FontInfo;->glyphTx:[D

    .line 558
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_4
    const/4 v2, 0x4

    if-lt v8, v2, :cond_7

    .line 561
    new-instance v5, Lae/java/awt/geom/AffineTransform;

    .end local v5    # "textAt":Lae/java/awt/geom/AffineTransform;
    move-object/from16 v0, p1

    iget-object v2, v0, Lae/sun/java2d/loops/FontInfo;->glyphTx:[D

    invoke-direct {v5, v2}, Lae/java/awt/geom/AffineTransform;-><init>([D)V

    .line 562
    .restart local v5    # "textAt":Lae/java/awt/geom/AffineTransform;
    move-object/from16 v0, p0

    iget-object v2, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v2}, Lae/java/awt/geom/AffineTransform;->getShearX()D

    move-result-wide v14

    .line 563
    .restart local v14    # "shearx":D
    move-object/from16 v0, p0

    iget-object v2, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v2}, Lae/java/awt/geom/AffineTransform;->getScaleY()D

    move-result-wide v12

    .line 564
    .restart local v12    # "scaley":D
    const-wide/16 v2, 0x0

    cmpl-double v2, v14, v2

    if-eqz v2, :cond_6

    .line 565
    mul-double v2, v14, v14

    mul-double v16, v12, v12

    add-double v2, v2, v16

    invoke-static {v2, v3}, Ljava/lang/Math;->sqrt(D)D

    move-result-wide v12

    .line 567
    :cond_6
    float-to-double v2, v10

    mul-double/2addr v2, v12

    invoke-static {v2, v3}, Ljava/lang/Math;->abs(D)D

    move-result-wide v2

    const-wide/high16 v16, 0x3fe0000000000000L    # 0.5

    add-double v2, v2, v16

    double-to-int v2, v2

    move-object/from16 v0, p1

    iput v2, v0, Lae/sun/java2d/loops/FontInfo;->pixelHeight:I

    goto/16 :goto_1

    .line 559
    .end local v12    # "scaley":D
    .end local v14    # "shearx":D
    :cond_7
    move-object/from16 v0, p1

    iget-object v2, v0, Lae/sun/java2d/loops/FontInfo;->glyphTx:[D

    move-object/from16 v0, p1

    iget-object v3, v0, Lae/sun/java2d/loops/FontInfo;->devTx:[D

    aget-wide v16, v3, v8

    float-to-double v0, v10

    move-wide/from16 v18, v0

    mul-double v16, v16, v18

    aput-wide v16, v2, v8

    .line 558
    add-int/lit8 v8, v8, 0x1

    goto :goto_4

    .line 577
    .end local v4    # "devAt":Lae/java/awt/geom/AffineTransform;
    .end local v8    # "i":I
    :cond_8
    float-to-int v9, v10

    .line 578
    .local v9, "pszInt":I
    int-to-float v2, v9

    cmpl-float v2, v10, v2

    if-nez v2, :cond_a

    .line 579
    const/16 v2, 0x8

    if-lt v9, v2, :cond_a

    const/16 v2, 0x11

    if-ge v9, v2, :cond_a

    .line 580
    sget-object v2, Lae/sun/java2d/SunGraphics2D;->textTxArr:[[D

    aget-object v2, v2, v9

    move-object/from16 v0, p1

    iput-object v2, v0, Lae/sun/java2d/loops/FontInfo;->glyphTx:[D

    .line 581
    sget-object v2, Lae/sun/java2d/SunGraphics2D;->textAtArr:[Lae/java/awt/geom/AffineTransform;

    aget-object v5, v2, v9

    .line 582
    move-object/from16 v0, p1

    iput v9, v0, Lae/sun/java2d/loops/FontInfo;->pixelHeight:I

    .line 586
    :goto_5
    if-nez v5, :cond_9

    .line 587
    const/4 v2, 0x4

    new-array v2, v2, [D

    const/4 v3, 0x0

    float-to-double v0, v10

    move-wide/from16 v16, v0

    aput-wide v16, v2, v3

    const/4 v3, 0x1

    const-wide/16 v16, 0x0

    aput-wide v16, v2, v3

    const/4 v3, 0x2

    const-wide/16 v16, 0x0

    aput-wide v16, v2, v3

    const/4 v3, 0x3

    float-to-double v0, v10

    move-wide/from16 v16, v0

    aput-wide v16, v2, v3

    move-object/from16 v0, p1

    iput-object v2, v0, Lae/sun/java2d/loops/FontInfo;->glyphTx:[D

    .line 588
    new-instance v5, Lae/java/awt/geom/AffineTransform;

    .end local v5    # "textAt":Lae/java/awt/geom/AffineTransform;
    move-object/from16 v0, p1

    iget-object v2, v0, Lae/sun/java2d/loops/FontInfo;->glyphTx:[D

    invoke-direct {v5, v2}, Lae/java/awt/geom/AffineTransform;-><init>([D)V

    .line 591
    .restart local v5    # "textAt":Lae/java/awt/geom/AffineTransform;
    :cond_9
    sget-object v2, Lae/sun/java2d/SunGraphics2D;->IDENT_MATRIX:[D

    move-object/from16 v0, p1

    iput-object v2, v0, Lae/sun/java2d/loops/FontInfo;->devTx:[D

    .line 592
    sget-object v4, Lae/sun/java2d/SunGraphics2D;->IDENT_ATX:Lae/java/awt/geom/AffineTransform;

    .restart local v4    # "devAt":Lae/java/awt/geom/AffineTransform;
    goto/16 :goto_1

    .line 584
    .end local v4    # "devAt":Lae/java/awt/geom/AffineTransform;
    :cond_a
    float-to-double v2, v10

    const-wide/high16 v16, 0x3fe0000000000000L    # 0.5

    add-double v2, v2, v16

    double-to-int v2, v2

    move-object/from16 v0, p1

    iput v2, v0, Lae/sun/java2d/loops/FontInfo;->pixelHeight:I

    goto :goto_5

    .line 630
    .end local v9    # "pszInt":I
    .restart local v4    # "devAt":Lae/java/awt/geom/AffineTransform;
    .restart local v7    # "fmhint":I
    :cond_b
    invoke-virtual/range {p3 .. p3}, Lae/java/awt/font/FontRenderContext;->getAntiAliasingHint()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lae/sun/awt/SunHints$Value;

    invoke-virtual {v2}, Lae/sun/awt/SunHints$Value;->getIndex()I

    move-result v6

    .restart local v6    # "aahint":I
    goto/16 :goto_2

    .line 636
    :cond_c
    const/4 v6, 0x1

    .line 638
    goto/16 :goto_3

    .line 645
    :cond_d
    const/4 v2, 0x3

    if-ne v6, v2, :cond_f

    .line 646
    move-object/from16 v0, p1

    iget-object v2, v0, Lae/sun/java2d/loops/FontInfo;->font2D:Lae/sun/font/Font2D;

    move-object/from16 v0, p1

    iget v3, v0, Lae/sun/java2d/loops/FontInfo;->pixelHeight:I

    invoke-virtual {v2, v3}, Lae/sun/font/Font2D;->useAAForPtSize(I)Z

    move-result v2

    if-eqz v2, :cond_e

    .line 647
    const/4 v6, 0x2

    .line 648
    goto/16 :goto_3

    .line 649
    :cond_e
    const/4 v6, 0x1

    .line 651
    goto/16 :goto_3

    :cond_f
    const/4 v2, 0x4

    if-lt v6, v2, :cond_3

    .line 668
    move-object/from16 v0, p0

    iget-object v2, v0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    move-object/from16 v0, p0

    invoke-virtual {v2, v0}, Lae/sun/java2d/SurfaceData;->canRenderLCDText(Lae/sun/java2d/SunGraphics2D;)Z

    move-result v2

    if-nez v2, :cond_10

    .line 673
    const/4 v6, 0x2

    .line 674
    goto/16 :goto_3

    .line 675
    :cond_10
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput-boolean v2, v0, Lae/sun/java2d/loops/FontInfo;->lcdRGBOrder:Z

    .line 683
    const/4 v2, 0x5

    if-ne v6, v2, :cond_12

    .line 684
    const/4 v6, 0x4

    .line 685
    const/4 v2, 0x0

    move-object/from16 v0, p1

    iput-boolean v2, v0, Lae/sun/java2d/loops/FontInfo;->lcdRGBOrder:Z

    .line 695
    :cond_11
    :goto_6
    const/4 v2, 0x2

    if-ne v7, v2, :cond_13

    .line 696
    const/4 v2, 0x4

    if-ne v6, v2, :cond_13

    const/4 v2, 0x1

    .line 694
    :goto_7
    move-object/from16 v0, p1

    iput-boolean v2, v0, Lae/sun/java2d/loops/FontInfo;->lcdSubPixPos:Z

    goto/16 :goto_3

    .line 687
    :cond_12
    const/4 v2, 0x7

    if-ne v6, v2, :cond_11

    .line 688
    const/4 v6, 0x6

    .line 689
    const/4 v2, 0x0

    move-object/from16 v0, p1

    iput-boolean v2, v0, Lae/sun/java2d/loops/FontInfo;->lcdRGBOrder:Z

    goto :goto_6

    .line 696
    :cond_13
    const/4 v2, 0x0

    goto :goto_7
.end method

.method public clearRect(IIII)V
    .locals 3
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I

    .prologue
    .line 2356
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->composite:Lae/java/awt/Composite;

    .line 2357
    .local v0, "c":Lae/java/awt/Composite;
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->paint:Lae/java/awt/Paint;

    .line 2358
    .local v1, "p":Lae/java/awt/Paint;
    sget-object v2, Lae/java/awt/AlphaComposite;->Src:Lae/java/awt/AlphaComposite;

    invoke-virtual {p0, v2}, Lae/sun/java2d/SunGraphics2D;->setComposite(Lae/java/awt/Composite;)V

    .line 2359
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getBackground()Lae/java/awt/Color;

    move-result-object v2

    invoke-virtual {p0, v2}, Lae/sun/java2d/SunGraphics2D;->setColor(Lae/java/awt/Color;)V

    .line 2360
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->validatePipe()V

    .line 2361
    invoke-virtual {p0, p1, p2, p3, p4}, Lae/sun/java2d/SunGraphics2D;->fillRect(IIII)V

    .line 2362
    invoke-virtual {p0, v1}, Lae/sun/java2d/SunGraphics2D;->setPaint(Lae/java/awt/Paint;)V

    .line 2363
    invoke-virtual {p0, v0}, Lae/sun/java2d/SunGraphics2D;->setComposite(Lae/java/awt/Composite;)V

    .line 2364
    return-void
.end method

.method public clip(Lae/java/awt/Shape;)V
    .locals 2
    .param p1, "s"    # Lae/java/awt/Shape;

    .prologue
    const/4 v1, 0x1

    .line 1964
    invoke-virtual {p0, p1}, Lae/sun/java2d/SunGraphics2D;->transformShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object p1

    .line 1965
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    if-eqz v0, :cond_0

    .line 1966
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    invoke-virtual {p0, v0, p1, v1, v1}, Lae/sun/java2d/SunGraphics2D;->intersectShapes(Lae/java/awt/Shape;Lae/java/awt/Shape;ZZ)Lae/java/awt/Shape;

    move-result-object p1

    .line 1968
    :cond_0
    iput-object p1, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    .line 1969
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->validateCompClip()V

    .line 1970
    return-void
.end method

.method public clipRect(IIII)V
    .locals 1
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I

    .prologue
    .line 1939
    new-instance v0, Lae/java/awt/Rectangle;

    invoke-direct {v0, p1, p2, p3, p4}, Lae/java/awt/Rectangle;-><init>(IIII)V

    invoke-virtual {p0, v0}, Lae/sun/java2d/SunGraphics2D;->clip(Lae/java/awt/Shape;)V

    .line 1940
    return-void
.end method

.method protected clone()Ljava/lang/Object;
    .locals 4

    .prologue
    const/4 v2, 0x0

    .line 267
    :try_start_0
    invoke-super {p0}, Ljava/lang/Object;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lae/sun/java2d/SunGraphics2D;

    .line 268
    .local v0, "g":Lae/sun/java2d/SunGraphics2D;
    new-instance v1, Lae/java/awt/geom/AffineTransform;

    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-direct {v1, v3}, Lae/java/awt/geom/AffineTransform;-><init>(Lae/java/awt/geom/AffineTransform;)V

    iput-object v1, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    .line 269
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    if-eqz v1, :cond_0

    .line 270
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    invoke-virtual {v1}, Lae/java/awt/RenderingHints;->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/java/awt/RenderingHints;

    iput-object v1, v0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    .line 278
    :cond_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->fontInfo:Lae/sun/java2d/loops/FontInfo;

    if-eqz v1, :cond_1

    .line 279
    iget-boolean v1, p0, Lae/sun/java2d/SunGraphics2D;->validFontInfo:Z

    if-eqz v1, :cond_3

    .line 280
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->fontInfo:Lae/sun/java2d/loops/FontInfo;

    invoke-virtual {v1}, Lae/sun/java2d/loops/FontInfo;->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/sun/java2d/loops/FontInfo;

    iput-object v1, v0, Lae/sun/java2d/SunGraphics2D;->fontInfo:Lae/sun/java2d/loops/FontInfo;

    .line 285
    :cond_1
    :goto_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFontInfo:Lae/sun/java2d/loops/FontInfo;

    if-eqz v1, :cond_2

    .line 287
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFontInfo:Lae/sun/java2d/loops/FontInfo;

    invoke-virtual {v1}, Lae/sun/java2d/loops/FontInfo;->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/sun/java2d/loops/FontInfo;

    .line 286
    iput-object v1, v0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFontInfo:Lae/sun/java2d/loops/FontInfo;

    .line 288
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFRC:Lae/java/awt/font/FontRenderContext;

    iput-object v1, v0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFRC:Lae/java/awt/font/FontRenderContext;

    .line 294
    .end local v0    # "g":Lae/sun/java2d/SunGraphics2D;
    :cond_2
    :goto_1
    return-object v0

    .line 282
    .restart local v0    # "g":Lae/sun/java2d/SunGraphics2D;
    :cond_3
    const/4 v1, 0x0

    iput-object v1, v0, Lae/sun/java2d/SunGraphics2D;->fontInfo:Lae/sun/java2d/loops/FontInfo;
    :try_end_0
    .catch Ljava/lang/CloneNotSupportedException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 292
    .end local v0    # "g":Lae/sun/java2d/SunGraphics2D;
    :catch_0
    move-exception v1

    move-object v0, v2

    .line 294
    goto :goto_1
.end method

.method public cloneTransform()Lae/java/awt/geom/AffineTransform;
    .locals 2

    .prologue
    .line 1604
    new-instance v0, Lae/java/awt/geom/AffineTransform;

    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-direct {v0, v1}, Lae/java/awt/geom/AffineTransform;-><init>(Lae/java/awt/geom/AffineTransform;)V

    return-object v0
.end method

.method public constrain(IIII)V
    .locals 4
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I

    .prologue
    const/4 v3, 0x0

    .line 331
    or-int v1, p1, p2

    if-eqz v1, :cond_0

    .line 332
    invoke-virtual {p0, p1, p2}, Lae/sun/java2d/SunGraphics2D;->translate(II)V

    .line 334
    :cond_0
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v2, 0x3

    if-lt v1, v2, :cond_2

    .line 335
    invoke-virtual {p0, v3, v3, p3, p4}, Lae/sun/java2d/SunGraphics2D;->clipRect(IIII)V

    .line 357
    :cond_1
    :goto_0
    return-void

    .line 338
    :cond_2
    iget p1, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    .end local p1    # "x":I
    iput p1, p0, Lae/sun/java2d/SunGraphics2D;->constrainX:I

    .line 339
    .restart local p1    # "x":I
    iget p2, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    .end local p2    # "y":I
    iput p2, p0, Lae/sun/java2d/SunGraphics2D;->constrainY:I

    .line 340
    .restart local p2    # "y":I
    invoke-static {p1, p3}, Lae/sun/java2d/pipe/Region;->dimAdd(II)I

    move-result p3

    .line 341
    invoke-static {p2, p4}, Lae/sun/java2d/pipe/Region;->dimAdd(II)I

    move-result p4

    .line 342
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->constrainClip:Lae/sun/java2d/pipe/Region;

    .line 343
    .local v0, "c":Lae/sun/java2d/pipe/Region;
    if-nez v0, :cond_4

    .line 344
    invoke-static {p1, p2, p3, p4}, Lae/sun/java2d/pipe/Region;->getInstanceXYXY(IIII)Lae/sun/java2d/pipe/Region;

    move-result-object v0

    .line 352
    :cond_3
    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->constrainClip:Lae/sun/java2d/pipe/Region;

    .line 353
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->devClip:Lae/sun/java2d/pipe/Region;

    invoke-virtual {v1, v0}, Lae/sun/java2d/pipe/Region;->isInsideQuickCheck(Lae/sun/java2d/pipe/Region;)Z

    move-result v1

    if-nez v1, :cond_1

    .line 354
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->devClip:Lae/sun/java2d/pipe/Region;

    invoke-virtual {v1, v0}, Lae/sun/java2d/pipe/Region;->getIntersection(Lae/sun/java2d/pipe/Region;)Lae/sun/java2d/pipe/Region;

    move-result-object v1

    iput-object v1, p0, Lae/sun/java2d/SunGraphics2D;->devClip:Lae/sun/java2d/pipe/Region;

    .line 355
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->validateCompClip()V

    goto :goto_0

    .line 346
    :cond_4
    invoke-virtual {v0, p1, p2, p3, p4}, Lae/sun/java2d/pipe/Region;->getIntersectionXYXY(IIII)Lae/sun/java2d/pipe/Region;

    move-result-object v0

    .line 347
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->constrainClip:Lae/sun/java2d/pipe/Region;

    if-ne v0, v1, :cond_3

    goto :goto_0
.end method

.method public copyArea(IIIIII)V
    .locals 3
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I
    .param p5, "dx"    # I
    .param p6, "dy"    # I

    .prologue
    .line 1988
    :try_start_0
    invoke-direct/range {p0 .. p6}, Lae/sun/java2d/SunGraphics2D;->doCopyArea(IIIIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 1999
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2001
    :goto_0
    return-void

    .line 1989
    :catch_0
    move-exception v0

    .line 1990
    .local v0, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1992
    :try_start_2
    invoke-direct/range {p0 .. p6}, Lae/sun/java2d/SunGraphics2D;->doCopyArea(IIIIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 1999
    :goto_1
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 1998
    .end local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v1

    .line 1999
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2000
    throw v1

    .line 1993
    .restart local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v1

    goto :goto_1
.end method

.method public copyImage(Lae/java/awt/Image;IIIIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    .locals 13
    .param p1, "img"    # Lae/java/awt/Image;
    .param p2, "dx"    # I
    .param p3, "dy"    # I
    .param p4, "sx"    # I
    .param p5, "sy"    # I
    .param p6, "width"    # I
    .param p7, "height"    # I
    .param p8, "bgcolor"    # Lae/java/awt/Color;
    .param p9, "observer"    # Lae/java/awt/image/ImageObserver;

    .prologue
    .line 2987
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p7

    move-object/from16 v9, p8

    move-object/from16 v10, p9

    invoke-interface/range {v0 .. v10}, Lae/sun/java2d/pipe/DrawImagePipe;->copyImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Image;IIIIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    .line 3001
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2998
    :goto_0
    return v0

    .line 2989
    :catch_0
    move-exception v11

    .line 2990
    .local v11, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2992
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p7

    move-object/from16 v9, p8

    move-object/from16 v10, p9

    invoke-interface/range {v0 .. v10}, Lae/sun/java2d/pipe/DrawImagePipe;->copyImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Image;IIIIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v0

    .line 3001
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2994
    :catch_1
    move-exception v12

    .line 3001
    .local v12, "e2":Lae/sun/java2d/InvalidPipeException;
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2998
    const/4 v0, 0x0

    goto :goto_0

    .line 3000
    .end local v11    # "e":Lae/sun/java2d/InvalidPipeException;
    .end local v12    # "e2":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 3001
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 3002
    throw v0
.end method

.method public create()Lae/java/awt/Graphics;
    .locals 1

    .prologue
    .line 301
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lae/java/awt/Graphics;

    return-object v0
.end method

.method public dispose()V
    .locals 1

    .prologue
    .line 3272
    sget-object v0, Lae/sun/java2d/NullSurfaceData;->theInstance:Lae/sun/java2d/SurfaceData;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    .line 3273
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidatePipe()V

    .line 3274
    return-void
.end method

.method public draw(Lae/java/awt/Shape;)V
    .locals 3
    .param p1, "s"    # Lae/java/awt/Shape;

    .prologue
    .line 2382
    :try_start_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    invoke-interface {v1, p0, p1}, Lae/sun/java2d/pipe/ShapeDrawPipe;->draw(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2393
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2395
    :goto_0
    return-void

    .line 2383
    :catch_0
    move-exception v0

    .line 2384
    .local v0, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2386
    :try_start_2
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    invoke-interface {v1, p0, p1}, Lae/sun/java2d/pipe/ShapeDrawPipe;->draw(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2393
    :goto_1
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2392
    .end local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v1

    .line 2393
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2394
    throw v1

    .line 2387
    .restart local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v1

    goto :goto_1
.end method

.method public drawArc(IIIIII)V
    .locals 9
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I
    .param p5, "startAngl"    # I
    .param p6, "arcAngl"    # I

    .prologue
    .line 2206
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move v6, p5

    move v7, p6

    invoke-interface/range {v0 .. v7}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawArc(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2217
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2219
    :goto_0
    return-void

    .line 2207
    :catch_0
    move-exception v8

    .line 2208
    .local v8, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2210
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move v6, p5

    move v7, p6

    invoke-interface/range {v0 .. v7}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawArc(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2217
    :goto_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2216
    .end local v8    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 2217
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2218
    throw v0

    .line 2211
    .restart local v8    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public drawBytes([BIIII)V
    .locals 10
    .param p1, "data"    # [B
    .param p2, "offset"    # I
    .param p3, "length"    # I
    .param p4, "x"    # I
    .param p5, "y"    # I

    .prologue
    .line 2930
    if-nez p1, :cond_0

    .line 2931
    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "byte data is null"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 2933
    :cond_0
    if-ltz p2, :cond_1

    if-ltz p3, :cond_1

    add-int v0, p2, p3

    array-length v1, p1

    if-le v0, v1, :cond_2

    .line 2934
    :cond_1
    new-instance v0, Ljava/lang/ArrayIndexOutOfBoundsException;

    const-string v1, "bad offset/length"

    invoke-direct {v0, v1}, Ljava/lang/ArrayIndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 2937
    :cond_2
    new-array v2, p3, [C

    .line 2938
    .local v2, "chData":[C
    move v8, p3

    .local v8, "i":I
    move v9, v8

    .end local v8    # "i":I
    .local v9, "i":I
    :goto_0
    add-int/lit8 v8, v9, -0x1

    .end local v9    # "i":I
    .restart local v8    # "i":I
    if-gtz v9, :cond_3

    .line 2941
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    invoke-virtual {v0}, Lae/java/awt/Font;->hasLayoutAttributes()Z

    move-result v0

    if-eqz v0, :cond_5

    .line 2942
    array-length v0, p1

    if-nez v0, :cond_4

    .line 2964
    :goto_1
    return-void

    .line 2939
    :cond_3
    add-int v0, v8, p2

    aget-byte v0, p1, v0

    and-int/lit16 v0, v0, 0xff

    int-to-char v0, v0

    aput-char v0, v2, v8

    move v9, v8

    .end local v8    # "i":I
    .restart local v9    # "i":I
    goto :goto_0

    .line 2945
    .end local v9    # "i":I
    .restart local v8    # "i":I
    :cond_4
    new-instance v0, Lae/java/awt/font/TextLayout;

    new-instance v1, Ljava/lang/String;

    invoke-direct {v1, v2}, Ljava/lang/String;-><init>([C)V

    .line 2946
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getFontRenderContext()Lae/java/awt/font/FontRenderContext;

    move-result-object v4

    .line 2945
    invoke-direct {v0, v1, v3, v4}, Lae/java/awt/font/TextLayout;-><init>(Ljava/lang/String;Lae/java/awt/Font;Lae/java/awt/font/FontRenderContext;)V

    .line 2946
    int-to-float v1, p4

    int-to-float v3, p5

    invoke-virtual {v0, p0, v1, v3}, Lae/java/awt/font/TextLayout;->draw(Lae/java/awt/Graphics2D;FF)V

    goto :goto_1

    .line 2951
    :cond_5
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    const/4 v3, 0x0

    move-object v1, p0

    move v4, p3

    move v5, p4

    move v6, p5

    invoke-interface/range {v0 .. v6}, Lae/sun/java2d/pipe/TextPipe;->drawChars(Lae/sun/java2d/SunGraphics2D;[CIIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2962
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_1

    .line 2952
    :catch_0
    move-exception v7

    .line 2953
    .local v7, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2955
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    const/4 v3, 0x0

    move-object v1, p0

    move v4, p3

    move v5, p4

    move v6, p5

    invoke-interface/range {v0 .. v6}, Lae/sun/java2d/pipe/TextPipe;->drawChars(Lae/sun/java2d/SunGraphics2D;[CIIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2962
    :goto_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_1

    .line 2961
    .end local v7    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 2962
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2963
    throw v0

    .line 2956
    .restart local v7    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_2
.end method

.method public drawChars([CIIII)V
    .locals 8
    .param p1, "data"    # [C
    .param p2, "offset"    # I
    .param p3, "length"    # I
    .param p4, "x"    # I
    .param p5, "y"    # I

    .prologue
    .line 2898
    if-nez p1, :cond_0

    .line 2899
    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "char data is null"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 2901
    :cond_0
    if-ltz p2, :cond_1

    if-ltz p3, :cond_1

    add-int v0, p2, p3

    array-length v1, p1

    if-le v0, v1, :cond_2

    .line 2902
    :cond_1
    new-instance v0, Ljava/lang/ArrayIndexOutOfBoundsException;

    const-string v1, "bad offset/length"

    invoke-direct {v0, v1}, Ljava/lang/ArrayIndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 2904
    :cond_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    invoke-virtual {v0}, Lae/java/awt/Font;->hasLayoutAttributes()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 2905
    array-length v0, p1

    if-nez v0, :cond_3

    .line 2927
    :goto_0
    return-void

    .line 2908
    :cond_3
    new-instance v0, Lae/java/awt/font/TextLayout;

    new-instance v1, Ljava/lang/String;

    invoke-direct {v1, p1, p2, p3}, Ljava/lang/String;-><init>([CII)V

    .line 2909
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getFontRenderContext()Lae/java/awt/font/FontRenderContext;

    move-result-object v3

    .line 2908
    invoke-direct {v0, v1, v2, v3}, Lae/java/awt/font/TextLayout;-><init>(Ljava/lang/String;Lae/java/awt/Font;Lae/java/awt/font/FontRenderContext;)V

    .line 2909
    int-to-float v1, p4

    int-to-float v2, p5

    invoke-virtual {v0, p0, v1, v2}, Lae/java/awt/font/TextLayout;->draw(Lae/java/awt/Graphics2D;FF)V

    goto :goto_0

    .line 2914
    :cond_4
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move v6, p5

    invoke-interface/range {v0 .. v6}, Lae/sun/java2d/pipe/TextPipe;->drawChars(Lae/sun/java2d/SunGraphics2D;[CIIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2925
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2915
    :catch_0
    move-exception v7

    .line 2916
    .local v7, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2918
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move v6, p5

    invoke-interface/range {v0 .. v6}, Lae/sun/java2d/pipe/TextPipe;->drawChars(Lae/sun/java2d/SunGraphics2D;[CIIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2925
    :goto_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2924
    .end local v7    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 2925
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2926
    throw v0

    .line 2919
    .restart local v7    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public drawGlyphVector(Lae/java/awt/font/GlyphVector;FF)V
    .locals 3
    .param p1, "gv"    # Lae/java/awt/font/GlyphVector;
    .param p2, "x"    # F
    .param p3, "y"    # F

    .prologue
    .line 2876
    if-nez p1, :cond_0

    .line 2877
    new-instance v1, Ljava/lang/NullPointerException;

    const-string v2, "GlyphVector is null"

    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 2881
    :cond_0
    :try_start_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    invoke-interface {v1, p0, p1, p2, p3}, Lae/sun/java2d/pipe/TextPipe;->drawGlyphVector(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/font/GlyphVector;FF)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2892
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2894
    :goto_0
    return-void

    .line 2882
    :catch_0
    move-exception v0

    .line 2883
    .local v0, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2885
    :try_start_2
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    invoke-interface {v1, p0, p1, p2, p3}, Lae/sun/java2d/pipe/TextPipe;->drawGlyphVector(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/font/GlyphVector;FF)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2892
    :goto_1
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2891
    .end local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v1

    .line 2892
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2893
    throw v1

    .line 2886
    .restart local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v1

    goto :goto_1
.end method

.method public drawImage(Lae/java/awt/image/BufferedImage;Lae/java/awt/image/BufferedImageOp;II)V
    .locals 7
    .param p1, "bImg"    # Lae/java/awt/image/BufferedImage;
    .param p2, "op"    # Lae/java/awt/image/BufferedImageOp;
    .param p3, "x"    # I
    .param p4, "y"    # I

    .prologue
    .line 3208
    if-nez p1, :cond_0

    .line 3226
    :goto_0
    return-void

    .line 3213
    :cond_0
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/DrawImagePipe;->transformImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/image/BufferedImage;Lae/java/awt/image/BufferedImageOp;II)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 3224
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 3214
    :catch_0
    move-exception v6

    .line 3215
    .local v6, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3217
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/DrawImagePipe;->transformImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/image/BufferedImage;Lae/java/awt/image/BufferedImageOp;II)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 3224
    :goto_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 3223
    .end local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 3224
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 3225
    throw v0

    .line 3218
    .restart local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public drawImage(Lae/java/awt/Image;IIIIIIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    .locals 25
    .param p1, "img"    # Lae/java/awt/Image;
    .param p2, "dx1"    # I
    .param p3, "dy1"    # I
    .param p4, "dx2"    # I
    .param p5, "dy2"    # I
    .param p6, "sx1"    # I
    .param p7, "sy1"    # I
    .param p8, "sx2"    # I
    .param p9, "sy2"    # I
    .param p10, "bgcolor"    # Lae/java/awt/Color;
    .param p11, "observer"    # Lae/java/awt/image/ImageObserver;

    .prologue
    .line 3098
    if-nez p1, :cond_0

    .line 3099
    const/4 v2, 0x1

    .line 3149
    :goto_0
    return v2

    .line 3102
    :cond_0
    move/from16 v0, p2

    move/from16 v1, p4

    if-eq v0, v1, :cond_1

    move/from16 v0, p3

    move/from16 v1, p5

    if-eq v0, v1, :cond_1

    .line 3103
    move/from16 v0, p6

    move/from16 v1, p8

    if-eq v0, v1, :cond_1

    move/from16 v0, p7

    move/from16 v1, p9

    if-ne v0, v1, :cond_2

    .line 3105
    :cond_1
    const/4 v2, 0x1

    goto :goto_0

    .line 3108
    :cond_2
    sub-int v2, p8, p6

    sub-int v3, p4, p2

    if-ne v2, v3, :cond_5

    .line 3109
    sub-int v2, p9, p7

    sub-int v3, p5, p3

    if-ne v2, v3, :cond_5

    .line 3113
    move/from16 v0, p8

    move/from16 v1, p6

    if-le v0, v1, :cond_3

    .line 3114
    sub-int v8, p8, p6

    .line 3115
    .local v8, "width":I
    move/from16 v6, p6

    .line 3116
    .local v6, "srcX":I
    move/from16 v4, p2

    .line 3122
    .local v4, "dstX":I
    :goto_1
    move/from16 v0, p9

    move/from16 v1, p7

    if-le v0, v1, :cond_4

    .line 3123
    sub-int v9, p9, p7

    .line 3124
    .local v9, "height":I
    move/from16 v7, p7

    .line 3125
    .local v7, "srcY":I
    move/from16 v5, p3

    .local v5, "dstY":I
    :goto_2
    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v10, p10

    move-object/from16 v11, p11

    .line 3131
    invoke-virtual/range {v2 .. v11}, Lae/sun/java2d/SunGraphics2D;->copyImage(Lae/java/awt/Image;IIIIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z

    move-result v2

    goto :goto_0

    .line 3118
    .end local v4    # "dstX":I
    .end local v5    # "dstY":I
    .end local v6    # "srcX":I
    .end local v7    # "srcY":I
    .end local v8    # "width":I
    .end local v9    # "height":I
    :cond_3
    sub-int v8, p6, p8

    .line 3119
    .restart local v8    # "width":I
    move/from16 v6, p8

    .line 3120
    .restart local v6    # "srcX":I
    move/from16 v4, p4

    .restart local v4    # "dstX":I
    goto :goto_1

    .line 3127
    :cond_4
    sub-int v9, p7, p9

    .line 3128
    .restart local v9    # "height":I
    move/from16 v7, p9

    .line 3129
    .restart local v7    # "srcY":I
    move/from16 v5, p5

    .restart local v5    # "dstY":I
    goto :goto_2

    .line 3136
    .end local v4    # "dstX":I
    .end local v5    # "dstY":I
    .end local v6    # "srcX":I
    .end local v7    # "srcY":I
    .end local v8    # "width":I
    .end local v9    # "height":I
    :cond_5
    :try_start_0
    move-object/from16 v0, p0

    iget-object v10, v0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    move-object/from16 v11, p0

    move-object/from16 v12, p1

    move/from16 v13, p2

    move/from16 v14, p3

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p6

    move/from16 v18, p7

    move/from16 v19, p8

    move/from16 v20, p9

    move-object/from16 v21, p10

    move-object/from16 v22, p11

    invoke-interface/range {v10 .. v22}, Lae/sun/java2d/pipe/DrawImagePipe;->scaleImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Image;IIIIIIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v2

    .line 3152
    move-object/from16 v0, p0

    iget-object v3, v0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v3}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto/16 :goto_0

    .line 3139
    :catch_0
    move-exception v23

    .line 3140
    .local v23, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct/range {p0 .. p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3142
    :try_start_2
    move-object/from16 v0, p0

    iget-object v10, v0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    move-object/from16 v11, p0

    move-object/from16 v12, p1

    move/from16 v13, p2

    move/from16 v14, p3

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p6

    move/from16 v18, p7

    move/from16 v19, p8

    move/from16 v20, p9

    move-object/from16 v21, p10

    move-object/from16 v22, p11

    invoke-interface/range {v10 .. v22}, Lae/sun/java2d/pipe/DrawImagePipe;->scaleImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Image;IIIIIIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v2

    .line 3152
    move-object/from16 v0, p0

    iget-object v3, v0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v3}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto/16 :goto_0

    .line 3145
    :catch_1
    move-exception v24

    .line 3152
    .local v24, "e2":Lae/sun/java2d/InvalidPipeException;
    move-object/from16 v0, p0

    iget-object v2, v0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 3149
    const/4 v2, 0x0

    goto/16 :goto_0

    .line 3151
    .end local v23    # "e":Lae/sun/java2d/InvalidPipeException;
    .end local v24    # "e2":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v2

    .line 3152
    move-object/from16 v0, p0

    iget-object v3, v0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v3}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 3153
    throw v2
.end method

.method public drawImage(Lae/java/awt/Image;IIIIIIIILae/java/awt/image/ImageObserver;)Z
    .locals 12
    .param p1, "img"    # Lae/java/awt/Image;
    .param p2, "dx1"    # I
    .param p3, "dy1"    # I
    .param p4, "dx2"    # I
    .param p5, "dy2"    # I
    .param p6, "sx1"    # I
    .param p7, "sy1"    # I
    .param p8, "sx2"    # I
    .param p9, "sy2"    # I
    .param p10, "observer"    # Lae/java/awt/image/ImageObserver;

    .prologue
    .line 3085
    const/4 v10, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move/from16 v4, p4

    move/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v9, p9

    move-object/from16 v11, p10

    invoke-virtual/range {v0 .. v11}, Lae/sun/java2d/SunGraphics2D;->drawImage(Lae/java/awt/Image;IIIIIIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z

    move-result v0

    return v0
.end method

.method public drawImage(Lae/java/awt/Image;IIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    .locals 13
    .param p1, "img"    # Lae/java/awt/Image;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "bg"    # Lae/java/awt/Color;
    .param p7, "observer"    # Lae/java/awt/image/ImageObserver;

    .prologue
    .line 3012
    if-nez p1, :cond_0

    .line 3013
    const/4 v1, 0x1

    .line 3035
    :goto_0
    return v1

    .line 3016
    :cond_0
    if-eqz p4, :cond_1

    if-nez p5, :cond_2

    .line 3017
    :cond_1
    const/4 v1, 0x1

    goto :goto_0

    .line 3019
    :cond_2
    const/4 v1, 0x0

    invoke-virtual {p1, v1}, Lae/java/awt/Image;->getWidth(Lae/java/awt/image/ImageObserver;)I

    move-result v1

    move/from16 v0, p4

    if-ne v0, v1, :cond_3

    const/4 v1, 0x0

    invoke-virtual {p1, v1}, Lae/java/awt/Image;->getHeight(Lae/java/awt/image/ImageObserver;)I

    move-result v1

    move/from16 v0, p5

    if-ne v0, v1, :cond_3

    .line 3020
    const/4 v5, 0x0

    const/4 v6, 0x0

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move/from16 v4, p3

    move/from16 v7, p4

    move/from16 v8, p5

    move-object/from16 v9, p6

    move-object/from16 v10, p7

    invoke-virtual/range {v1 .. v10}, Lae/sun/java2d/SunGraphics2D;->copyImage(Lae/java/awt/Image;IIIIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z

    move-result v1

    goto :goto_0

    .line 3024
    :cond_3
    :try_start_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move/from16 v5, p3

    move/from16 v6, p4

    move/from16 v7, p5

    move-object/from16 v8, p6

    move-object/from16 v9, p7

    invoke-interface/range {v1 .. v9}, Lae/sun/java2d/pipe/DrawImagePipe;->scaleImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Image;IIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v1

    .line 3038
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 3026
    :catch_0
    move-exception v11

    .line 3027
    .local v11, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3029
    :try_start_2
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move/from16 v5, p3

    move/from16 v6, p4

    move/from16 v7, p5

    move-object/from16 v8, p6

    move-object/from16 v9, p7

    invoke-interface/range {v1 .. v9}, Lae/sun/java2d/pipe/DrawImagePipe;->scaleImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Image;IIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v1

    .line 3038
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 3031
    :catch_1
    move-exception v12

    .line 3038
    .local v12, "e2":Lae/sun/java2d/InvalidPipeException;
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 3035
    const/4 v1, 0x0

    goto :goto_0

    .line 3037
    .end local v11    # "e":Lae/sun/java2d/InvalidPipeException;
    .end local v12    # "e2":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v1

    .line 3038
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 3039
    throw v1
.end method

.method public drawImage(Lae/java/awt/Image;IIIILae/java/awt/image/ImageObserver;)Z
    .locals 8
    .param p1, "img"    # Lae/java/awt/Image;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "observer"    # Lae/java/awt/image/ImageObserver;

    .prologue
    .line 2973
    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    move-object v7, p6

    invoke-virtual/range {v0 .. v7}, Lae/sun/java2d/SunGraphics2D;->drawImage(Lae/java/awt/Image;IIIILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z

    move-result v0

    return v0
.end method

.method public drawImage(Lae/java/awt/Image;IILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    .locals 9
    .param p1, "img"    # Lae/java/awt/Image;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "bg"    # Lae/java/awt/Color;
    .param p5, "observer"    # Lae/java/awt/image/ImageObserver;

    .prologue
    .line 3056
    if-nez p1, :cond_0

    .line 3057
    const/4 v0, 0x1

    .line 3070
    :goto_0
    return v0

    .line 3061
    :cond_0
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move v4, p3

    move-object v5, p4

    move-object v6, p5

    invoke-interface/range {v0 .. v6}, Lae/sun/java2d/pipe/DrawImagePipe;->copyImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Image;IILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    .line 3073
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 3062
    :catch_0
    move-exception v7

    .line 3063
    .local v7, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3065
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move v4, p3

    move-object v5, p4

    move-object v6, p5

    invoke-interface/range {v0 .. v6}, Lae/sun/java2d/pipe/DrawImagePipe;->copyImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Image;IILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v0

    .line 3073
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 3066
    :catch_1
    move-exception v8

    .line 3073
    .local v8, "e2":Lae/sun/java2d/InvalidPipeException;
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 3070
    const/4 v0, 0x0

    goto :goto_0

    .line 3072
    .end local v7    # "e":Lae/sun/java2d/InvalidPipeException;
    .end local v8    # "e2":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 3073
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 3074
    throw v0
.end method

.method public drawImage(Lae/java/awt/Image;IILae/java/awt/image/ImageObserver;)Z
    .locals 6
    .param p1, "img"    # Lae/java/awt/Image;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "observer"    # Lae/java/awt/image/ImageObserver;

    .prologue
    .line 3046
    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v5, p4

    invoke-virtual/range {v0 .. v5}, Lae/sun/java2d/SunGraphics2D;->drawImage(Lae/java/awt/Image;IILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z

    move-result v0

    return v0
.end method

.method public drawImage(Lae/java/awt/Image;Lae/java/awt/geom/AffineTransform;Lae/java/awt/image/ImageObserver;)Z
    .locals 8
    .param p1, "img"    # Lae/java/awt/Image;
    .param p2, "xform"    # Lae/java/awt/geom/AffineTransform;
    .param p3, "observer"    # Lae/java/awt/image/ImageObserver;

    .prologue
    const/4 v2, 0x0

    .line 3178
    if-nez p1, :cond_0

    .line 3179
    const/4 v2, 0x1

    .line 3196
    :goto_0
    return v2

    .line 3182
    :cond_0
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Lae/java/awt/geom/AffineTransform;->isIdentity()Z

    move-result v0

    if-eqz v0, :cond_2

    .line 3183
    :cond_1
    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move v3, v2

    move-object v5, p3

    invoke-virtual/range {v0 .. v5}, Lae/sun/java2d/SunGraphics2D;->drawImage(Lae/java/awt/Image;IILae/java/awt/Color;Lae/java/awt/image/ImageObserver;)Z

    move-result v2

    goto :goto_0

    .line 3187
    :cond_2
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    invoke-interface {v0, p0, p1, p2, p3}, Lae/sun/java2d/pipe/DrawImagePipe;->transformImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Image;Lae/java/awt/geom/AffineTransform;Lae/java/awt/image/ImageObserver;)Z
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v2

    .line 3199
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 3188
    :catch_0
    move-exception v6

    .line 3189
    .local v6, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3191
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    invoke-interface {v0, p0, p1, p2, p3}, Lae/sun/java2d/pipe/DrawImagePipe;->transformImage(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Image;Lae/java/awt/geom/AffineTransform;Lae/java/awt/image/ImageObserver;)Z
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v2

    .line 3199
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 3192
    :catch_1
    move-exception v7

    .line 3199
    .local v7, "e2":Lae/sun/java2d/InvalidPipeException;
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 3198
    .end local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    .end local v7    # "e2":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 3199
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 3200
    throw v0
.end method

.method public drawLine(IIII)V
    .locals 7
    .param p1, "x1"    # I
    .param p2, "y1"    # I
    .param p3, "x2"    # I
    .param p4, "y2"    # I

    .prologue
    .line 2120
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawLine(Lae/sun/java2d/SunGraphics2D;IIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2131
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2133
    :goto_0
    return-void

    .line 2121
    :catch_0
    move-exception v6

    .line 2122
    .local v6, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2124
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawLine(Lae/sun/java2d/SunGraphics2D;IIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2131
    :goto_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2130
    .end local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 2131
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2132
    throw v0

    .line 2125
    .restart local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public drawOval(IIII)V
    .locals 7
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I

    .prologue
    .line 2171
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawOval(Lae/sun/java2d/SunGraphics2D;IIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2182
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2184
    :goto_0
    return-void

    .line 2172
    :catch_0
    move-exception v6

    .line 2173
    .local v6, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2175
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawOval(Lae/sun/java2d/SunGraphics2D;IIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2182
    :goto_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2181
    .end local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 2182
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2183
    throw v0

    .line 2176
    .restart local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public drawPolygon([I[II)V
    .locals 3
    .param p1, "xPoints"    # [I
    .param p2, "yPoints"    # [I
    .param p3, "nPoints"    # I

    .prologue
    .line 2258
    :try_start_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    invoke-interface {v1, p0, p1, p2, p3}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawPolygon(Lae/sun/java2d/SunGraphics2D;[I[II)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2269
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2271
    :goto_0
    return-void

    .line 2259
    :catch_0
    move-exception v0

    .line 2260
    .local v0, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2262
    :try_start_2
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    invoke-interface {v1, p0, p1, p2, p3}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawPolygon(Lae/sun/java2d/SunGraphics2D;[I[II)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2269
    :goto_1
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2268
    .end local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v1

    .line 2269
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2270
    throw v1

    .line 2263
    .restart local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v1

    goto :goto_1
.end method

.method public drawPolyline([I[II)V
    .locals 3
    .param p1, "xPoints"    # [I
    .param p2, "yPoints"    # [I
    .param p3, "nPoints"    # I

    .prologue
    .line 2241
    :try_start_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    invoke-interface {v1, p0, p1, p2, p3}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawPolyline(Lae/sun/java2d/SunGraphics2D;[I[II)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2252
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2254
    :goto_0
    return-void

    .line 2242
    :catch_0
    move-exception v0

    .line 2243
    .local v0, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2245
    :try_start_2
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    invoke-interface {v1, p0, p1, p2, p3}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawPolyline(Lae/sun/java2d/SunGraphics2D;[I[II)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2252
    :goto_1
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2251
    .end local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v1

    .line 2252
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2253
    throw v1

    .line 2246
    .restart local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v1

    goto :goto_1
.end method

.method public drawRect(IIII)V
    .locals 7
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I

    .prologue
    .line 2292
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawRect(Lae/sun/java2d/SunGraphics2D;IIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2303
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2305
    :goto_0
    return-void

    .line 2293
    :catch_0
    move-exception v6

    .line 2294
    .local v6, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2296
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawRect(Lae/sun/java2d/SunGraphics2D;IIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2303
    :goto_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2302
    .end local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 2303
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2304
    throw v0

    .line 2297
    .restart local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public drawRenderableImage(Lae/java/awt/image/renderable/RenderableImage;Lae/java/awt/geom/AffineTransform;)V
    .locals 6
    .param p1, "img"    # Lae/java/awt/image/renderable/RenderableImage;
    .param p2, "xform"    # Lae/java/awt/geom/AffineTransform;

    .prologue
    .line 2754
    if-nez p1, :cond_0

    .line 2774
    :goto_0
    return-void

    .line 2758
    :cond_0
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    .line 2759
    .local v2, "pipeTransform":Lae/java/awt/geom/AffineTransform;
    new-instance v0, Lae/java/awt/geom/AffineTransform;

    invoke-direct {v0, p2}, Lae/java/awt/geom/AffineTransform;-><init>(Lae/java/awt/geom/AffineTransform;)V

    .line 2760
    .local v0, "concatTransform":Lae/java/awt/geom/AffineTransform;
    invoke-virtual {v0, v2}, Lae/java/awt/geom/AffineTransform;->concatenate(Lae/java/awt/geom/AffineTransform;)V

    .line 2763
    new-instance v3, Lae/java/awt/image/renderable/RenderContext;

    invoke-direct {v3, v0}, Lae/java/awt/image/renderable/RenderContext;-><init>(Lae/java/awt/geom/AffineTransform;)V

    .line 2766
    .local v3, "rc":Lae/java/awt/image/renderable/RenderContext;
    :try_start_0
    invoke-virtual {v2}, Lae/java/awt/geom/AffineTransform;->createInverse()Lae/java/awt/geom/AffineTransform;
    :try_end_0
    .catch Lae/java/awt/geom/NoninvertibleTransformException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v5

    .line 2772
    .local v5, "reverseTransform":Lae/java/awt/geom/AffineTransform;
    :goto_1
    invoke-interface {p1, v3}, Lae/java/awt/image/renderable/RenderableImage;->createRendering(Lae/java/awt/image/renderable/RenderContext;)Lae/java/awt/image/RenderedImage;

    move-result-object v4

    .line 2773
    .local v4, "rendering":Lae/java/awt/image/RenderedImage;
    invoke-virtual {p0, v4, v5}, Lae/sun/java2d/SunGraphics2D;->drawRenderedImage(Lae/java/awt/image/RenderedImage;Lae/java/awt/geom/AffineTransform;)V

    goto :goto_0

    .line 2767
    .end local v4    # "rendering":Lae/java/awt/image/RenderedImage;
    .end local v5    # "reverseTransform":Lae/java/awt/geom/AffineTransform;
    :catch_0
    move-exception v1

    .line 2768
    .local v1, "nte":Lae/java/awt/geom/NoninvertibleTransformException;
    new-instance v3, Lae/java/awt/image/renderable/RenderContext;

    .end local v3    # "rc":Lae/java/awt/image/renderable/RenderContext;
    invoke-direct {v3, v2}, Lae/java/awt/image/renderable/RenderContext;-><init>(Lae/java/awt/geom/AffineTransform;)V

    .line 2769
    .restart local v3    # "rc":Lae/java/awt/image/renderable/RenderContext;
    new-instance v5, Lae/java/awt/geom/AffineTransform;

    invoke-direct {v5}, Lae/java/awt/geom/AffineTransform;-><init>()V

    .restart local v5    # "reverseTransform":Lae/java/awt/geom/AffineTransform;
    goto :goto_1
.end method

.method public drawRenderedImage(Lae/java/awt/image/RenderedImage;Lae/java/awt/geom/AffineTransform;)V
    .locals 25
    .param p1, "img"    # Lae/java/awt/image/RenderedImage;
    .param p2, "xform"    # Lae/java/awt/geom/AffineTransform;

    .prologue
    .line 2541
    if-nez p1, :cond_1

    .line 2637
    :cond_0
    :goto_0
    return-void

    .line 2546
    :cond_1
    move-object/from16 v0, p1

    instance-of v4, v0, Lae/java/awt/image/BufferedImage;

    if-eqz v4, :cond_2

    move-object/from16 v17, p1

    .line 2547
    check-cast v17, Lae/java/awt/image/BufferedImage;

    .line 2548
    .local v17, "bufImg":Lae/java/awt/image/BufferedImage;
    const/4 v4, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    move-object/from16 v2, p2

    invoke-virtual {v0, v1, v2, v4}, Lae/sun/java2d/SunGraphics2D;->drawImage(Lae/java/awt/Image;Lae/java/awt/geom/AffineTransform;Lae/java/awt/image/ImageObserver;)Z

    goto :goto_0

    .line 2556
    .end local v17    # "bufImg":Lae/java/awt/image/BufferedImage;
    :cond_2
    move-object/from16 v0, p0

    iget v4, v0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v5, 0x1

    if-gt v4, v5, :cond_3

    .line 2557
    invoke-static/range {p2 .. p2}, Lae/sun/java2d/SunGraphics2D;->isIntegerTranslation(Lae/java/awt/geom/AffineTransform;)Z

    move-result v4

    if-eqz v4, :cond_3

    .line 2555
    const/16 v19, 0x1

    .line 2560
    .local v19, "isIntegerTranslate":Z
    :goto_1
    if-eqz v19, :cond_4

    const/4 v8, 0x0

    .line 2565
    .local v8, "pad":I
    :goto_2
    invoke-virtual/range {p0 .. p0}, Lae/sun/java2d/SunGraphics2D;->getCompClip()Lae/sun/java2d/pipe/Region;

    move-result-object v5

    .line 2566
    move-object/from16 v0, p0

    iget-object v6, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    move-object/from16 v4, p1

    move-object/from16 v7, p2

    move v9, v8

    .line 2564
    invoke-static/range {v4 .. v9}, Lae/sun/java2d/SunGraphics2D;->getImageRegion(Lae/java/awt/image/RenderedImage;Lae/sun/java2d/pipe/Region;Lae/java/awt/geom/AffineTransform;Lae/java/awt/geom/AffineTransform;II)Lae/java/awt/Rectangle;

    move-result-object v23

    .line 2569
    .local v23, "region":Lae/java/awt/Rectangle;
    move-object/from16 v0, v23

    iget v4, v0, Lae/java/awt/Rectangle;->width:I

    if-lez v4, :cond_0

    move-object/from16 v0, v23

    iget v4, v0, Lae/java/awt/Rectangle;->height:I

    if-lez v4, :cond_0

    .line 2578
    if-eqz v19, :cond_5

    .line 2586
    invoke-virtual/range {p2 .. p2}, Lae/java/awt/geom/AffineTransform;->getTranslateX()D

    move-result-wide v4

    double-to-int v4, v4

    .line 2587
    invoke-virtual/range {p2 .. p2}, Lae/java/awt/geom/AffineTransform;->getTranslateY()D

    move-result-wide v6

    double-to-int v5, v6

    .line 2585
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v23

    invoke-direct {v0, v1, v2, v4, v5}, Lae/sun/java2d/SunGraphics2D;->drawTranslatedRenderedImage(Lae/java/awt/image/RenderedImage;Lae/java/awt/Rectangle;II)V

    goto :goto_0

    .line 2555
    .end local v8    # "pad":I
    .end local v19    # "isIntegerTranslate":Z
    .end local v23    # "region":Lae/java/awt/Rectangle;
    :cond_3
    const/16 v19, 0x0

    goto :goto_1

    .line 2560
    .restart local v19    # "isIntegerTranslate":Z
    :cond_4
    const/4 v8, 0x3

    goto :goto_2

    .line 2592
    .restart local v8    # "pad":I
    .restart local v23    # "region":Lae/java/awt/Rectangle;
    :cond_5
    move-object/from16 v0, p1

    move-object/from16 v1, v23

    invoke-interface {v0, v1}, Lae/java/awt/image/RenderedImage;->getData(Lae/java/awt/Rectangle;)Lae/java/awt/image/Raster;

    move-result-object v22

    .line 2598
    .local v22, "raster":Lae/java/awt/image/Raster;
    invoke-virtual/range {v22 .. v22}, Lae/java/awt/image/Raster;->getSampleModel()Lae/java/awt/image/SampleModel;

    move-result-object v4

    .line 2599
    invoke-virtual/range {v22 .. v22}, Lae/java/awt/image/Raster;->getDataBuffer()Lae/java/awt/image/DataBuffer;

    move-result-object v5

    .line 2600
    const/4 v6, 0x0

    .line 2598
    invoke-static {v4, v5, v6}, Lae/java/awt/image/Raster;->createWritableRaster(Lae/java/awt/image/SampleModel;Lae/java/awt/image/DataBuffer;Lae/java/awt/Point;)Lae/java/awt/image/WritableRaster;

    move-result-object v9

    .line 2607
    .local v9, "wRaster":Lae/java/awt/image/WritableRaster;
    invoke-virtual/range {v22 .. v22}, Lae/java/awt/image/Raster;->getMinX()I

    move-result v20

    .line 2608
    .local v20, "minX":I
    invoke-virtual/range {v22 .. v22}, Lae/java/awt/image/Raster;->getMinY()I

    move-result v21

    .line 2609
    .local v21, "minY":I
    invoke-virtual/range {v22 .. v22}, Lae/java/awt/image/Raster;->getWidth()I

    move-result v12

    .line 2610
    .local v12, "width":I
    invoke-virtual/range {v22 .. v22}, Lae/java/awt/image/Raster;->getHeight()I

    move-result v13

    .line 2611
    .local v13, "height":I
    invoke-virtual/range {v22 .. v22}, Lae/java/awt/image/Raster;->getSampleModelTranslateX()I

    move-result v4

    sub-int v10, v20, v4

    .line 2612
    .local v10, "px":I
    invoke-virtual/range {v22 .. v22}, Lae/java/awt/image/Raster;->getSampleModelTranslateY()I

    move-result v4

    sub-int v11, v21, v4

    .line 2613
    .local v11, "py":I
    if-nez v10, :cond_6

    if-nez v11, :cond_6

    invoke-virtual {v9}, Lae/java/awt/image/WritableRaster;->getWidth()I

    move-result v4

    if-ne v12, v4, :cond_6

    .line 2614
    invoke-virtual {v9}, Lae/java/awt/image/WritableRaster;->getHeight()I

    move-result v4

    if-eq v13, v4, :cond_7

    .line 2620
    :cond_6
    const/4 v14, 0x0

    const/4 v15, 0x0

    .line 2621
    const/16 v16, 0x0

    .line 2616
    invoke-virtual/range {v9 .. v16}, Lae/java/awt/image/WritableRaster;->createWritableChild(IIIIII[I)Lae/java/awt/image/WritableRaster;

    move-result-object v9

    .line 2628
    :cond_7
    invoke-virtual/range {p2 .. p2}, Lae/java/awt/geom/AffineTransform;->clone()Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Lae/java/awt/geom/AffineTransform;

    .line 2629
    .local v24, "transXform":Lae/java/awt/geom/AffineTransform;
    move/from16 v0, v20

    int-to-double v4, v0

    move/from16 v0, v21

    int-to-double v6, v0

    move-object/from16 v0, v24

    invoke-virtual {v0, v4, v5, v6, v7}, Lae/java/awt/geom/AffineTransform;->translate(DD)V

    .line 2631
    invoke-interface/range {p1 .. p1}, Lae/java/awt/image/RenderedImage;->getColorModel()Lae/java/awt/image/ColorModel;

    move-result-object v18

    .line 2632
    .local v18, "cm":Lae/java/awt/image/ColorModel;
    new-instance v17, Lae/java/awt/image/BufferedImage;

    .line 2634
    invoke-virtual/range {v18 .. v18}, Lae/java/awt/image/ColorModel;->isAlphaPremultiplied()Z

    move-result v4

    .line 2635
    const/4 v5, 0x0

    .line 2632
    move-object/from16 v0, v17

    move-object/from16 v1, v18

    invoke-direct {v0, v1, v9, v4, v5}, Lae/java/awt/image/BufferedImage;-><init>(Lae/java/awt/image/ColorModel;Lae/java/awt/image/WritableRaster;ZLjava/util/Hashtable;)V

    .line 2636
    .restart local v17    # "bufImg":Lae/java/awt/image/BufferedImage;
    const/4 v4, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    move-object/from16 v2, v24

    invoke-virtual {v0, v1, v2, v4}, Lae/sun/java2d/SunGraphics2D;->drawImage(Lae/java/awt/Image;Lae/java/awt/geom/AffineTransform;Lae/java/awt/image/ImageObserver;)Z

    goto/16 :goto_0
.end method

.method public drawRoundRect(IIIIII)V
    .locals 9
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I
    .param p5, "arcW"    # I
    .param p6, "arcH"    # I

    .prologue
    .line 2137
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move v6, p5

    move v7, p6

    invoke-interface/range {v0 .. v7}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawRoundRect(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2148
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2150
    :goto_0
    return-void

    .line 2138
    :catch_0
    move-exception v8

    .line 2139
    .local v8, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2141
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move v6, p5

    move v7, p6

    invoke-interface/range {v0 .. v7}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawRoundRect(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2148
    :goto_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2147
    .end local v8    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 2148
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2149
    throw v0

    .line 2142
    .restart local v8    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public drawString(Ljava/lang/String;FF)V
    .locals 8
    .param p1, "str"    # Ljava/lang/String;
    .param p2, "x"    # F
    .param p3, "y"    # F

    .prologue
    .line 2822
    if-nez p1, :cond_0

    .line 2823
    new-instance v1, Ljava/lang/NullPointerException;

    const-string v2, "String is null"

    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 2826
    :cond_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    invoke-virtual {v1}, Lae/java/awt/Font;->hasLayoutAttributes()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 2827
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v1

    if-nez v1, :cond_1

    .line 2848
    :goto_0
    return-void

    .line 2830
    :cond_1
    new-instance v1, Lae/java/awt/font/TextLayout;

    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getFontRenderContext()Lae/java/awt/font/FontRenderContext;

    move-result-object v3

    invoke-direct {v1, p1, v2, v3}, Lae/java/awt/font/TextLayout;-><init>(Ljava/lang/String;Lae/java/awt/Font;Lae/java/awt/font/FontRenderContext;)V

    invoke-virtual {v1, p0, p2, p3}, Lae/java/awt/font/TextLayout;->draw(Lae/java/awt/Graphics2D;FF)V

    goto :goto_0

    .line 2835
    :cond_2
    :try_start_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    float-to-double v4, p2

    float-to-double v6, p3

    move-object v2, p0

    move-object v3, p1

    invoke-interface/range {v1 .. v7}, Lae/sun/java2d/pipe/TextPipe;->drawString(Lae/sun/java2d/SunGraphics2D;Ljava/lang/String;DD)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2846
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2836
    :catch_0
    move-exception v0

    .line 2837
    .local v0, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2839
    :try_start_2
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    float-to-double v4, p2

    float-to-double v6, p3

    move-object v2, p0

    move-object v3, p1

    invoke-interface/range {v1 .. v7}, Lae/sun/java2d/pipe/TextPipe;->drawString(Lae/sun/java2d/SunGraphics2D;Ljava/lang/String;DD)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2846
    :goto_1
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2845
    .end local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v1

    .line 2846
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2847
    throw v1

    .line 2840
    .restart local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v1

    goto :goto_1
.end method

.method public drawString(Ljava/lang/String;II)V
    .locals 8
    .param p1, "str"    # Ljava/lang/String;
    .param p2, "x"    # I
    .param p3, "y"    # I

    .prologue
    .line 2793
    if-nez p1, :cond_0

    .line 2794
    new-instance v1, Ljava/lang/NullPointerException;

    const-string v2, "String is null"

    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 2797
    :cond_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    invoke-virtual {v1}, Lae/java/awt/Font;->hasLayoutAttributes()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 2798
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v1

    if-nez v1, :cond_1

    .line 2819
    :goto_0
    return-void

    .line 2801
    :cond_1
    new-instance v1, Lae/java/awt/font/TextLayout;

    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getFontRenderContext()Lae/java/awt/font/FontRenderContext;

    move-result-object v3

    invoke-direct {v1, p1, v2, v3}, Lae/java/awt/font/TextLayout;-><init>(Ljava/lang/String;Lae/java/awt/Font;Lae/java/awt/font/FontRenderContext;)V

    int-to-float v2, p2

    int-to-float v3, p3

    invoke-virtual {v1, p0, v2, v3}, Lae/java/awt/font/TextLayout;->draw(Lae/java/awt/Graphics2D;FF)V

    goto :goto_0

    .line 2806
    :cond_2
    :try_start_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    int-to-double v4, p2

    int-to-double v6, p3

    move-object v2, p0

    move-object v3, p1

    invoke-interface/range {v1 .. v7}, Lae/sun/java2d/pipe/TextPipe;->drawString(Lae/sun/java2d/SunGraphics2D;Ljava/lang/String;DD)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2817
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2807
    :catch_0
    move-exception v0

    .line 2808
    .local v0, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2810
    :try_start_2
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    int-to-double v4, p2

    int-to-double v6, p3

    move-object v2, p0

    move-object v3, p1

    invoke-interface/range {v1 .. v7}, Lae/sun/java2d/pipe/TextPipe;->drawString(Lae/sun/java2d/SunGraphics2D;Ljava/lang/String;DD)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2817
    :goto_1
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2816
    .end local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v1

    .line 2817
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2818
    throw v1

    .line 2811
    .restart local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v1

    goto :goto_1
.end method

.method public drawString(Ljava/text/AttributedCharacterIterator;FF)V
    .locals 3
    .param p1, "iterator"    # Ljava/text/AttributedCharacterIterator;
    .param p2, "x"    # F
    .param p3, "y"    # F

    .prologue
    .line 2864
    if-nez p1, :cond_0

    .line 2865
    new-instance v1, Ljava/lang/NullPointerException;

    const-string v2, "AttributedCharacterIterator is null"

    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 2867
    :cond_0
    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getBeginIndex()I

    move-result v1

    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getEndIndex()I

    move-result v2

    if-ne v1, v2, :cond_1

    .line 2872
    :goto_0
    return-void

    .line 2870
    :cond_1
    new-instance v0, Lae/java/awt/font/TextLayout;

    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getFontRenderContext()Lae/java/awt/font/FontRenderContext;

    move-result-object v1

    invoke-direct {v0, p1, v1}, Lae/java/awt/font/TextLayout;-><init>(Ljava/text/AttributedCharacterIterator;Lae/java/awt/font/FontRenderContext;)V

    .line 2871
    .local v0, "tl":Lae/java/awt/font/TextLayout;
    invoke-virtual {v0, p0, p2, p3}, Lae/java/awt/font/TextLayout;->draw(Lae/java/awt/Graphics2D;FF)V

    goto :goto_0
.end method

.method public drawString(Ljava/text/AttributedCharacterIterator;II)V
    .locals 3
    .param p1, "iterator"    # Ljava/text/AttributedCharacterIterator;
    .param p2, "x"    # I
    .param p3, "y"    # I

    .prologue
    .line 2852
    if-nez p1, :cond_0

    .line 2853
    new-instance v1, Ljava/lang/NullPointerException;

    const-string v2, "AttributedCharacterIterator is null"

    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 2855
    :cond_0
    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getBeginIndex()I

    move-result v1

    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getEndIndex()I

    move-result v2

    if-ne v1, v2, :cond_1

    .line 2860
    :goto_0
    return-void

    .line 2858
    :cond_1
    new-instance v0, Lae/java/awt/font/TextLayout;

    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getFontRenderContext()Lae/java/awt/font/FontRenderContext;

    move-result-object v1

    invoke-direct {v0, p1, v1}, Lae/java/awt/font/TextLayout;-><init>(Ljava/text/AttributedCharacterIterator;Lae/java/awt/font/FontRenderContext;)V

    .line 2859
    .local v0, "tl":Lae/java/awt/font/TextLayout;
    int-to-float v1, p2

    int-to-float v2, p3

    invoke-virtual {v0, p0, v1, v2}, Lae/java/awt/font/TextLayout;->draw(Lae/java/awt/Graphics2D;FF)V

    goto :goto_0
.end method

.method public fill(Lae/java/awt/Shape;)V
    .locals 3
    .param p1, "s"    # Lae/java/awt/Shape;

    .prologue
    .line 2412
    :try_start_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    invoke-interface {v1, p0, p1}, Lae/sun/java2d/pipe/ShapeDrawPipe;->fill(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2423
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2425
    :goto_0
    return-void

    .line 2413
    :catch_0
    move-exception v0

    .line 2414
    .local v0, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2416
    :try_start_2
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    invoke-interface {v1, p0, p1}, Lae/sun/java2d/pipe/ShapeDrawPipe;->fill(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2423
    :goto_1
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2422
    .end local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v1

    .line 2423
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2424
    throw v1

    .line 2417
    .restart local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v1

    goto :goto_1
.end method

.method public fillArc(IIIIII)V
    .locals 9
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I
    .param p5, "startAngl"    # I
    .param p6, "arcAngl"    # I

    .prologue
    .line 2224
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move v6, p5

    move v7, p6

    invoke-interface/range {v0 .. v7}, Lae/sun/java2d/pipe/PixelFillPipe;->fillArc(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2235
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2237
    :goto_0
    return-void

    .line 2225
    :catch_0
    move-exception v8

    .line 2226
    .local v8, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2228
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move v6, p5

    move v7, p6

    invoke-interface/range {v0 .. v7}, Lae/sun/java2d/pipe/PixelFillPipe;->fillArc(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2235
    :goto_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2234
    .end local v8    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 2235
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2236
    throw v0

    .line 2229
    .restart local v8    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public fillOval(IIII)V
    .locals 7
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I

    .prologue
    .line 2188
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/PixelFillPipe;->fillOval(Lae/sun/java2d/SunGraphics2D;IIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2199
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2201
    :goto_0
    return-void

    .line 2189
    :catch_0
    move-exception v6

    .line 2190
    .local v6, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2192
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/PixelFillPipe;->fillOval(Lae/sun/java2d/SunGraphics2D;IIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2199
    :goto_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2198
    .end local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 2199
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2200
    throw v0

    .line 2193
    .restart local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public fillPolygon([I[II)V
    .locals 3
    .param p1, "xPoints"    # [I
    .param p2, "yPoints"    # [I
    .param p3, "nPoints"    # I

    .prologue
    .line 2275
    :try_start_0
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    invoke-interface {v1, p0, p1, p2, p3}, Lae/sun/java2d/pipe/PixelFillPipe;->fillPolygon(Lae/sun/java2d/SunGraphics2D;[I[II)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2286
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2288
    :goto_0
    return-void

    .line 2276
    :catch_0
    move-exception v0

    .line 2277
    .local v0, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2279
    :try_start_2
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    invoke-interface {v1, p0, p1, p2, p3}, Lae/sun/java2d/pipe/PixelFillPipe;->fillPolygon(Lae/sun/java2d/SunGraphics2D;[I[II)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2286
    :goto_1
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2285
    .end local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v1

    .line 2286
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v2}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2287
    throw v1

    .line 2280
    .restart local v0    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v1

    goto :goto_1
.end method

.method public fillRect(IIII)V
    .locals 7
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I

    .prologue
    .line 2309
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/PixelFillPipe;->fillRect(Lae/sun/java2d/SunGraphics2D;IIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2320
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2322
    :goto_0
    return-void

    .line 2310
    :catch_0
    move-exception v6

    .line 2311
    .local v6, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2313
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-interface/range {v0 .. v5}, Lae/sun/java2d/pipe/PixelFillPipe;->fillRect(Lae/sun/java2d/SunGraphics2D;IIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2320
    :goto_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2319
    .end local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 2320
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2321
    throw v0

    .line 2314
    .restart local v6    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public fillRoundRect(IIIIII)V
    .locals 9
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I
    .param p5, "arcW"    # I
    .param p6, "arcH"    # I

    .prologue
    .line 2154
    :try_start_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move v6, p5

    move v7, p6

    invoke-interface/range {v0 .. v7}, Lae/sun/java2d/pipe/PixelFillPipe;->fillRoundRect(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    :try_end_0
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2165
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2167
    :goto_0
    return-void

    .line 2155
    :catch_0
    move-exception v8

    .line 2156
    .local v8, "e":Lae/sun/java2d/InvalidPipeException;
    :try_start_1
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2158
    :try_start_2
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move v6, p5

    move v7, p6

    invoke-interface/range {v0 .. v7}, Lae/sun/java2d/pipe/PixelFillPipe;->fillRoundRect(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    :try_end_2
    .catch Lae/sun/java2d/InvalidPipeException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2165
    :goto_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->markDirty()V

    goto :goto_0

    .line 2164
    .end local v8    # "e":Lae/sun/java2d/InvalidPipeException;
    :catchall_0
    move-exception v0

    .line 2165
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v1}, Lae/sun/java2d/SurfaceData;->markDirty()V

    .line 2166
    throw v0

    .line 2159
    .restart local v8    # "e":Lae/sun/java2d/InvalidPipeException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public finalize()V
    .locals 0

    .prologue
    .line 3289
    return-void
.end method

.method public getBackground()Lae/java/awt/Color;
    .locals 1

    .prologue
    .line 1717
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->backgroundColor:Lae/java/awt/Color;

    return-object v0
.end method

.method public getClip()Lae/java/awt/Shape;
    .locals 1

    .prologue
    .line 1947
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    invoke-virtual {p0, v0}, Lae/sun/java2d/SunGraphics2D;->untransformShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object v0

    return-object v0
.end method

.method public getClipBounds()Lae/java/awt/Rectangle;
    .locals 3

    .prologue
    .line 1730
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->clipState:I

    if-nez v1, :cond_0

    .line 1731
    const/4 v0, 0x0

    .line 1742
    .local v0, "r":Lae/java/awt/Rectangle;
    :goto_0
    return-object v0

    .line 1732
    .end local v0    # "r":Lae/java/awt/Rectangle;
    :cond_0
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v2, 0x1

    if-gt v1, v2, :cond_2

    .line 1733
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    instance-of v1, v1, Lae/java/awt/Rectangle;

    if-eqz v1, :cond_1

    .line 1734
    new-instance v0, Lae/java/awt/Rectangle;

    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    check-cast v1, Lae/java/awt/Rectangle;

    invoke-direct {v0, v1}, Lae/java/awt/Rectangle;-><init>(Lae/java/awt/Rectangle;)V

    .line 1738
    .restart local v0    # "r":Lae/java/awt/Rectangle;
    :goto_1
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    neg-int v1, v1

    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    neg-int v2, v2

    invoke-virtual {v0, v1, v2}, Lae/java/awt/Rectangle;->translate(II)V

    goto :goto_0

    .line 1736
    .end local v0    # "r":Lae/java/awt/Rectangle;
    :cond_1
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    invoke-interface {v1}, Lae/java/awt/Shape;->getBounds()Lae/java/awt/Rectangle;

    move-result-object v0

    .restart local v0    # "r":Lae/java/awt/Rectangle;
    goto :goto_1

    .line 1740
    .end local v0    # "r":Lae/java/awt/Rectangle;
    :cond_2
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getClip()Lae/java/awt/Shape;

    move-result-object v1

    invoke-interface {v1}, Lae/java/awt/Shape;->getBounds()Lae/java/awt/Rectangle;

    move-result-object v0

    .restart local v0    # "r":Lae/java/awt/Rectangle;
    goto :goto_0
.end method

.method public getClipBounds(Lae/java/awt/Rectangle;)Lae/java/awt/Rectangle;
    .locals 2
    .param p1, "r"    # Lae/java/awt/Rectangle;

    .prologue
    .line 1746
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->clipState:I

    if-eqz v0, :cond_3

    .line 1747
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v1, 0x1

    if-gt v0, v1, :cond_2

    .line 1748
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    instance-of v0, v0, Lae/java/awt/Rectangle;

    if-eqz v0, :cond_1

    .line 1749
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    check-cast v0, Lae/java/awt/Rectangle;

    invoke-virtual {p1, v0}, Lae/java/awt/Rectangle;->setBounds(Lae/java/awt/Rectangle;)V

    .line 1753
    :goto_0
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    neg-int v0, v0

    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    neg-int v1, v1

    invoke-virtual {p1, v0, v1}, Lae/java/awt/Rectangle;->translate(II)V

    .line 1760
    :cond_0
    :goto_1
    return-object p1

    .line 1751
    :cond_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    invoke-interface {v0}, Lae/java/awt/Shape;->getBounds()Lae/java/awt/Rectangle;

    move-result-object v0

    invoke-virtual {p1, v0}, Lae/java/awt/Rectangle;->setBounds(Lae/java/awt/Rectangle;)V

    goto :goto_0

    .line 1755
    :cond_2
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getClip()Lae/java/awt/Shape;

    move-result-object v0

    invoke-interface {v0}, Lae/java/awt/Shape;->getBounds()Lae/java/awt/Rectangle;

    move-result-object v0

    invoke-virtual {p1, v0}, Lae/java/awt/Rectangle;->setBounds(Lae/java/awt/Rectangle;)V

    goto :goto_1

    .line 1757
    :cond_3
    if-nez p1, :cond_0

    .line 1758
    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "null rectangle parameter"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getColor()Lae/java/awt/Color;
    .locals 1

    .prologue
    .line 1625
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->foregroundColor:Lae/java/awt/Color;

    return-object v0
.end method

.method public getCompClip()Lae/sun/java2d/pipe/Region;
    .locals 1

    .prologue
    .line 483
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->isValid()Z

    move-result v0

    if-nez v0, :cond_0

    .line 485
    invoke-direct {p0}, Lae/sun/java2d/SunGraphics2D;->revalidateAll()V

    .line 488
    :cond_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->clipRegion:Lae/sun/java2d/pipe/Region;

    return-object v0
.end method

.method public getComposite()Lae/java/awt/Composite;
    .locals 1

    .prologue
    .line 1621
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->composite:Lae/java/awt/Composite;

    return-object v0
.end method

.method public getDestSurface()Lae/sun/java2d/Surface;
    .locals 1

    .prologue
    .line 3307
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    return-object v0
.end method

.method public getDestination()Ljava/lang/Object;
    .locals 1

    .prologue
    .line 3297
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->getDestination()Ljava/lang/Object;

    move-result-object v0

    return-object v0
.end method

.method public getDeviceColorModel()Lae/java/awt/image/ColorModel;
    .locals 1

    .prologue
    .line 832
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->getColorModel()Lae/java/awt/image/ColorModel;

    move-result-object v0

    return-object v0
.end method

.method public getDeviceConfiguration()Lae/java/awt/GraphicsConfiguration;
    .locals 1

    .prologue
    .line 839
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0}, Lae/sun/java2d/SurfaceData;->getDeviceConfiguration()Lae/java/awt/GraphicsConfiguration;

    move-result-object v0

    return-object v0
.end method

.method public getFont()Lae/java/awt/Font;
    .locals 1

    .prologue
    .line 492
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    if-nez v0, :cond_0

    .line 493
    sget-object v0, Lae/sun/java2d/SunGraphics2D;->defaultFont:Lae/java/awt/Font;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    .line 495
    :cond_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    return-object v0
.end method

.method public getFontInfo()Lae/sun/java2d/loops/FontInfo;
    .locals 3

    .prologue
    .line 755
    iget-boolean v0, p0, Lae/sun/java2d/SunGraphics2D;->validFontInfo:Z

    if-nez v0, :cond_0

    .line 756
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fontInfo:Lae/sun/java2d/loops/FontInfo;

    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    const/4 v2, 0x0

    invoke-virtual {p0, v0, v1, v2}, Lae/sun/java2d/SunGraphics2D;->checkFontInfo(Lae/sun/java2d/loops/FontInfo;Lae/java/awt/Font;Lae/java/awt/font/FontRenderContext;)Lae/sun/java2d/loops/FontInfo;

    move-result-object v0

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fontInfo:Lae/sun/java2d/loops/FontInfo;

    .line 757
    const/4 v0, 0x1

    iput-boolean v0, p0, Lae/sun/java2d/SunGraphics2D;->validFontInfo:Z

    .line 759
    :cond_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fontInfo:Lae/sun/java2d/loops/FontInfo;

    return-object v0
.end method

.method public getFontMetrics()Lae/java/awt/FontMetrics;
    .locals 2

    .prologue
    .line 776
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fontMetrics:Lae/java/awt/FontMetrics;

    if-eqz v0, :cond_0

    .line 777
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fontMetrics:Lae/java/awt/FontMetrics;

    .line 780
    :goto_0
    return-object v0

    .line 781
    :cond_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getFontRenderContext()Lae/java/awt/font/FontRenderContext;

    move-result-object v1

    invoke-static {v0, v1}, Lae/sun/font/FontDesignMetrics;->getMetrics(Lae/java/awt/Font;Lae/java/awt/font/FontRenderContext;)Lae/sun/font/FontDesignMetrics;

    move-result-object v0

    .line 780
    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fontMetrics:Lae/java/awt/FontMetrics;

    goto :goto_0
.end method

.method public getFontMetrics(Lae/java/awt/Font;)Lae/java/awt/FontMetrics;
    .locals 2
    .param p1, "font"    # Lae/java/awt/Font;

    .prologue
    .line 785
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->fontMetrics:Lae/java/awt/FontMetrics;

    if-eqz v1, :cond_1

    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    if-ne p1, v1, :cond_1

    .line 786
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fontMetrics:Lae/java/awt/FontMetrics;

    .line 794
    :cond_0
    :goto_0
    return-object v0

    .line 789
    :cond_1
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getFontRenderContext()Lae/java/awt/font/FontRenderContext;

    move-result-object v1

    invoke-static {p1, v1}, Lae/sun/font/FontDesignMetrics;->getMetrics(Lae/java/awt/Font;Lae/java/awt/font/FontRenderContext;)Lae/sun/font/FontDesignMetrics;

    move-result-object v0

    .line 791
    .local v0, "fm":Lae/java/awt/FontMetrics;
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    if-ne v1, p1, :cond_0

    .line 792
    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fontMetrics:Lae/java/awt/FontMetrics;

    goto :goto_0
.end method

.method public getFontRenderContext()Lae/java/awt/font/FontRenderContext;
    .locals 14

    .prologue
    .line 3233
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->cachedFRC:Lae/java/awt/font/FontRenderContext;

    if-nez v2, :cond_2

    .line 3234
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->textAntialiasHint:I

    .line 3235
    .local v0, "aahint":I
    if-nez v0, :cond_0

    .line 3236
    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->antialiasHint:I

    const/4 v3, 0x2

    if-ne v2, v3, :cond_0

    .line 3237
    const/4 v0, 0x2

    .line 3240
    :cond_0
    const/4 v1, 0x0

    .line 3241
    .local v1, "tx":Lae/java/awt/geom/AffineTransform;
    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v3, 0x3

    if-lt v2, v3, :cond_1

    .line 3242
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v2}, Lae/java/awt/geom/AffineTransform;->getTranslateX()D

    move-result-wide v2

    const-wide/16 v4, 0x0

    cmpl-double v2, v2, v4

    if-nez v2, :cond_3

    .line 3243
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v2}, Lae/java/awt/geom/AffineTransform;->getTranslateY()D

    move-result-wide v2

    const-wide/16 v4, 0x0

    cmpl-double v2, v2, v4

    if-nez v2, :cond_3

    .line 3244
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    .line 3253
    :cond_1
    :goto_0
    new-instance v2, Lae/java/awt/font/FontRenderContext;

    .line 3254
    const/4 v3, 0x2

    invoke-static {v3, v0}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v3

    .line 3255
    const/4 v4, 0x3

    .line 3256
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->fractionalMetricsHint:I

    .line 3255
    invoke-static {v4, v5}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v4

    invoke-direct {v2, v1, v3, v4}, Lae/java/awt/font/FontRenderContext;-><init>(Lae/java/awt/geom/AffineTransform;Ljava/lang/Object;Ljava/lang/Object;)V

    .line 3253
    iput-object v2, p0, Lae/sun/java2d/SunGraphics2D;->cachedFRC:Lae/java/awt/font/FontRenderContext;

    .line 3258
    .end local v0    # "aahint":I
    .end local v1    # "tx":Lae/java/awt/geom/AffineTransform;
    :cond_2
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->cachedFRC:Lae/java/awt/font/FontRenderContext;

    return-object v2

    .line 3246
    .restart local v0    # "aahint":I
    .restart local v1    # "tx":Lae/java/awt/geom/AffineTransform;
    :cond_3
    new-instance v1, Lae/java/awt/geom/AffineTransform;

    .end local v1    # "tx":Lae/java/awt/geom/AffineTransform;
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v2}, Lae/java/awt/geom/AffineTransform;->getScaleX()D

    move-result-wide v2

    .line 3247
    iget-object v4, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v4}, Lae/java/awt/geom/AffineTransform;->getShearY()D

    move-result-wide v4

    .line 3248
    iget-object v6, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v6}, Lae/java/awt/geom/AffineTransform;->getShearX()D

    move-result-wide v6

    .line 3249
    iget-object v8, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v8}, Lae/java/awt/geom/AffineTransform;->getScaleY()D

    move-result-wide v8

    .line 3250
    const-wide/16 v10, 0x0

    const-wide/16 v12, 0x0

    .line 3246
    invoke-direct/range {v1 .. v13}, Lae/java/awt/geom/AffineTransform;-><init>(DDDDDD)V

    .restart local v1    # "tx":Lae/java/awt/geom/AffineTransform;
    goto :goto_0
.end method

.method public getGVFontInfo(Lae/java/awt/Font;Lae/java/awt/font/FontRenderContext;)Lae/sun/java2d/loops/FontInfo;
    .locals 1
    .param p1, "font"    # Lae/java/awt/Font;
    .param p2, "frc"    # Lae/java/awt/font/FontRenderContext;

    .prologue
    .line 764
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFontInfo:Lae/sun/java2d/loops/FontInfo;

    if-eqz v0, :cond_0

    .line 765
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFontInfo:Lae/sun/java2d/loops/FontInfo;

    iget-object v0, v0, Lae/sun/java2d/loops/FontInfo;->font:Lae/java/awt/Font;

    if-ne v0, p1, :cond_0

    .line 766
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFRC:Lae/java/awt/font/FontRenderContext;

    if-ne v0, p2, :cond_0

    .line 767
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFontInfo:Lae/sun/java2d/loops/FontInfo;

    .line 770
    :goto_0
    return-object v0

    .line 769
    :cond_0
    iput-object p2, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFRC:Lae/java/awt/font/FontRenderContext;

    .line 771
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFontInfo:Lae/sun/java2d/loops/FontInfo;

    invoke-virtual {p0, v0, p1, p2}, Lae/sun/java2d/SunGraphics2D;->checkFontInfo(Lae/sun/java2d/loops/FontInfo;Lae/java/awt/Font;Lae/java/awt/font/FontRenderContext;)Lae/sun/java2d/loops/FontInfo;

    move-result-object v0

    .line 770
    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFontInfo:Lae/sun/java2d/loops/FontInfo;

    goto :goto_0
.end method

.method public getPaint()Lae/java/awt/Paint;
    .locals 1

    .prologue
    .line 1613
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->paint:Lae/java/awt/Paint;

    return-object v0
.end method

.method public getRenderingHint(Lae/java/awt/RenderingHints$Key;)Ljava/lang/Object;
    .locals 3
    .param p1, "hintKey"    # Lae/java/awt/RenderingHints$Key;

    .prologue
    const/4 v1, 0x0

    .line 1226
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    if-eqz v2, :cond_1

    .line 1227
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    invoke-virtual {v1, p1}, Lae/java/awt/RenderingHints;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    .line 1262
    .end local p1    # "hintKey":Lae/java/awt/RenderingHints$Key;
    :cond_0
    :goto_0
    return-object v1

    .line 1229
    .restart local p1    # "hintKey":Lae/java/awt/RenderingHints$Key;
    :cond_1
    instance-of v2, p1, Lae/sun/awt/SunHints$Key;

    if-eqz v2, :cond_0

    .line 1232
    check-cast p1, Lae/sun/awt/SunHints$Key;

    .end local p1    # "hintKey":Lae/java/awt/RenderingHints$Key;
    invoke-virtual {p1}, Lae/sun/awt/SunHints$Key;->getIndex()I

    move-result v0

    .line 1233
    .local v0, "keyindex":I
    sparse-switch v0, :sswitch_data_0

    goto :goto_0

    .line 1235
    :sswitch_0
    const/4 v1, 0x0

    .line 1236
    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->renderHint:I

    .line 1235
    invoke-static {v1, v2}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v1

    goto :goto_0

    .line 1238
    :sswitch_1
    const/4 v1, 0x1

    .line 1239
    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->antialiasHint:I

    .line 1238
    invoke-static {v1, v2}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v1

    goto :goto_0

    .line 1241
    :sswitch_2
    const/4 v1, 0x2

    .line 1242
    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->textAntialiasHint:I

    .line 1241
    invoke-static {v1, v2}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v1

    goto :goto_0

    .line 1244
    :sswitch_3
    const/4 v1, 0x3

    .line 1245
    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->fractionalMetricsHint:I

    .line 1244
    invoke-static {v1, v2}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v1

    goto :goto_0

    .line 1247
    :sswitch_4
    new-instance v1, Ljava/lang/Integer;

    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->lcdTextContrast:I

    invoke-direct {v1, v2}, Ljava/lang/Integer;-><init>(I)V

    goto :goto_0

    .line 1249
    :sswitch_5
    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->interpolationHint:I

    packed-switch v2, :pswitch_data_0

    goto :goto_0

    .line 1251
    :pswitch_0
    sget-object v1, Lae/sun/awt/SunHints;->VALUE_INTERPOLATION_NEAREST_NEIGHBOR:Ljava/lang/Object;

    goto :goto_0

    .line 1253
    :pswitch_1
    sget-object v1, Lae/sun/awt/SunHints;->VALUE_INTERPOLATION_BILINEAR:Ljava/lang/Object;

    goto :goto_0

    .line 1255
    :pswitch_2
    sget-object v1, Lae/sun/awt/SunHints;->VALUE_INTERPOLATION_BICUBIC:Ljava/lang/Object;

    goto :goto_0

    .line 1259
    :sswitch_6
    const/16 v1, 0x8

    .line 1260
    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->strokeHint:I

    .line 1259
    invoke-static {v1, v2}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v1

    goto :goto_0

    .line 1233
    :sswitch_data_0
    .sparse-switch
        0x0 -> :sswitch_0
        0x1 -> :sswitch_1
        0x2 -> :sswitch_2
        0x3 -> :sswitch_3
        0x5 -> :sswitch_5
        0x8 -> :sswitch_6
        0x64 -> :sswitch_4
    .end sparse-switch

    .line 1249
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method public getRenderingHints()Lae/java/awt/RenderingHints;
    .locals 1

    .prologue
    .line 1345
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    if-nez v0, :cond_0

    .line 1346
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lae/sun/java2d/SunGraphics2D;->makeHints(Ljava/util/Map;)Lae/java/awt/RenderingHints;

    move-result-object v0

    .line 1348
    :goto_0
    return-object v0

    :cond_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    invoke-virtual {v0}, Lae/java/awt/RenderingHints;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lae/java/awt/RenderingHints;

    goto :goto_0
.end method

.method public getStroke()Lae/java/awt/Stroke;
    .locals 1

    .prologue
    .line 1725
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    return-object v0
.end method

.method public final getSurfaceData()Lae/sun/java2d/SurfaceData;
    .locals 1

    .prologue
    .line 847
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    return-object v0
.end method

.method public getTransform()Lae/java/awt/geom/AffineTransform;
    .locals 6

    .prologue
    .line 1590
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->constrainX:I

    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->constrainY:I

    or-int/2addr v1, v2

    if-nez v1, :cond_0

    .line 1591
    new-instance v0, Lae/java/awt/geom/AffineTransform;

    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-direct {v0, v1}, Lae/java/awt/geom/AffineTransform;-><init>(Lae/java/awt/geom/AffineTransform;)V

    .line 1596
    :goto_0
    return-object v0

    .line 1594
    :cond_0
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->constrainX:I

    neg-int v1, v1

    int-to-double v2, v1

    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->constrainY:I

    neg-int v1, v1

    int-to-double v4, v1

    invoke-static {v2, v3, v4, v5}, Lae/java/awt/geom/AffineTransform;->getTranslateInstance(DD)Lae/java/awt/geom/AffineTransform;

    move-result-object v0

    .line 1595
    .local v0, "tx":Lae/java/awt/geom/AffineTransform;
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v0, v1}, Lae/java/awt/geom/AffineTransform;->concatenate(Lae/java/awt/geom/AffineTransform;)V

    goto :goto_0
.end method

.method public hit(Lae/java/awt/Rectangle;Lae/java/awt/Shape;Z)Z
    .locals 3
    .param p1, "rect"    # Lae/java/awt/Rectangle;
    .param p2, "s"    # Lae/java/awt/Shape;
    .param p3, "onStroke"    # Z

    .prologue
    .line 815
    if-eqz p3, :cond_0

    .line 816
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    invoke-interface {v1, p2}, Lae/java/awt/Stroke;->createStrokedShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object p2

    .line 819
    :cond_0
    invoke-virtual {p0, p2}, Lae/sun/java2d/SunGraphics2D;->transformShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object p2

    .line 820
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->constrainX:I

    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->constrainY:I

    or-int/2addr v1, v2

    if-eqz v1, :cond_1

    .line 821
    new-instance v0, Lae/java/awt/Rectangle;

    invoke-direct {v0, p1}, Lae/java/awt/Rectangle;-><init>(Lae/java/awt/Rectangle;)V

    .line 822
    .end local p1    # "rect":Lae/java/awt/Rectangle;
    .local v0, "rect":Lae/java/awt/Rectangle;
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->constrainX:I

    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->constrainY:I

    invoke-virtual {v0, v1, v2}, Lae/java/awt/Rectangle;->translate(II)V

    move-object p1, v0

    .line 825
    .end local v0    # "rect":Lae/java/awt/Rectangle;
    .restart local p1    # "rect":Lae/java/awt/Rectangle;
    :cond_1
    invoke-interface {p2, p1}, Lae/java/awt/Shape;->intersects(Lae/java/awt/geom/Rectangle2D;)Z

    move-result v1

    return v1
.end method

.method public hitClip(IIII)Z
    .locals 8
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I

    .prologue
    .line 1764
    if-lez p3, :cond_0

    if-gtz p4, :cond_1

    .line 1765
    :cond_0
    const/4 v0, 0x0

    .line 1814
    :goto_0
    return v0

    .line 1767
    :cond_1
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v2, 0x1

    if-le v0, v2, :cond_2

    .line 1785
    const/16 v0, 0x8

    new-array v1, v0, [D

    const/4 v0, 0x0

    .line 1786
    int-to-double v2, p1

    aput-wide v2, v1, v0

    const/4 v0, 0x1

    int-to-double v2, p2

    aput-wide v2, v1, v0

    const/4 v0, 0x2

    .line 1787
    add-int v2, p1, p3

    int-to-double v2, v2

    aput-wide v2, v1, v0

    const/4 v0, 0x3

    int-to-double v2, p2

    aput-wide v2, v1, v0

    const/4 v0, 0x4

    .line 1788
    int-to-double v2, p1

    aput-wide v2, v1, v0

    const/4 v0, 0x5

    add-int v2, p2, p4

    int-to-double v2, v2

    aput-wide v2, v1, v0

    const/4 v0, 0x6

    .line 1789
    add-int v2, p1, p3

    int-to-double v2, v2

    aput-wide v2, v1, v0

    const/4 v0, 0x7

    add-int v2, p2, p4

    int-to-double v2, v2

    aput-wide v2, v1, v0

    .line 1791
    .local v1, "d":[D
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    const/4 v2, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x4

    move-object v3, v1

    invoke-virtual/range {v0 .. v5}, Lae/java/awt/geom/AffineTransform;->transform([DI[DII)V

    .line 1792
    const/4 v0, 0x0

    aget-wide v2, v1, v0

    const/4 v0, 0x2

    aget-wide v4, v1, v0

    invoke-static {v2, v3, v4, v5}, Ljava/lang/Math;->min(DD)D

    move-result-wide v2

    .line 1793
    const/4 v0, 0x4

    aget-wide v4, v1, v0

    const/4 v0, 0x6

    aget-wide v6, v1, v0

    invoke-static {v4, v5, v6, v7}, Ljava/lang/Math;->min(DD)D

    move-result-wide v4

    .line 1792
    invoke-static {v2, v3, v4, v5}, Ljava/lang/Math;->min(DD)D

    move-result-wide v2

    invoke-static {v2, v3}, Ljava/lang/Math;->floor(D)D

    move-result-wide v2

    double-to-int p1, v2

    .line 1794
    const/4 v0, 0x1

    aget-wide v2, v1, v0

    const/4 v0, 0x3

    aget-wide v4, v1, v0

    invoke-static {v2, v3, v4, v5}, Ljava/lang/Math;->min(DD)D

    move-result-wide v2

    .line 1795
    const/4 v0, 0x5

    aget-wide v4, v1, v0

    const/4 v0, 0x7

    aget-wide v6, v1, v0

    invoke-static {v4, v5, v6, v7}, Ljava/lang/Math;->min(DD)D

    move-result-wide v4

    .line 1794
    invoke-static {v2, v3, v4, v5}, Ljava/lang/Math;->min(DD)D

    move-result-wide v2

    invoke-static {v2, v3}, Ljava/lang/Math;->floor(D)D

    move-result-wide v2

    double-to-int p2, v2

    .line 1796
    const/4 v0, 0x0

    aget-wide v2, v1, v0

    const/4 v0, 0x2

    aget-wide v4, v1, v0

    invoke-static {v2, v3, v4, v5}, Ljava/lang/Math;->max(DD)D

    move-result-wide v2

    .line 1797
    const/4 v0, 0x4

    aget-wide v4, v1, v0

    const/4 v0, 0x6

    aget-wide v6, v1, v0

    invoke-static {v4, v5, v6, v7}, Ljava/lang/Math;->max(DD)D

    move-result-wide v4

    .line 1796
    invoke-static {v2, v3, v4, v5}, Ljava/lang/Math;->max(DD)D

    move-result-wide v2

    invoke-static {v2, v3}, Ljava/lang/Math;->ceil(D)D

    move-result-wide v2

    double-to-int p3, v2

    .line 1798
    const/4 v0, 0x1

    aget-wide v2, v1, v0

    const/4 v0, 0x3

    aget-wide v4, v1, v0

    invoke-static {v2, v3, v4, v5}, Ljava/lang/Math;->max(DD)D

    move-result-wide v2

    .line 1799
    const/4 v0, 0x5

    aget-wide v4, v1, v0

    const/4 v0, 0x7

    aget-wide v6, v1, v0

    invoke-static {v4, v5, v6, v7}, Ljava/lang/Math;->max(DD)D

    move-result-wide v4

    .line 1798
    invoke-static {v2, v3, v4, v5}, Ljava/lang/Math;->max(DD)D

    move-result-wide v2

    invoke-static {v2, v3}, Ljava/lang/Math;->ceil(D)D

    move-result-wide v2

    double-to-int p4, v2

    .line 1806
    .end local v1    # "d":[D
    :goto_1
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getCompClip()Lae/sun/java2d/pipe/Region;

    move-result-object v0

    invoke-virtual {v0, p1, p2, p3, p4}, Lae/sun/java2d/pipe/Region;->intersectsQuickCheckXYXY(IIII)Z

    move-result v0

    if-nez v0, :cond_3

    .line 1807
    const/4 v0, 0x0

    goto/16 :goto_0

    .line 1801
    :cond_2
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    add-int/2addr p1, v0

    .line 1802
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    add-int/2addr p2, v0

    .line 1803
    add-int/2addr p3, p1

    .line 1804
    add-int/2addr p4, p2

    goto :goto_1

    .line 1814
    :cond_3
    const/4 v0, 0x1

    goto/16 :goto_0
.end method

.method intersectByArea(Lae/java/awt/Shape;Lae/java/awt/Shape;ZZ)Lae/java/awt/Shape;
    .locals 3
    .param p1, "s1"    # Lae/java/awt/Shape;
    .param p2, "s2"    # Lae/java/awt/Shape;
    .param p3, "keep1"    # Z
    .param p4, "keep2"    # Z

    .prologue
    .line 455
    if-nez p3, :cond_1

    instance-of v2, p1, Lae/java/awt/geom/Area;

    if-eqz v2, :cond_1

    move-object v0, p1

    .line 456
    check-cast v0, Lae/java/awt/geom/Area;

    .line 464
    .local v0, "a1":Lae/java/awt/geom/Area;
    :goto_0
    instance-of v2, p2, Lae/java/awt/geom/Area;

    if-eqz v2, :cond_3

    move-object v1, p2

    .line 465
    check-cast v1, Lae/java/awt/geom/Area;

    .line 470
    .local v1, "a2":Lae/java/awt/geom/Area;
    :goto_1
    invoke-virtual {v0, v1}, Lae/java/awt/geom/Area;->intersect(Lae/java/awt/geom/Area;)V

    .line 471
    invoke-virtual {v0}, Lae/java/awt/geom/Area;->isRectangular()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 472
    invoke-virtual {v0}, Lae/java/awt/geom/Area;->getBounds()Lae/java/awt/Rectangle;

    move-result-object v0

    .line 475
    .end local v0    # "a1":Lae/java/awt/geom/Area;
    :cond_0
    return-object v0

    .line 457
    .end local v1    # "a2":Lae/java/awt/geom/Area;
    :cond_1
    if-nez p4, :cond_2

    instance-of v2, p2, Lae/java/awt/geom/Area;

    if-eqz v2, :cond_2

    move-object v0, p2

    .line 458
    check-cast v0, Lae/java/awt/geom/Area;

    .line 459
    .restart local v0    # "a1":Lae/java/awt/geom/Area;
    move-object p2, p1

    .line 460
    goto :goto_0

    .line 461
    .end local v0    # "a1":Lae/java/awt/geom/Area;
    :cond_2
    new-instance v0, Lae/java/awt/geom/Area;

    invoke-direct {v0, p1}, Lae/java/awt/geom/Area;-><init>(Lae/java/awt/Shape;)V

    .restart local v0    # "a1":Lae/java/awt/geom/Area;
    goto :goto_0

    .line 467
    :cond_3
    new-instance v1, Lae/java/awt/geom/Area;

    invoke-direct {v1, p2}, Lae/java/awt/geom/Area;-><init>(Lae/java/awt/Shape;)V

    .restart local v1    # "a2":Lae/java/awt/geom/Area;
    goto :goto_1
.end method

.method intersectRectShape(Lae/java/awt/geom/Rectangle2D;Lae/java/awt/Shape;ZZ)Lae/java/awt/Shape;
    .locals 18
    .param p1, "r"    # Lae/java/awt/geom/Rectangle2D;
    .param p2, "s"    # Lae/java/awt/Shape;
    .param p3, "keep1"    # Z
    .param p4, "keep2"    # Z

    .prologue
    .line 404
    move-object/from16 v0, p2

    instance-of v12, v0, Lae/java/awt/geom/Rectangle2D;

    if-eqz v12, :cond_4

    move-object/from16 v2, p2

    .line 405
    check-cast v2, Lae/java/awt/geom/Rectangle2D;

    .line 407
    .local v2, "r2":Lae/java/awt/geom/Rectangle2D;
    if-nez p3, :cond_1

    .line 408
    move-object/from16 v3, p1

    .line 414
    .local v3, "outrect":Lae/java/awt/geom/Rectangle2D;
    :goto_0
    invoke-virtual/range {p1 .. p1}, Lae/java/awt/geom/Rectangle2D;->getX()D

    move-result-wide v12

    invoke-virtual {v2}, Lae/java/awt/geom/Rectangle2D;->getX()D

    move-result-wide v14

    invoke-static {v12, v13, v14, v15}, Ljava/lang/Math;->max(DD)D

    move-result-wide v4

    .line 415
    .local v4, "x1":D
    invoke-virtual/range {p1 .. p1}, Lae/java/awt/geom/Rectangle2D;->getX()D

    move-result-wide v12

    invoke-virtual/range {p1 .. p1}, Lae/java/awt/geom/Rectangle2D;->getWidth()D

    move-result-wide v14

    add-double/2addr v12, v14

    .line 416
    invoke-virtual {v2}, Lae/java/awt/geom/Rectangle2D;->getX()D

    move-result-wide v14

    invoke-virtual {v2}, Lae/java/awt/geom/Rectangle2D;->getWidth()D

    move-result-wide v16

    add-double v14, v14, v16

    .line 415
    invoke-static {v12, v13, v14, v15}, Ljava/lang/Math;->min(DD)D

    move-result-wide v8

    .line 417
    .local v8, "x2":D
    invoke-virtual/range {p1 .. p1}, Lae/java/awt/geom/Rectangle2D;->getY()D

    move-result-wide v12

    invoke-virtual {v2}, Lae/java/awt/geom/Rectangle2D;->getY()D

    move-result-wide v14

    invoke-static {v12, v13, v14, v15}, Ljava/lang/Math;->max(DD)D

    move-result-wide v6

    .line 418
    .local v6, "y1":D
    invoke-virtual/range {p1 .. p1}, Lae/java/awt/geom/Rectangle2D;->getY()D

    move-result-wide v12

    invoke-virtual/range {p1 .. p1}, Lae/java/awt/geom/Rectangle2D;->getHeight()D

    move-result-wide v14

    add-double/2addr v12, v14

    .line 419
    invoke-virtual {v2}, Lae/java/awt/geom/Rectangle2D;->getY()D

    move-result-wide v14

    invoke-virtual {v2}, Lae/java/awt/geom/Rectangle2D;->getHeight()D

    move-result-wide v16

    add-double v14, v14, v16

    .line 418
    invoke-static {v12, v13, v14, v15}, Ljava/lang/Math;->min(DD)D

    move-result-wide v10

    .line 421
    .local v10, "y2":D
    sub-double v12, v8, v4

    const-wide/16 v14, 0x0

    cmpg-double v12, v12, v14

    if-ltz v12, :cond_0

    sub-double v12, v10, v6

    const-wide/16 v14, 0x0

    cmpg-double v12, v12, v14

    if-gez v12, :cond_3

    .line 423
    :cond_0
    const-wide/16 v4, 0x0

    const-wide/16 v6, 0x0

    const-wide/16 v8, 0x0

    const-wide/16 v10, 0x0

    invoke-virtual/range {v3 .. v11}, Lae/java/awt/geom/Rectangle2D;->setFrameFromDiagonal(DDDD)V

    .line 434
    .end local v2    # "r2":Lae/java/awt/geom/Rectangle2D;
    .end local v3    # "outrect":Lae/java/awt/geom/Rectangle2D;
    .end local v4    # "x1":D
    .end local v6    # "y1":D
    .end local v8    # "x2":D
    .end local v10    # "y2":D
    :goto_1
    return-object v3

    .line 409
    .restart local v2    # "r2":Lae/java/awt/geom/Rectangle2D;
    :cond_1
    if-nez p4, :cond_2

    .line 410
    move-object v3, v2

    .line 411
    .restart local v3    # "outrect":Lae/java/awt/geom/Rectangle2D;
    goto :goto_0

    .line 412
    .end local v3    # "outrect":Lae/java/awt/geom/Rectangle2D;
    :cond_2
    new-instance v3, Lae/java/awt/geom/Rectangle2D$Float;

    invoke-direct {v3}, Lae/java/awt/geom/Rectangle2D$Float;-><init>()V

    .restart local v3    # "outrect":Lae/java/awt/geom/Rectangle2D;
    goto :goto_0

    .line 425
    .restart local v4    # "x1":D
    .restart local v6    # "y1":D
    .restart local v8    # "x2":D
    .restart local v10    # "y2":D
    :cond_3
    invoke-virtual/range {v3 .. v11}, Lae/java/awt/geom/Rectangle2D;->setFrameFromDiagonal(DDDD)V

    goto :goto_1

    .line 428
    .end local v2    # "r2":Lae/java/awt/geom/Rectangle2D;
    .end local v3    # "outrect":Lae/java/awt/geom/Rectangle2D;
    .end local v4    # "x1":D
    .end local v6    # "y1":D
    .end local v8    # "x2":D
    .end local v10    # "y2":D
    :cond_4
    invoke-interface/range {p2 .. p2}, Lae/java/awt/Shape;->getBounds2D()Lae/java/awt/geom/Rectangle2D;

    move-result-object v12

    move-object/from16 v0, p1

    invoke-virtual {v0, v12}, Lae/java/awt/geom/Rectangle2D;->contains(Lae/java/awt/geom/Rectangle2D;)Z

    move-result v12

    if-eqz v12, :cond_6

    .line 429
    if-eqz p4, :cond_5

    .line 430
    invoke-static/range {p2 .. p2}, Lae/sun/java2d/SunGraphics2D;->cloneShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object p2

    :cond_5
    move-object/from16 v3, p2

    .line 432
    goto :goto_1

    .line 434
    :cond_6
    invoke-virtual/range {p0 .. p4}, Lae/sun/java2d/SunGraphics2D;->intersectByArea(Lae/java/awt/Shape;Lae/java/awt/Shape;ZZ)Lae/java/awt/Shape;

    move-result-object v3

    goto :goto_1
.end method

.method intersectShapes(Lae/java/awt/Shape;Lae/java/awt/Shape;ZZ)Lae/java/awt/Shape;
    .locals 1
    .param p1, "s1"    # Lae/java/awt/Shape;
    .param p2, "s2"    # Lae/java/awt/Shape;
    .param p3, "keep1"    # Z
    .param p4, "keep2"    # Z

    .prologue
    .line 384
    instance-of v0, p1, Lae/java/awt/Rectangle;

    if-eqz v0, :cond_0

    instance-of v0, p2, Lae/java/awt/Rectangle;

    if-eqz v0, :cond_0

    .line 385
    check-cast p1, Lae/java/awt/Rectangle;

    .end local p1    # "s1":Lae/java/awt/Shape;
    check-cast p2, Lae/java/awt/Rectangle;

    .end local p2    # "s2":Lae/java/awt/Shape;
    invoke-virtual {p1, p2}, Lae/java/awt/Rectangle;->intersection(Lae/java/awt/Rectangle;)Lae/java/awt/Rectangle;

    move-result-object v0

    .line 392
    :goto_0
    return-object v0

    .line 387
    .restart local p1    # "s1":Lae/java/awt/Shape;
    .restart local p2    # "s2":Lae/java/awt/Shape;
    :cond_0
    instance-of v0, p1, Lae/java/awt/geom/Rectangle2D;

    if-eqz v0, :cond_1

    .line 388
    check-cast p1, Lae/java/awt/geom/Rectangle2D;

    .end local p1    # "s1":Lae/java/awt/Shape;
    invoke-virtual {p0, p1, p2, p3, p4}, Lae/sun/java2d/SunGraphics2D;->intersectRectShape(Lae/java/awt/geom/Rectangle2D;Lae/java/awt/Shape;ZZ)Lae/java/awt/Shape;

    move-result-object v0

    goto :goto_0

    .line 389
    .restart local p1    # "s1":Lae/java/awt/Shape;
    :cond_1
    instance-of v0, p2, Lae/java/awt/geom/Rectangle2D;

    if-eqz v0, :cond_2

    .line 390
    check-cast p2, Lae/java/awt/geom/Rectangle2D;

    .end local p2    # "s2":Lae/java/awt/Shape;
    invoke-virtual {p0, p2, p1, p4, p3}, Lae/sun/java2d/SunGraphics2D;->intersectRectShape(Lae/java/awt/geom/Rectangle2D;Lae/java/awt/Shape;ZZ)Lae/java/awt/Shape;

    move-result-object v0

    goto :goto_0

    .line 392
    .restart local p2    # "s2":Lae/java/awt/Shape;
    :cond_2
    invoke-virtual {p0, p1, p2, p3, p4}, Lae/sun/java2d/SunGraphics2D;->intersectByArea(Lae/java/awt/Shape;Lae/java/awt/Shape;ZZ)Lae/java/awt/Shape;

    move-result-object v0

    goto :goto_0
.end method

.method protected invalidatePipe()V
    .locals 1

    .prologue
    .line 365
    sget-object v0, Lae/sun/java2d/SunGraphics2D;->invalidpipe:Lae/sun/java2d/pipe/ValidatePipe;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    .line 366
    sget-object v0, Lae/sun/java2d/SunGraphics2D;->invalidpipe:Lae/sun/java2d/pipe/ValidatePipe;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    .line 367
    sget-object v0, Lae/sun/java2d/SunGraphics2D;->invalidpipe:Lae/sun/java2d/pipe/ValidatePipe;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    .line 368
    sget-object v0, Lae/sun/java2d/SunGraphics2D;->invalidpipe:Lae/sun/java2d/pipe/ValidatePipe;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    .line 369
    sget-object v0, Lae/sun/java2d/SunGraphics2D;->invalidpipe:Lae/sun/java2d/pipe/ValidatePipe;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    .line 370
    return-void
.end method

.method protected invalidateTransform()V
    .locals 14

    .prologue
    const/4 v11, 0x1

    const-wide/high16 v12, 0x3fe0000000000000L    # 0.5

    const/4 v10, 0x0

    const/4 v9, 0x3

    const/4 v8, 0x0

    .line 1538
    iget-object v6, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v6}, Lae/java/awt/geom/AffineTransform;->getType()I

    move-result v5

    .line 1539
    .local v5, "type":I
    iget v4, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    .line 1540
    .local v4, "origTransformState":I
    if-nez v5, :cond_3

    .line 1541
    iput v8, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    .line 1542
    iput v8, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    iput v8, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    .line 1564
    :goto_0
    iget v6, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    if-ge v6, v9, :cond_0

    .line 1565
    if-lt v4, v9, :cond_1

    .line 1570
    :cond_0
    iput-object v10, p0, Lae/sun/java2d/SunGraphics2D;->cachedFRC:Lae/java/awt/font/FontRenderContext;

    .line 1571
    iput-boolean v8, p0, Lae/sun/java2d/SunGraphics2D;->validFontInfo:Z

    .line 1572
    iput-object v10, p0, Lae/sun/java2d/SunGraphics2D;->fontMetrics:Lae/java/awt/FontMetrics;

    .line 1573
    iput-object v10, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFontInfo:Lae/sun/java2d/loops/FontInfo;

    .line 1575
    iget v6, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    if-eq v6, v4, :cond_1

    .line 1576
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidatePipe()V

    .line 1579
    :cond_1
    iget v6, p0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    if-eq v6, v9, :cond_2

    .line 1580
    iget-object v6, p0, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    check-cast v6, Lae/java/awt/BasicStroke;

    invoke-direct {p0, v6}, Lae/sun/java2d/SunGraphics2D;->validateBasicStroke(Lae/java/awt/BasicStroke;)V

    .line 1582
    :cond_2
    return-void

    .line 1543
    :cond_3
    if-ne v5, v11, :cond_5

    .line 1544
    iget-object v6, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v6}, Lae/java/awt/geom/AffineTransform;->getTranslateX()D

    move-result-wide v0

    .line 1545
    .local v0, "dtx":D
    iget-object v6, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v6}, Lae/java/awt/geom/AffineTransform;->getTranslateY()D

    move-result-wide v2

    .line 1546
    .local v2, "dty":D
    add-double v6, v0, v12

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v6

    double-to-int v6, v6

    iput v6, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    .line 1547
    add-double v6, v2, v12

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v6

    double-to-int v6, v6

    iput v6, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    .line 1548
    iget v6, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    int-to-double v6, v6

    cmpl-double v6, v0, v6

    if-nez v6, :cond_4

    iget v6, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    int-to-double v6, v6

    cmpl-double v6, v2, v6

    if-nez v6, :cond_4

    .line 1549
    iput v11, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    goto :goto_0

    .line 1551
    :cond_4
    const/4 v6, 0x2

    iput v6, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    goto :goto_0

    .line 1553
    .end local v0    # "dtx":D
    .end local v2    # "dty":D
    :cond_5
    and-int/lit8 v6, v5, 0x78

    if-nez v6, :cond_6

    .line 1557
    iput v9, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    .line 1558
    iput v8, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    iput v8, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    goto :goto_0

    .line 1560
    :cond_6
    const/4 v6, 0x4

    iput v6, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    .line 1561
    iput v8, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    iput v8, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    goto :goto_0
.end method

.method makeHints(Ljava/util/Map;)Lae/java/awt/RenderingHints;
    .locals 5
    .param p1, "hints"    # Ljava/util/Map;

    .prologue
    .line 1353
    new-instance v0, Lae/java/awt/RenderingHints;

    invoke-direct {v0, p1}, Lae/java/awt/RenderingHints;-><init>(Ljava/util/Map;)V

    .line 1354
    .local v0, "model":Lae/java/awt/RenderingHints;
    sget-object v2, Lae/sun/awt/SunHints;->KEY_RENDERING:Lae/sun/awt/SunHints$Key;

    .line 1355
    const/4 v3, 0x0

    .line 1356
    iget v4, p0, Lae/sun/java2d/SunGraphics2D;->renderHint:I

    .line 1355
    invoke-static {v3, v4}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v3

    .line 1354
    invoke-virtual {v0, v2, v3}, Lae/java/awt/RenderingHints;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1357
    sget-object v2, Lae/sun/awt/SunHints;->KEY_ANTIALIASING:Lae/sun/awt/SunHints$Key;

    .line 1358
    const/4 v3, 0x1

    .line 1359
    iget v4, p0, Lae/sun/java2d/SunGraphics2D;->antialiasHint:I

    .line 1358
    invoke-static {v3, v4}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v3

    .line 1357
    invoke-virtual {v0, v2, v3}, Lae/java/awt/RenderingHints;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1360
    sget-object v2, Lae/sun/awt/SunHints;->KEY_TEXT_ANTIALIASING:Lae/sun/awt/SunHints$Key;

    .line 1361
    const/4 v3, 0x2

    .line 1362
    iget v4, p0, Lae/sun/java2d/SunGraphics2D;->textAntialiasHint:I

    .line 1361
    invoke-static {v3, v4}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v3

    .line 1360
    invoke-virtual {v0, v2, v3}, Lae/java/awt/RenderingHints;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1363
    sget-object v2, Lae/sun/awt/SunHints;->KEY_FRACTIONALMETRICS:Lae/sun/awt/SunHints$Key;

    .line 1364
    const/4 v3, 0x3

    .line 1365
    iget v4, p0, Lae/sun/java2d/SunGraphics2D;->fractionalMetricsHint:I

    .line 1364
    invoke-static {v3, v4}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v3

    .line 1363
    invoke-virtual {v0, v2, v3}, Lae/java/awt/RenderingHints;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1366
    sget-object v2, Lae/sun/awt/SunHints;->KEY_TEXT_ANTIALIAS_LCD_CONTRAST:Lae/java/awt/RenderingHints$Key;

    .line 1367
    iget v3, p0, Lae/sun/java2d/SunGraphics2D;->lcdTextContrast:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    .line 1366
    invoke-virtual {v0, v2, v3}, Lae/java/awt/RenderingHints;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1369
    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->interpolationHint:I

    packed-switch v2, :pswitch_data_0

    .line 1380
    const/4 v1, 0x0

    .line 1383
    :goto_0
    if-eqz v1, :cond_0

    .line 1384
    sget-object v2, Lae/sun/awt/SunHints;->KEY_INTERPOLATION:Lae/sun/awt/SunHints$Key;

    invoke-virtual {v0, v2, v1}, Lae/java/awt/RenderingHints;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1386
    :cond_0
    sget-object v2, Lae/sun/awt/SunHints;->KEY_STROKE_CONTROL:Lae/sun/awt/SunHints$Key;

    .line 1387
    const/16 v3, 0x8

    .line 1388
    iget v4, p0, Lae/sun/java2d/SunGraphics2D;->strokeHint:I

    .line 1387
    invoke-static {v3, v4}, Lae/sun/awt/SunHints$Value;->get(II)Lae/sun/awt/SunHints$Value;

    move-result-object v3

    .line 1386
    invoke-virtual {v0, v2, v3}, Lae/java/awt/RenderingHints;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1389
    return-object v0

    .line 1371
    :pswitch_0
    sget-object v1, Lae/sun/awt/SunHints;->VALUE_INTERPOLATION_NEAREST_NEIGHBOR:Ljava/lang/Object;

    .line 1372
    .local v1, "value":Ljava/lang/Object;
    goto :goto_0

    .line 1374
    .end local v1    # "value":Ljava/lang/Object;
    :pswitch_1
    sget-object v1, Lae/sun/awt/SunHints;->VALUE_INTERPOLATION_BILINEAR:Ljava/lang/Object;

    .line 1375
    .restart local v1    # "value":Ljava/lang/Object;
    goto :goto_0

    .line 1377
    .end local v1    # "value":Ljava/lang/Object;
    :pswitch_2
    sget-object v1, Lae/sun/awt/SunHints;->VALUE_INTERPOLATION_BICUBIC:Ljava/lang/Object;

    .line 1378
    .restart local v1    # "value":Ljava/lang/Object;
    goto :goto_0

    .line 1369
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method public rotate(D)V
    .locals 1
    .param p1, "theta"    # D

    .prologue
    .line 1423
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v0, p1, p2}, Lae/java/awt/geom/AffineTransform;->rotate(D)V

    .line 1424
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidateTransform()V

    .line 1425
    return-void
.end method

.method public rotate(DDD)V
    .locals 9
    .param p1, "theta"    # D
    .param p3, "x"    # D
    .param p5, "y"    # D

    .prologue
    .line 1443
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    move-wide v2, p1

    move-wide v4, p3

    move-wide v6, p5

    invoke-virtual/range {v1 .. v7}, Lae/java/awt/geom/AffineTransform;->rotate(DDD)V

    .line 1444
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidateTransform()V

    .line 1445
    return-void
.end method

.method public scale(DD)V
    .locals 1
    .param p1, "sx"    # D
    .param p3, "sy"    # D

    .prologue
    .line 1459
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v0, p1, p2, p3, p4}, Lae/java/awt/geom/AffineTransform;->scale(DD)V

    .line 1460
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidateTransform()V

    .line 1461
    return-void
.end method

.method public setBackground(Lae/java/awt/Color;)V
    .locals 0
    .param p1, "color"    # Lae/java/awt/Color;

    .prologue
    .line 1709
    iput-object p1, p0, Lae/sun/java2d/SunGraphics2D;->backgroundColor:Lae/java/awt/Color;

    .line 1710
    return-void
.end method

.method public setClip(IIII)V
    .locals 1
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I

    .prologue
    .line 1943
    new-instance v0, Lae/java/awt/Rectangle;

    invoke-direct {v0, p1, p2, p3, p4}, Lae/java/awt/Rectangle;-><init>(IIII)V

    invoke-virtual {p0, v0}, Lae/sun/java2d/SunGraphics2D;->setClip(Lae/java/awt/Shape;)V

    .line 1944
    return-void
.end method

.method public setClip(Lae/java/awt/Shape;)V
    .locals 1
    .param p1, "sh"    # Lae/java/awt/Shape;

    .prologue
    .line 1951
    invoke-virtual {p0, p1}, Lae/sun/java2d/SunGraphics2D;->transformShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object v0

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    .line 1952
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->validateCompClip()V

    .line 1953
    return-void
.end method

.method public setColor(Lae/java/awt/Color;)V
    .locals 4
    .param p1, "color"    # Lae/java/awt/Color;

    .prologue
    const/4 v3, 0x1

    const/4 v2, 0x0

    .line 1668
    if-eqz p1, :cond_0

    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->paint:Lae/java/awt/Paint;

    if-ne p1, v0, :cond_1

    .line 1694
    :cond_0
    :goto_0
    return-void

    .line 1671
    :cond_1
    iput-object p1, p0, Lae/sun/java2d/SunGraphics2D;->foregroundColor:Lae/java/awt/Color;

    iput-object p1, p0, Lae/sun/java2d/SunGraphics2D;->paint:Lae/java/awt/Paint;

    .line 1672
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->validateColor()V

    .line 1673
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->eargb:I

    shr-int/lit8 v0, v0, 0x18

    const/4 v1, -0x1

    if-ne v0, v1, :cond_3

    .line 1674
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    if-eqz v0, :cond_0

    .line 1677
    iput v2, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    .line 1678
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    sget-object v1, Lae/sun/java2d/loops/CompositeType;->SrcOverNoEa:Lae/sun/java2d/loops/CompositeType;

    if-ne v0, v1, :cond_2

    .line 1680
    iput v2, p0, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    .line 1692
    :cond_2
    :goto_1
    iput-boolean v2, p0, Lae/sun/java2d/SunGraphics2D;->validFontInfo:Z

    .line 1693
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidatePipe()V

    goto :goto_0

    .line 1683
    :cond_3
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    if-eq v0, v3, :cond_0

    .line 1686
    iput v3, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    .line 1687
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    sget-object v1, Lae/sun/java2d/loops/CompositeType;->SrcOverNoEa:Lae/sun/java2d/loops/CompositeType;

    if-ne v0, v1, :cond_2

    .line 1689
    iput v3, p0, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    goto :goto_1
.end method

.method public setComposite(Lae/java/awt/Composite;)V
    .locals 5
    .param p1, "comp"    # Lae/java/awt/Composite;

    .prologue
    const/4 v4, 0x1

    .line 861
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->composite:Lae/java/awt/Composite;

    if-ne v3, p1, :cond_1

    .line 912
    :cond_0
    :goto_0
    return-void

    .line 866
    :cond_1
    instance-of v3, p1, Lae/java/awt/AlphaComposite;

    if-eqz v3, :cond_a

    move-object v0, p1

    .line 867
    check-cast v0, Lae/java/awt/AlphaComposite;

    .line 868
    .local v0, "alphacomp":Lae/java/awt/AlphaComposite;
    invoke-static {v0}, Lae/sun/java2d/loops/CompositeType;->forAlphaComposite(Lae/java/awt/AlphaComposite;)Lae/sun/java2d/loops/CompositeType;

    move-result-object v2

    .line 869
    .local v2, "newCompType":Lae/sun/java2d/loops/CompositeType;
    sget-object v3, Lae/sun/java2d/loops/CompositeType;->SrcOverNoEa:Lae/sun/java2d/loops/CompositeType;

    if-ne v2, v3, :cond_6

    .line 870
    iget v3, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    if-eqz v3, :cond_2

    .line 871
    iget v3, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    if-le v3, v4, :cond_5

    .line 872
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->paint:Lae/java/awt/Paint;

    invoke-interface {v3}, Lae/java/awt/Paint;->getTransparency()I

    move-result v3

    if-ne v3, v4, :cond_5

    .line 874
    :cond_2
    const/4 v1, 0x0

    .line 900
    .end local v0    # "alphacomp":Lae/java/awt/AlphaComposite;
    .local v1, "newCompState":I
    :goto_1
    iget v3, p0, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    if-ne v3, v1, :cond_3

    .line 901
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    if-eq v3, v2, :cond_4

    .line 903
    :cond_3
    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    .line 904
    iput-object v2, p0, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    .line 905
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidatePipe()V

    .line 906
    const/4 v3, 0x0

    iput-boolean v3, p0, Lae/sun/java2d/SunGraphics2D;->validFontInfo:Z

    .line 908
    :cond_4
    iput-object p1, p0, Lae/sun/java2d/SunGraphics2D;->composite:Lae/java/awt/Composite;

    .line 909
    iget v3, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    if-gt v3, v4, :cond_0

    .line 910
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->validateColor()V

    goto :goto_0

    .line 876
    .end local v1    # "newCompState":I
    .restart local v0    # "alphacomp":Lae/java/awt/AlphaComposite;
    :cond_5
    const/4 v1, 0x1

    .line 878
    .restart local v1    # "newCompState":I
    goto :goto_1

    .end local v1    # "newCompState":I
    :cond_6
    sget-object v3, Lae/sun/java2d/loops/CompositeType;->SrcNoEa:Lae/sun/java2d/loops/CompositeType;

    if-eq v2, v3, :cond_7

    .line 879
    sget-object v3, Lae/sun/java2d/loops/CompositeType;->Src:Lae/sun/java2d/loops/CompositeType;

    if-eq v2, v3, :cond_7

    .line 880
    sget-object v3, Lae/sun/java2d/loops/CompositeType;->Clear:Lae/sun/java2d/loops/CompositeType;

    if-ne v2, v3, :cond_8

    .line 882
    :cond_7
    const/4 v1, 0x0

    .line 883
    .restart local v1    # "newCompState":I
    goto :goto_1

    .end local v1    # "newCompState":I
    :cond_8
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v3}, Lae/sun/java2d/SurfaceData;->getTransparency()I

    move-result v3

    if-ne v3, v4, :cond_9

    .line 884
    sget-object v3, Lae/sun/java2d/loops/CompositeType;->SrcIn:Lae/sun/java2d/loops/CompositeType;

    if-ne v2, v3, :cond_9

    .line 886
    const/4 v1, 0x0

    .line 887
    .restart local v1    # "newCompState":I
    goto :goto_1

    .line 888
    .end local v1    # "newCompState":I
    :cond_9
    const/4 v1, 0x1

    .line 890
    .restart local v1    # "newCompState":I
    goto :goto_1

    .end local v0    # "alphacomp":Lae/java/awt/AlphaComposite;
    .end local v1    # "newCompState":I
    .end local v2    # "newCompType":Lae/sun/java2d/loops/CompositeType;
    :cond_a
    instance-of v3, p1, Lae/sun/java2d/loops/XORComposite;

    if-eqz v3, :cond_b

    .line 891
    const/4 v1, 0x2

    .line 892
    .restart local v1    # "newCompState":I
    sget-object v2, Lae/sun/java2d/loops/CompositeType;->Xor:Lae/sun/java2d/loops/CompositeType;

    .line 893
    .restart local v2    # "newCompType":Lae/sun/java2d/loops/CompositeType;
    goto :goto_1

    .end local v1    # "newCompState":I
    .end local v2    # "newCompType":Lae/sun/java2d/loops/CompositeType;
    :cond_b
    if-nez p1, :cond_c

    .line 894
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "null Composite"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 896
    :cond_c
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v3}, Lae/sun/java2d/SurfaceData;->checkCustomComposite()V

    .line 897
    const/4 v1, 0x3

    .line 898
    .restart local v1    # "newCompState":I
    sget-object v2, Lae/sun/java2d/loops/CompositeType;->General:Lae/sun/java2d/loops/CompositeType;

    .restart local v2    # "newCompType":Lae/sun/java2d/loops/CompositeType;
    goto :goto_1
.end method

.method public setDevClip(IIII)V
    .locals 2
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I

    .prologue
    .line 305
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->constrainClip:Lae/sun/java2d/pipe/Region;

    .line 306
    .local v0, "c":Lae/sun/java2d/pipe/Region;
    if-nez v0, :cond_0

    .line 307
    invoke-static {p1, p2, p3, p4}, Lae/sun/java2d/pipe/Region;->getInstanceXYWH(IIII)Lae/sun/java2d/pipe/Region;

    move-result-object v1

    iput-object v1, p0, Lae/sun/java2d/SunGraphics2D;->devClip:Lae/sun/java2d/pipe/Region;

    .line 311
    :goto_0
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->validateCompClip()V

    .line 312
    return-void

    .line 309
    :cond_0
    invoke-virtual {v0, p1, p2, p3, p4}, Lae/sun/java2d/pipe/Region;->getIntersectionXYWH(IIII)Lae/sun/java2d/pipe/Region;

    move-result-object v1

    iput-object v1, p0, Lae/sun/java2d/SunGraphics2D;->devClip:Lae/sun/java2d/pipe/Region;

    goto :goto_0
.end method

.method public setDevClip(Lae/java/awt/Rectangle;)V
    .locals 4
    .param p1, "r"    # Lae/java/awt/Rectangle;

    .prologue
    .line 315
    iget v0, p1, Lae/java/awt/Rectangle;->x:I

    iget v1, p1, Lae/java/awt/Rectangle;->y:I

    iget v2, p1, Lae/java/awt/Rectangle;->width:I

    iget v3, p1, Lae/java/awt/Rectangle;->height:I

    invoke-virtual {p0, v0, v1, v2, v3}, Lae/sun/java2d/SunGraphics2D;->setDevClip(IIII)V

    .line 316
    return-void
.end method

.method public setFont(Lae/java/awt/Font;)V
    .locals 4
    .param p1, "font"    # Lae/java/awt/Font;

    .prologue
    const/4 v3, 0x2

    const/4 v1, 0x0

    .line 724
    if-eqz p1, :cond_2

    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    if-eq p1, v0, :cond_2

    .line 739
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->textAntialiasHint:I

    const/4 v2, 0x3

    if-ne v0, v2, :cond_1

    .line 740
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    sget-object v2, Lae/sun/java2d/SunGraphics2D;->invalidpipe:Lae/sun/java2d/pipe/ValidatePipe;

    if-eq v0, v2, :cond_1

    .line 741
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    if-gt v0, v3, :cond_0

    .line 742
    invoke-virtual {p1}, Lae/java/awt/Font;->isTransformed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 743
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fontInfo:Lae/sun/java2d/loops/FontInfo;

    if-eqz v0, :cond_0

    .line 744
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fontInfo:Lae/sun/java2d/loops/FontInfo;

    iget v0, v0, Lae/sun/java2d/loops/FontInfo;->aaHint:I

    if-ne v0, v3, :cond_3

    const/4 v0, 0x1

    .line 745
    :goto_0
    invoke-static {p1}, Lae/sun/font/FontManager;->getFont2D(Lae/java/awt/Font;)Lae/sun/font/Font2D;

    move-result-object v2

    invoke-virtual {p1}, Lae/java/awt/Font;->getSize()I

    move-result v3

    invoke-virtual {v2, v3}, Lae/sun/font/Font2D;->useAAForPtSize(I)Z

    move-result v2

    if-eq v0, v2, :cond_1

    .line 746
    :cond_0
    sget-object v0, Lae/sun/java2d/SunGraphics2D;->invalidpipe:Lae/sun/java2d/pipe/ValidatePipe;

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    .line 748
    :cond_1
    iput-object p1, p0, Lae/sun/java2d/SunGraphics2D;->font:Lae/java/awt/Font;

    .line 749
    const/4 v0, 0x0

    iput-object v0, p0, Lae/sun/java2d/SunGraphics2D;->fontMetrics:Lae/java/awt/FontMetrics;

    .line 750
    iput-boolean v1, p0, Lae/sun/java2d/SunGraphics2D;->validFontInfo:Z

    .line 752
    :cond_2
    return-void

    :cond_3
    move v0, v1

    .line 744
    goto :goto_0
.end method

.method public setPaint(Lae/java/awt/Paint;)V
    .locals 5
    .param p1, "paint"    # Lae/java/awt/Paint;

    .prologue
    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 923
    instance-of v1, p1, Lae/java/awt/Color;

    if-eqz v1, :cond_1

    .line 924
    check-cast p1, Lae/java/awt/Color;

    .end local p1    # "paint":Lae/java/awt/Paint;
    invoke-virtual {p0, p1}, Lae/sun/java2d/SunGraphics2D;->setColor(Lae/java/awt/Color;)V

    .line 957
    :cond_0
    :goto_0
    return-void

    .line 927
    .restart local p1    # "paint":Lae/java/awt/Paint;
    :cond_1
    if-eqz p1, :cond_0

    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->paint:Lae/java/awt/Paint;

    if-eq v1, p1, :cond_0

    .line 930
    iput-object p1, p0, Lae/sun/java2d/SunGraphics2D;->paint:Lae/java/awt/Paint;

    .line 931
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    sget-object v2, Lae/sun/java2d/loops/CompositeType;->SrcOverNoEa:Lae/sun/java2d/loops/CompositeType;

    if-ne v1, v2, :cond_2

    .line 933
    invoke-interface {p1}, Lae/java/awt/Paint;->getTransparency()I

    move-result v1

    if-ne v1, v4, :cond_3

    .line 934
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    if-eqz v1, :cond_2

    .line 935
    iput v3, p0, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    .line 943
    :cond_2
    :goto_1
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v0

    .line 944
    .local v0, "paintClass":Ljava/lang/Class;
    const-class v1, Lae/java/awt/GradientPaint;

    if-ne v0, v1, :cond_4

    .line 945
    const/4 v1, 0x2

    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    .line 955
    :goto_2
    iput-boolean v3, p0, Lae/sun/java2d/SunGraphics2D;->validFontInfo:Z

    .line 956
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidatePipe()V

    goto :goto_0

    .line 938
    .end local v0    # "paintClass":Ljava/lang/Class;
    :cond_3
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    if-nez v1, :cond_2

    .line 939
    iput v4, p0, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    goto :goto_1

    .line 946
    .restart local v0    # "paintClass":Ljava/lang/Class;
    :cond_4
    const-class v1, Lae/java/awt/LinearGradientPaint;

    if-ne v0, v1, :cond_5

    .line 947
    const/4 v1, 0x3

    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    goto :goto_2

    .line 948
    :cond_5
    const-class v1, Lae/java/awt/RadialGradientPaint;

    if-ne v0, v1, :cond_6

    .line 949
    const/4 v1, 0x4

    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    goto :goto_2

    .line 950
    :cond_6
    const-class v1, Lae/java/awt/TexturePaint;

    if-ne v0, v1, :cond_7

    .line 951
    const/4 v1, 0x5

    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    goto :goto_2

    .line 953
    :cond_7
    const/4 v1, 0x6

    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->paintState:I

    goto :goto_2
.end method

.method public setPaintMode()V
    .locals 1

    .prologue
    .line 1973
    sget-object v0, Lae/java/awt/AlphaComposite;->SrcOver:Lae/java/awt/AlphaComposite;

    invoke-virtual {p0, v0}, Lae/sun/java2d/SunGraphics2D;->setComposite(Lae/java/awt/Composite;)V

    .line 1974
    return-void
.end method

.method public setRenderingHint(Lae/java/awt/RenderingHints$Key;Ljava/lang/Object;)V
    .locals 11
    .param p1, "hintKey"    # Lae/java/awt/RenderingHints$Key;
    .param p2, "hintValue"    # Ljava/lang/Object;

    .prologue
    const/4 v6, 0x2

    const/4 v10, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x0

    .line 1112
    invoke-virtual {p1, p2}, Lae/java/awt/RenderingHints$Key;->isCompatibleValue(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_0

    .line 1113
    new-instance v5, Ljava/lang/IllegalArgumentException;

    .line 1114
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " is not compatible with "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 1113
    invoke-direct {v5, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 1116
    :cond_0
    instance-of v5, p1, Lae/sun/awt/SunHints$Key;

    if-eqz v5, :cond_d

    .line 1118
    const/4 v4, 0x0

    .line 1119
    .local v4, "textStateChanged":Z
    const/4 v1, 0x1

    .local v1, "recognized":Z
    move-object v3, p1

    .line 1120
    check-cast v3, Lae/sun/awt/SunHints$Key;

    .line 1122
    .local v3, "sunKey":Lae/sun/awt/SunHints$Key;
    sget-object v5, Lae/sun/awt/SunHints;->KEY_TEXT_ANTIALIAS_LCD_CONTRAST:Lae/java/awt/RenderingHints$Key;

    if-ne v3, v5, :cond_4

    move-object v5, p2

    .line 1123
    check-cast v5, Ljava/lang/Integer;

    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    move-result v0

    .line 1127
    .local v0, "newHint":I
    :goto_0
    invoke-virtual {v3}, Lae/sun/awt/SunHints$Key;->getIndex()I

    move-result v5

    sparse-switch v5, :sswitch_data_0

    .line 1189
    const/4 v1, 0x0

    .line 1190
    const/4 v2, 0x0

    .line 1193
    .local v2, "stateChanged":Z
    :cond_1
    :goto_1
    if-eqz v1, :cond_d

    .line 1194
    if-eqz v2, :cond_2

    .line 1195
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidatePipe()V

    .line 1196
    if-eqz v4, :cond_2

    .line 1197
    iput-object v10, p0, Lae/sun/java2d/SunGraphics2D;->fontMetrics:Lae/java/awt/FontMetrics;

    .line 1198
    iput-object v10, p0, Lae/sun/java2d/SunGraphics2D;->cachedFRC:Lae/java/awt/font/FontRenderContext;

    .line 1199
    iput-boolean v8, p0, Lae/sun/java2d/SunGraphics2D;->validFontInfo:Z

    .line 1200
    iput-object v10, p0, Lae/sun/java2d/SunGraphics2D;->glyphVectorFontInfo:Lae/sun/java2d/loops/FontInfo;

    .line 1203
    :cond_2
    iget-object v5, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    if-eqz v5, :cond_3

    .line 1204
    iget-object v5, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    invoke-virtual {v5, p1, p2}, Lae/java/awt/RenderingHints;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1214
    .end local v0    # "newHint":I
    .end local v1    # "recognized":Z
    .end local v2    # "stateChanged":Z
    .end local v3    # "sunKey":Lae/sun/awt/SunHints$Key;
    .end local v4    # "textStateChanged":Z
    :cond_3
    :goto_2
    return-void

    .restart local v1    # "recognized":Z
    .restart local v3    # "sunKey":Lae/sun/awt/SunHints$Key;
    .restart local v4    # "textStateChanged":Z
    :cond_4
    move-object v5, p2

    .line 1125
    check-cast v5, Lae/sun/awt/SunHints$Value;

    invoke-virtual {v5}, Lae/sun/awt/SunHints$Value;->getIndex()I

    move-result v0

    .restart local v0    # "newHint":I
    goto :goto_0

    .line 1129
    :sswitch_0
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->renderHint:I

    if-eq v5, v0, :cond_5

    move v2, v7

    .line 1130
    .restart local v2    # "stateChanged":Z
    :goto_3
    if-eqz v2, :cond_1

    .line 1131
    iput v0, p0, Lae/sun/java2d/SunGraphics2D;->renderHint:I

    .line 1132
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->interpolationHint:I

    const/4 v9, -0x1

    if-ne v5, v9, :cond_1

    .line 1134
    if-ne v0, v6, :cond_6

    move v5, v6

    .line 1133
    :goto_4
    iput v5, p0, Lae/sun/java2d/SunGraphics2D;->interpolationType:I

    goto :goto_1

    .end local v2    # "stateChanged":Z
    :cond_5
    move v2, v8

    .line 1129
    goto :goto_3

    .restart local v2    # "stateChanged":Z
    :cond_6
    move v5, v7

    .line 1136
    goto :goto_4

    .line 1141
    .end local v2    # "stateChanged":Z
    :sswitch_1
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->antialiasHint:I

    if-eq v5, v0, :cond_7

    move v2, v7

    .line 1142
    .restart local v2    # "stateChanged":Z
    :goto_5
    iput v0, p0, Lae/sun/java2d/SunGraphics2D;->antialiasHint:I

    .line 1143
    if-eqz v2, :cond_1

    .line 1145
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->textAntialiasHint:I

    if-nez v5, :cond_8

    move v4, v7

    .line 1147
    :goto_6
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    const/4 v6, 0x3

    if-eq v5, v6, :cond_1

    .line 1148
    iget-object v5, p0, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    check-cast v5, Lae/java/awt/BasicStroke;

    invoke-direct {p0, v5}, Lae/sun/java2d/SunGraphics2D;->validateBasicStroke(Lae/java/awt/BasicStroke;)V

    goto :goto_1

    .end local v2    # "stateChanged":Z
    :cond_7
    move v2, v8

    .line 1141
    goto :goto_5

    .restart local v2    # "stateChanged":Z
    :cond_8
    move v4, v8

    .line 1145
    goto :goto_6

    .line 1153
    .end local v2    # "stateChanged":Z
    :sswitch_2
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->textAntialiasHint:I

    if-eq v5, v0, :cond_9

    move v2, v7

    .line 1154
    .restart local v2    # "stateChanged":Z
    :goto_7
    move v4, v2

    .line 1155
    iput v0, p0, Lae/sun/java2d/SunGraphics2D;->textAntialiasHint:I

    goto :goto_1

    .end local v2    # "stateChanged":Z
    :cond_9
    move v2, v8

    .line 1153
    goto :goto_7

    .line 1158
    :sswitch_3
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->fractionalMetricsHint:I

    if-eq v5, v0, :cond_a

    move v2, v7

    .line 1159
    .restart local v2    # "stateChanged":Z
    :goto_8
    move v4, v2

    .line 1160
    iput v0, p0, Lae/sun/java2d/SunGraphics2D;->fractionalMetricsHint:I

    goto :goto_1

    .end local v2    # "stateChanged":Z
    :cond_a
    move v2, v8

    .line 1158
    goto :goto_8

    .line 1163
    :sswitch_4
    const/4 v2, 0x0

    .line 1165
    .restart local v2    # "stateChanged":Z
    iput v0, p0, Lae/sun/java2d/SunGraphics2D;->lcdTextContrast:I

    goto :goto_1

    .line 1168
    .end local v2    # "stateChanged":Z
    :sswitch_5
    iput v0, p0, Lae/sun/java2d/SunGraphics2D;->interpolationHint:I

    .line 1169
    packed-switch v0, :pswitch_data_0

    .line 1178
    const/4 v0, 0x1

    .line 1181
    :goto_9
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->interpolationType:I

    if-eq v5, v0, :cond_b

    move v2, v7

    .line 1182
    .restart local v2    # "stateChanged":Z
    :goto_a
    iput v0, p0, Lae/sun/java2d/SunGraphics2D;->interpolationType:I

    goto/16 :goto_1

    .line 1171
    .end local v2    # "stateChanged":Z
    :pswitch_0
    const/4 v0, 0x3

    .line 1172
    goto :goto_9

    .line 1174
    :pswitch_1
    const/4 v0, 0x2

    .line 1175
    goto :goto_9

    :cond_b
    move v2, v8

    .line 1181
    goto :goto_a

    .line 1185
    :sswitch_6
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->strokeHint:I

    if-eq v5, v0, :cond_c

    move v2, v7

    .line 1186
    .restart local v2    # "stateChanged":Z
    :goto_b
    iput v0, p0, Lae/sun/java2d/SunGraphics2D;->strokeHint:I

    goto/16 :goto_1

    .end local v2    # "stateChanged":Z
    :cond_c
    move v2, v8

    .line 1185
    goto :goto_b

    .line 1210
    .end local v0    # "newHint":I
    .end local v1    # "recognized":Z
    .end local v3    # "sunKey":Lae/sun/awt/SunHints$Key;
    .end local v4    # "textStateChanged":Z
    :cond_d
    iget-object v5, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    if-nez v5, :cond_e

    .line 1211
    invoke-virtual {p0, v10}, Lae/sun/java2d/SunGraphics2D;->makeHints(Ljava/util/Map;)Lae/java/awt/RenderingHints;

    move-result-object v5

    iput-object v5, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    .line 1213
    :cond_e
    iget-object v5, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    invoke-virtual {v5, p1, p2}, Lae/java/awt/RenderingHints;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto/16 :goto_2

    .line 1127
    nop

    :sswitch_data_0
    .sparse-switch
        0x0 -> :sswitch_0
        0x1 -> :sswitch_1
        0x2 -> :sswitch_2
        0x3 -> :sswitch_3
        0x5 -> :sswitch_5
        0x8 -> :sswitch_6
        0x64 -> :sswitch_4
    .end sparse-switch

    .line 1169
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public setRenderingHints(Ljava/util/Map;)V
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/Map",
            "<**>;)V"
        }
    .end annotation

    .prologue
    .local p1, "hints":Ljava/util/Map;, "Ljava/util/Map<**>;"
    const/4 v5, 0x0

    const/4 v4, 0x1

    .line 1273
    const/4 v3, 0x0

    iput-object v3, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    .line 1274
    iput v5, p0, Lae/sun/java2d/SunGraphics2D;->renderHint:I

    .line 1275
    iput v4, p0, Lae/sun/java2d/SunGraphics2D;->antialiasHint:I

    .line 1276
    iput v5, p0, Lae/sun/java2d/SunGraphics2D;->textAntialiasHint:I

    .line 1277
    iput v4, p0, Lae/sun/java2d/SunGraphics2D;->fractionalMetricsHint:I

    .line 1278
    sget v3, Lae/sun/java2d/SunGraphics2D;->lcdTextContrastDefaultValue:I

    iput v3, p0, Lae/sun/java2d/SunGraphics2D;->lcdTextContrast:I

    .line 1279
    const/4 v3, -0x1

    iput v3, p0, Lae/sun/java2d/SunGraphics2D;->interpolationHint:I

    .line 1280
    iput v4, p0, Lae/sun/java2d/SunGraphics2D;->interpolationType:I

    .line 1281
    const/4 v0, 0x0

    .line 1282
    .local v0, "customHintPresent":Z
    invoke-interface {p1}, Ljava/util/Map;->keySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 1283
    .local v1, "iter":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-nez v3, :cond_1

    .line 1298
    if-eqz v0, :cond_0

    .line 1299
    invoke-virtual {p0, p1}, Lae/sun/java2d/SunGraphics2D;->makeHints(Ljava/util/Map;)Lae/java/awt/RenderingHints;

    move-result-object v3

    iput-object v3, p0, Lae/sun/java2d/SunGraphics2D;->hints:Lae/java/awt/RenderingHints;

    .line 1301
    :cond_0
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidatePipe()V

    .line 1302
    return-void

    .line 1284
    :cond_1
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    .line 1285
    .local v2, "key":Ljava/lang/Object;
    sget-object v3, Lae/sun/awt/SunHints;->KEY_RENDERING:Lae/sun/awt/SunHints$Key;

    if-eq v2, v3, :cond_2

    .line 1286
    sget-object v3, Lae/sun/awt/SunHints;->KEY_ANTIALIASING:Lae/sun/awt/SunHints$Key;

    if-eq v2, v3, :cond_2

    .line 1287
    sget-object v3, Lae/sun/awt/SunHints;->KEY_TEXT_ANTIALIASING:Lae/sun/awt/SunHints$Key;

    if-eq v2, v3, :cond_2

    .line 1288
    sget-object v3, Lae/sun/awt/SunHints;->KEY_FRACTIONALMETRICS:Lae/sun/awt/SunHints$Key;

    if-eq v2, v3, :cond_2

    .line 1289
    sget-object v3, Lae/sun/awt/SunHints;->KEY_TEXT_ANTIALIAS_LCD_CONTRAST:Lae/java/awt/RenderingHints$Key;

    if-eq v2, v3, :cond_2

    .line 1290
    sget-object v3, Lae/sun/awt/SunHints;->KEY_STROKE_CONTROL:Lae/sun/awt/SunHints$Key;

    if-eq v2, v3, :cond_2

    .line 1291
    sget-object v3, Lae/sun/awt/SunHints;->KEY_INTERPOLATION:Lae/sun/awt/SunHints$Key;

    if-ne v2, v3, :cond_3

    :cond_2
    move-object v3, v2

    .line 1293
    check-cast v3, Lae/java/awt/RenderingHints$Key;

    invoke-interface {p1, v2}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {p0, v3, v4}, Lae/sun/java2d/SunGraphics2D;->setRenderingHint(Lae/java/awt/RenderingHints$Key;Ljava/lang/Object;)V

    goto :goto_0

    .line 1295
    :cond_3
    const/4 v0, 0x1

    goto :goto_0
.end method

.method public setStroke(Lae/java/awt/Stroke;)V
    .locals 3
    .param p1, "s"    # Lae/java/awt/Stroke;

    .prologue
    .line 1080
    if-nez p1, :cond_0

    .line 1081
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "null Stroke"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 1083
    :cond_0
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    .line 1084
    .local v0, "saveStrokeState":I
    iput-object p1, p0, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    .line 1085
    instance-of v1, p1, Lae/java/awt/BasicStroke;

    if-eqz v1, :cond_2

    .line 1086
    check-cast p1, Lae/java/awt/BasicStroke;

    .end local p1    # "s":Lae/java/awt/Stroke;
    invoke-direct {p0, p1}, Lae/sun/java2d/SunGraphics2D;->validateBasicStroke(Lae/java/awt/BasicStroke;)V

    .line 1090
    :goto_0
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    if-eq v1, v0, :cond_1

    .line 1091
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidatePipe()V

    .line 1093
    :cond_1
    return-void

    .line 1088
    .restart local p1    # "s":Lae/java/awt/Stroke;
    :cond_2
    const/4 v1, 0x3

    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    goto :goto_0
.end method

.method public setTransform(Lae/java/awt/geom/AffineTransform;)V
    .locals 6
    .param p1, "Tx"    # Lae/java/awt/geom/AffineTransform;

    .prologue
    .line 1528
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->constrainX:I

    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->constrainY:I

    or-int/2addr v0, v1

    if-nez v0, :cond_0

    .line 1529
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v0, p1}, Lae/java/awt/geom/AffineTransform;->setTransform(Lae/java/awt/geom/AffineTransform;)V

    .line 1534
    :goto_0
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidateTransform()V

    .line 1535
    return-void

    .line 1531
    :cond_0
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->constrainX:I

    int-to-double v2, v1

    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->constrainY:I

    int-to-double v4, v1

    invoke-virtual {v0, v2, v3, v4, v5}, Lae/java/awt/geom/AffineTransform;->setToTranslation(DD)V

    .line 1532
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v0, p1}, Lae/java/awt/geom/AffineTransform;->concatenate(Lae/java/awt/geom/AffineTransform;)V

    goto :goto_0
.end method

.method public setXORMode(Lae/java/awt/Color;)V
    .locals 2
    .param p1, "c"    # Lae/java/awt/Color;

    .prologue
    .line 1977
    if-nez p1, :cond_0

    .line 1978
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "null XORColor"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1980
    :cond_0
    new-instance v0, Lae/sun/java2d/loops/XORComposite;

    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-direct {v0, p1, v1}, Lae/sun/java2d/loops/XORComposite;-><init>(Lae/java/awt/Color;Lae/sun/java2d/SurfaceData;)V

    invoke-virtual {p0, v0}, Lae/sun/java2d/SunGraphics2D;->setComposite(Lae/java/awt/Composite;)V

    .line 1981
    return-void
.end method

.method public shear(DD)V
    .locals 1
    .param p1, "shx"    # D
    .param p3, "shy"    # D

    .prologue
    .line 1479
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v0, p1, p2, p3, p4}, Lae/java/awt/geom/AffineTransform;->shear(DD)V

    .line 1480
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidateTransform()V

    .line 1481
    return-void
.end method

.method public transform(Lae/java/awt/geom/AffineTransform;)V
    .locals 1
    .param p1, "xform"    # Lae/java/awt/geom/AffineTransform;

    .prologue
    .line 1501
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v0, p1}, Lae/java/awt/geom/AffineTransform;->concatenate(Lae/java/awt/geom/AffineTransform;)V

    .line 1502
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidateTransform()V

    .line 1503
    return-void
.end method

.method protected transformBounds(Lae/java/awt/Rectangle;Lae/java/awt/geom/AffineTransform;)Lae/java/awt/Rectangle;
    .locals 2
    .param p1, "rect"    # Lae/java/awt/Rectangle;
    .param p2, "tx"    # Lae/java/awt/geom/AffineTransform;

    .prologue
    .line 2783
    invoke-virtual {p2}, Lae/java/awt/geom/AffineTransform;->isIdentity()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 2788
    .end local p1    # "rect":Lae/java/awt/Rectangle;
    :goto_0
    return-object p1

    .line 2787
    .restart local p1    # "rect":Lae/java/awt/Rectangle;
    :cond_0
    invoke-static {p2, p1}, Lae/sun/java2d/SunGraphics2D;->transformShape(Lae/java/awt/geom/AffineTransform;Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object v0

    .line 2788
    .local v0, "s":Lae/java/awt/Shape;
    invoke-interface {v0}, Lae/java/awt/Shape;->getBounds()Lae/java/awt/Rectangle;

    move-result-object p1

    goto :goto_0
.end method

.method protected transformShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;
    .locals 2
    .param p1, "s"    # Lae/java/awt/Shape;

    .prologue
    .line 1859
    if-nez p1, :cond_0

    .line 1860
    const/4 v0, 0x0

    .line 1865
    :goto_0
    return-object v0

    .line 1862
    :cond_0
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v1, 0x1

    if-le v0, v1, :cond_1

    .line 1863
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-static {v0, p1}, Lae/sun/java2d/SunGraphics2D;->transformShape(Lae/java/awt/geom/AffineTransform;Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object v0

    goto :goto_0

    .line 1865
    :cond_1
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    invoke-static {v0, v1, p1}, Lae/sun/java2d/SunGraphics2D;->transformShape(IILae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object v0

    goto :goto_0
.end method

.method public translate(DD)V
    .locals 1
    .param p1, "tx"    # D
    .param p3, "ty"    # D

    .prologue
    .line 1404
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v0, p1, p2, p3, p4}, Lae/java/awt/geom/AffineTransform;->translate(DD)V

    .line 1405
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidateTransform()V

    .line 1406
    return-void
.end method

.method public translate(II)V
    .locals 6
    .param p1, "x"    # I
    .param p2, "y"    # I

    .prologue
    const/4 v0, 0x1

    .line 1509
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    int-to-double v2, p1

    int-to-double v4, p2

    invoke-virtual {v1, v2, v3, v4, v5}, Lae/java/awt/geom/AffineTransform;->translate(DD)V

    .line 1510
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    if-gt v1, v0, :cond_1

    .line 1511
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    add-int/2addr v1, p1

    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    .line 1512
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    add-int/2addr v1, p2

    iput v1, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    .line 1513
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    or-int/2addr v1, v2

    if-nez v1, :cond_0

    .line 1514
    const/4 v0, 0x0

    .line 1513
    :cond_0
    iput v0, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    .line 1518
    :goto_0
    return-void

    .line 1516
    :cond_1
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidateTransform()V

    goto :goto_0
.end method

.method public untransformShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;
    .locals 4
    .param p1, "s"    # Lae/java/awt/Shape;

    .prologue
    const/4 v1, 0x0

    .line 1870
    if-nez p1, :cond_0

    .line 1880
    :goto_0
    return-object v1

    .line 1873
    :cond_0
    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v3, 0x1

    if-le v2, v3, :cond_1

    .line 1875
    :try_start_0
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v2}, Lae/java/awt/geom/AffineTransform;->createInverse()Lae/java/awt/geom/AffineTransform;

    move-result-object v2

    invoke-static {v2, p1}, Lae/sun/java2d/SunGraphics2D;->transformShape(Lae/java/awt/geom/AffineTransform;Lae/java/awt/Shape;)Lae/java/awt/Shape;
    :try_end_0
    .catch Lae/java/awt/geom/NoninvertibleTransformException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    goto :goto_0

    .line 1876
    :catch_0
    move-exception v0

    .line 1877
    .local v0, "e":Lae/java/awt/geom/NoninvertibleTransformException;
    goto :goto_0

    .line 1880
    .end local v0    # "e":Lae/java/awt/geom/NoninvertibleTransformException;
    :cond_1
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->transX:I

    neg-int v1, v1

    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->transY:I

    neg-int v2, v2

    invoke-static {v1, v2, p1}, Lae/sun/java2d/SunGraphics2D;->transformShape(IILae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object v1

    goto :goto_0
.end method

.method final validateColor()V
    .locals 5

    .prologue
    .line 1650
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    sget-object v4, Lae/sun/java2d/loops/CompositeType;->Clear:Lae/sun/java2d/loops/CompositeType;

    if-ne v3, v4, :cond_1

    .line 1651
    const/4 v2, 0x0

    .line 1663
    .local v2, "eargb":I
    :cond_0
    :goto_0
    iput v2, p0, Lae/sun/java2d/SunGraphics2D;->eargb:I

    .line 1664
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v3, v2}, Lae/sun/java2d/SurfaceData;->pixelFor(I)I

    move-result v3

    iput v3, p0, Lae/sun/java2d/SunGraphics2D;->pixel:I

    .line 1665
    return-void

    .line 1653
    .end local v2    # "eargb":I
    :cond_1
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->foregroundColor:Lae/java/awt/Color;

    invoke-virtual {v3}, Lae/java/awt/Color;->getRGB()I

    move-result v2

    .line 1654
    .restart local v2    # "eargb":I
    iget v3, p0, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    const/4 v4, 0x1

    if-gt v3, v4, :cond_0

    .line 1655
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    sget-object v4, Lae/sun/java2d/loops/CompositeType;->SrcNoEa:Lae/sun/java2d/loops/CompositeType;

    if-eq v3, v4, :cond_0

    .line 1656
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    sget-object v4, Lae/sun/java2d/loops/CompositeType;->SrcOverNoEa:Lae/sun/java2d/loops/CompositeType;

    if-eq v3, v4, :cond_0

    .line 1658
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->composite:Lae/java/awt/Composite;

    check-cast v1, Lae/java/awt/AlphaComposite;

    .line 1659
    .local v1, "alphacomp":Lae/java/awt/AlphaComposite;
    invoke-virtual {v1}, Lae/java/awt/AlphaComposite;->getAlpha()F

    move-result v3

    ushr-int/lit8 v4, v2, 0x18

    int-to-float v4, v4

    mul-float/2addr v3, v4

    invoke-static {v3}, Ljava/lang/Math;->round(F)I

    move-result v0

    .line 1660
    .local v0, "a":I
    const v3, 0xffffff

    and-int/2addr v3, v2

    shl-int/lit8 v4, v0, 0x18

    or-int v2, v3, v4

    goto :goto_0
.end method

.method protected validateCompClip()V
    .locals 10

    .prologue
    const/4 v5, 0x1

    const/4 v9, 0x0

    const/4 v6, 0x2

    .line 1818
    iget v2, p0, Lae/sun/java2d/SunGraphics2D;->clipState:I

    .line 1819
    .local v2, "origClipState":I
    iget-object v7, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    if-nez v7, :cond_2

    .line 1820
    iput v9, p0, Lae/sun/java2d/SunGraphics2D;->clipState:I

    .line 1821
    iget-object v5, p0, Lae/sun/java2d/SunGraphics2D;->devClip:Lae/sun/java2d/pipe/Region;

    iput-object v5, p0, Lae/sun/java2d/SunGraphics2D;->clipRegion:Lae/sun/java2d/pipe/Region;

    .line 1846
    :goto_0
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->clipState:I

    if-eq v2, v5, :cond_1

    .line 1847
    iget v5, p0, Lae/sun/java2d/SunGraphics2D;->clipState:I

    if-eq v5, v6, :cond_0

    if-ne v2, v6, :cond_1

    .line 1849
    :cond_0
    iput-boolean v9, p0, Lae/sun/java2d/SunGraphics2D;->validFontInfo:Z

    .line 1850
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->invalidatePipe()V

    .line 1852
    :cond_1
    return-void

    .line 1822
    :cond_2
    iget-object v7, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    instance-of v7, v7, Lae/java/awt/geom/Rectangle2D;

    if-eqz v7, :cond_4

    .line 1823
    iput v5, p0, Lae/sun/java2d/SunGraphics2D;->clipState:I

    .line 1824
    iget-object v5, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    instance-of v5, v5, Lae/java/awt/Rectangle;

    if-eqz v5, :cond_3

    .line 1825
    iget-object v7, p0, Lae/sun/java2d/SunGraphics2D;->devClip:Lae/sun/java2d/pipe/Region;

    iget-object v5, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    check-cast v5, Lae/java/awt/Rectangle;

    invoke-virtual {v7, v5}, Lae/sun/java2d/pipe/Region;->getIntersection(Lae/java/awt/Rectangle;)Lae/sun/java2d/pipe/Region;

    move-result-object v5

    iput-object v5, p0, Lae/sun/java2d/SunGraphics2D;->clipRegion:Lae/sun/java2d/pipe/Region;

    goto :goto_0

    .line 1827
    :cond_3
    iget-object v5, p0, Lae/sun/java2d/SunGraphics2D;->devClip:Lae/sun/java2d/pipe/Region;

    iget-object v7, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    invoke-interface {v7}, Lae/java/awt/Shape;->getBounds()Lae/java/awt/Rectangle;

    move-result-object v7

    invoke-virtual {v5, v7}, Lae/sun/java2d/pipe/Region;->getIntersection(Lae/java/awt/Rectangle;)Lae/sun/java2d/pipe/Region;

    move-result-object v5

    iput-object v5, p0, Lae/sun/java2d/SunGraphics2D;->clipRegion:Lae/sun/java2d/pipe/Region;

    goto :goto_0

    .line 1830
    :cond_4
    iget-object v7, p0, Lae/sun/java2d/SunGraphics2D;->usrClip:Lae/java/awt/Shape;

    const/4 v8, 0x0

    invoke-interface {v7, v8}, Lae/java/awt/Shape;->getPathIterator(Lae/java/awt/geom/AffineTransform;)Lae/java/awt/geom/PathIterator;

    move-result-object v1

    .line 1831
    .local v1, "cpi":Lae/java/awt/geom/PathIterator;
    const/4 v7, 0x4

    new-array v0, v7, [I

    .line 1832
    .local v0, "box":[I
    invoke-static {p0}, Lae/sun/java2d/pipe/LoopPipe;->getFillSSI(Lae/sun/java2d/SunGraphics2D;)Lae/sun/java2d/pipe/ShapeSpanIterator;

    move-result-object v4

    .line 1834
    .local v4, "sr":Lae/sun/java2d/pipe/ShapeSpanIterator;
    :try_start_0
    iget-object v7, p0, Lae/sun/java2d/SunGraphics2D;->devClip:Lae/sun/java2d/pipe/Region;

    invoke-virtual {v4, v7}, Lae/sun/java2d/pipe/ShapeSpanIterator;->setOutputArea(Lae/sun/java2d/pipe/Region;)V

    .line 1835
    invoke-virtual {v4, v1}, Lae/sun/java2d/pipe/ShapeSpanIterator;->appendPath(Lae/java/awt/geom/PathIterator;)V

    .line 1836
    invoke-virtual {v4, v0}, Lae/sun/java2d/pipe/ShapeSpanIterator;->getPathBox([I)V

    .line 1837
    invoke-static {v0}, Lae/sun/java2d/pipe/Region;->getInstance([I)Lae/sun/java2d/pipe/Region;

    move-result-object v3

    .line 1838
    .local v3, "r":Lae/sun/java2d/pipe/Region;
    invoke-virtual {v3, v4}, Lae/sun/java2d/pipe/Region;->appendSpans(Lae/sun/java2d/pipe/SpanIterator;)V

    .line 1839
    iput-object v3, p0, Lae/sun/java2d/SunGraphics2D;->clipRegion:Lae/sun/java2d/pipe/Region;

    .line 1841
    invoke-virtual {v3}, Lae/sun/java2d/pipe/Region;->isRectangular()Z

    move-result v7

    if-eqz v7, :cond_5

    .line 1840
    :goto_1
    iput v5, p0, Lae/sun/java2d/SunGraphics2D;->clipState:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 1843
    invoke-virtual {v4}, Lae/sun/java2d/pipe/ShapeSpanIterator;->dispose()V

    goto :goto_0

    :cond_5
    move v5, v6

    .line 1841
    goto :goto_1

    .line 1842
    .end local v3    # "r":Lae/sun/java2d/pipe/Region;
    :catchall_0
    move-exception v5

    .line 1843
    invoke-virtual {v4}, Lae/sun/java2d/pipe/ShapeSpanIterator;->dispose()V

    .line 1844
    throw v5
.end method

.method public validatePipe()V
    .locals 1

    .prologue
    .line 373
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->surfaceData:Lae/sun/java2d/SurfaceData;

    invoke-virtual {v0, p0}, Lae/sun/java2d/SurfaceData;->validatePipe(Lae/sun/java2d/SunGraphics2D;)V

    .line 374
    return-void
.end method

.class public Lae/sun/java2d/pipe/LoopPipe;
.super Ljava/lang/Object;
.source "LoopPipe.java"

# interfaces
.implements Lae/sun/java2d/pipe/PixelDrawPipe;
.implements Lae/sun/java2d/pipe/PixelFillPipe;
.implements Lae/sun/java2d/pipe/ShapeDrawPipe;


# static fields
.field static final RenderEngine:Lae/sun/java2d/pipe/RenderingEngine;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .prologue
    .line 51
    invoke-static {}, Lae/sun/java2d/pipe/RenderingEngine;->getInstance()Lae/sun/java2d/pipe/RenderingEngine;

    move-result-object v0

    sput-object v0, Lae/sun/java2d/pipe/LoopPipe;->RenderEngine:Lae/sun/java2d/pipe/RenderingEngine;

    return-void
.end method

.method public constructor <init>()V
    .locals 0

    .prologue
    .line 46
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method private static fillSpans(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/pipe/SpanIterator;)V
    .locals 10
    .param p0, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p1, "si"    # Lae/sun/java2d/pipe/SpanIterator;

    .prologue
    const/4 v9, 0x2

    .line 328
    iget v0, p0, Lae/sun/java2d/SunGraphics2D;->clipState:I

    if-ne v0, v9, :cond_1

    .line 329
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->clipRegion:Lae/sun/java2d/pipe/Region;

    invoke-virtual {v0, p1}, Lae/sun/java2d/pipe/Region;->filter(Lae/sun/java2d/pipe/SpanIterator;)Lae/sun/java2d/pipe/SpanIterator;

    move-result-object p1

    .line 339
    :cond_0
    const/4 v0, 0x4

    new-array v8, v0, [I

    .line 340
    .local v8, "spanbox":[I
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getSurfaceData()Lae/sun/java2d/SurfaceData;

    move-result-object v2

    .line 341
    .local v2, "sd":Lae/sun/java2d/SurfaceData;
    :goto_0
    invoke-interface {p1, v8}, Lae/sun/java2d/pipe/SpanIterator;->nextSpan([I)Z

    move-result v0

    if-nez v0, :cond_2

    .line 348
    .end local v2    # "sd":Lae/sun/java2d/SurfaceData;
    .end local v8    # "spanbox":[I
    :goto_1
    return-void

    .line 333
    :cond_1
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->loops:Lae/sun/java2d/loops/RenderLoops;

    iget-object v7, v0, Lae/sun/java2d/loops/RenderLoops;->fillSpansLoop:Lae/sun/java2d/loops/FillSpans;

    .line 334
    .local v7, "fs":Lae/sun/java2d/loops/FillSpans;
    if-eqz v7, :cond_0

    .line 335
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getSurfaceData()Lae/sun/java2d/SurfaceData;

    move-result-object v0

    invoke-virtual {v7, p0, v0, p1}, Lae/sun/java2d/loops/FillSpans;->FillSpans(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/SurfaceData;Lae/sun/java2d/pipe/SpanIterator;)V

    goto :goto_1

    .line 342
    .end local v7    # "fs":Lae/sun/java2d/loops/FillSpans;
    .restart local v2    # "sd":Lae/sun/java2d/SurfaceData;
    .restart local v8    # "spanbox":[I
    :cond_2
    const/4 v0, 0x0

    aget v3, v8, v0

    .line 343
    .local v3, "x":I
    const/4 v0, 0x1

    aget v4, v8, v0

    .line 344
    .local v4, "y":I
    aget v0, v8, v9

    sub-int v5, v0, v3

    .line 345
    .local v5, "w":I
    const/4 v0, 0x3

    aget v0, v8, v0

    sub-int v6, v0, v4

    .line 346
    .local v6, "h":I
    iget-object v0, p0, Lae/sun/java2d/SunGraphics2D;->loops:Lae/sun/java2d/loops/RenderLoops;

    iget-object v0, v0, Lae/sun/java2d/loops/RenderLoops;->fillRectLoop:Lae/sun/java2d/loops/FillRect;

    move-object v1, p0

    invoke-virtual/range {v0 .. v6}, Lae/sun/java2d/loops/FillRect;->FillRect(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/SurfaceData;IIII)V

    goto :goto_0
.end method

.method public static getFillSSI(Lae/sun/java2d/SunGraphics2D;)Lae/sun/java2d/pipe/ShapeSpanIterator;
    .locals 3
    .param p0, "sg2d"    # Lae/sun/java2d/SunGraphics2D;

    .prologue
    .line 228
    iget-object v1, p0, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    instance-of v1, v1, Lae/java/awt/BasicStroke;

    if-eqz v1, :cond_0

    .line 229
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->strokeHint:I

    const/4 v2, 0x2

    if-eq v1, v2, :cond_0

    .line 228
    const/4 v0, 0x1

    .line 230
    .local v0, "adjust":Z
    :goto_0
    new-instance v1, Lae/sun/java2d/pipe/ShapeSpanIterator;

    invoke-direct {v1, v0}, Lae/sun/java2d/pipe/ShapeSpanIterator;-><init>(Z)V

    return-object v1

    .line 228
    .end local v0    # "adjust":Z
    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public static getStrokeSpans(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)Lae/sun/java2d/pipe/ShapeSpanIterator;
    .locals 9
    .param p0, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p1, "s"    # Lae/java/awt/Shape;

    .prologue
    const/4 v5, 0x1

    const/4 v0, 0x0

    .line 263
    new-instance v7, Lae/sun/java2d/pipe/ShapeSpanIterator;

    invoke-direct {v7, v0}, Lae/sun/java2d/pipe/ShapeSpanIterator;-><init>(Z)V

    .line 266
    .local v7, "sr":Lae/sun/java2d/pipe/ShapeSpanIterator;
    :try_start_0
    invoke-virtual {p0}, Lae/sun/java2d/SunGraphics2D;->getCompClip()Lae/sun/java2d/pipe/Region;

    move-result-object v1

    invoke-virtual {v7, v1}, Lae/sun/java2d/pipe/ShapeSpanIterator;->setOutputArea(Lae/sun/java2d/pipe/Region;)V

    .line 267
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Lae/sun/java2d/pipe/ShapeSpanIterator;->setRule(I)V

    .line 269
    iget-object v3, p0, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    check-cast v3, Lae/java/awt/BasicStroke;

    .line 270
    .local v3, "bs":Lae/java/awt/BasicStroke;
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    if-gt v1, v5, :cond_0

    move v4, v5

    .line 272
    .local v4, "thin":Z
    :goto_0
    iget v1, p0, Lae/sun/java2d/SunGraphics2D;->strokeHint:I

    const/4 v2, 0x2

    if-eq v1, v2, :cond_1

    .line 274
    .local v5, "normalize":Z
    :goto_1
    sget-object v0, Lae/sun/java2d/pipe/LoopPipe;->RenderEngine:Lae/sun/java2d/pipe/RenderingEngine;

    .line 275
    iget-object v2, p0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    .line 276
    const/4 v6, 0x0

    move-object v1, p1

    .line 274
    invoke-virtual/range {v0 .. v7}, Lae/sun/java2d/pipe/RenderingEngine;->strokeTo(Lae/java/awt/Shape;Lae/java/awt/geom/AffineTransform;Lae/java/awt/BasicStroke;ZZZLae/sun/awt/geom/PathConsumer2D;)V
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    .line 284
    return-object v7

    .end local v4    # "thin":Z
    .end local v5    # "normalize":Z
    :cond_0
    move v4, v0

    .line 270
    goto :goto_0

    .restart local v4    # "thin":Z
    :cond_1
    move v5, v0

    .line 272
    goto :goto_1

    .line 277
    .end local v3    # "bs":Lae/java/awt/BasicStroke;
    .end local v4    # "thin":Z
    :catch_0
    move-exception v8

    .line 278
    .local v8, "t":Ljava/lang/Throwable;
    invoke-virtual {v7}, Lae/sun/java2d/pipe/ShapeSpanIterator;->dispose()V

    .line 279
    const/4 v7, 0x0

    .line 280
    invoke-virtual {v8}, Ljava/lang/Throwable;->printStackTrace()V

    .line 281
    new-instance v0, Ljava/lang/InternalError;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "Unable to Stroke shape ("

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 282
    invoke-virtual {v8}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ")"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 281
    invoke-direct {v0, v1}, Ljava/lang/InternalError;-><init>(Ljava/lang/String;)V

    throw v0
.end method


# virtual methods
.method public draw(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V
    .locals 7
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "s"    # Lae/java/awt/Shape;

    .prologue
    .line 170
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    if-nez v0, :cond_2

    .line 174
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v1, 0x1

    if-gt v0, v1, :cond_1

    .line 175
    instance-of v0, p2, Lae/java/awt/geom/Path2D$Float;

    if-eqz v0, :cond_0

    move-object v5, p2

    .line 176
    check-cast v5, Lae/java/awt/geom/Path2D$Float;

    .line 180
    .local v5, "p2df":Lae/java/awt/geom/Path2D$Float;
    :goto_0
    iget v3, p1, Lae/sun/java2d/SunGraphics2D;->transX:I

    .line 181
    .local v3, "transX":I
    iget v4, p1, Lae/sun/java2d/SunGraphics2D;->transY:I

    .line 187
    .local v4, "transY":I
    :goto_1
    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->loops:Lae/sun/java2d/loops/RenderLoops;

    iget-object v0, v0, Lae/sun/java2d/loops/RenderLoops;->drawPathLoop:Lae/sun/java2d/loops/DrawPath;

    invoke-virtual {p1}, Lae/sun/java2d/SunGraphics2D;->getSurfaceData()Lae/sun/java2d/SurfaceData;

    move-result-object v2

    move-object v1, p1

    invoke-virtual/range {v0 .. v5}, Lae/sun/java2d/loops/DrawPath;->DrawPath(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/SurfaceData;IILae/java/awt/geom/Path2D$Float;)V

    .line 204
    .end local v3    # "transX":I
    .end local v4    # "transY":I
    .end local v5    # "p2df":Lae/java/awt/geom/Path2D$Float;
    :goto_2
    return-void

    .line 178
    :cond_0
    new-instance v5, Lae/java/awt/geom/Path2D$Float;

    invoke-direct {v5, p2}, Lae/java/awt/geom/Path2D$Float;-><init>(Lae/java/awt/Shape;)V

    .restart local v5    # "p2df":Lae/java/awt/geom/Path2D$Float;
    goto :goto_0

    .line 183
    .end local v5    # "p2df":Lae/java/awt/geom/Path2D$Float;
    :cond_1
    new-instance v5, Lae/java/awt/geom/Path2D$Float;

    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-direct {v5, p2, v0}, Lae/java/awt/geom/Path2D$Float;-><init>(Lae/java/awt/Shape;Lae/java/awt/geom/AffineTransform;)V

    .line 184
    .restart local v5    # "p2df":Lae/java/awt/geom/Path2D$Float;
    const/4 v3, 0x0

    .line 185
    .restart local v3    # "transX":I
    const/4 v4, 0x0

    .restart local v4    # "transY":I
    goto :goto_1

    .line 192
    .end local v3    # "transX":I
    .end local v4    # "transY":I
    .end local v5    # "p2df":Lae/java/awt/geom/Path2D$Float;
    :cond_2
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_3

    .line 193
    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    invoke-interface {v0, p2}, Lae/java/awt/Stroke;->createStrokedShape(Lae/java/awt/Shape;)Lae/java/awt/Shape;

    move-result-object v0

    invoke-virtual {p0, p1, v0}, Lae/sun/java2d/pipe/LoopPipe;->fill(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V

    goto :goto_2

    .line 197
    :cond_3
    invoke-static {p1, p2}, Lae/sun/java2d/pipe/LoopPipe;->getStrokeSpans(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)Lae/sun/java2d/pipe/ShapeSpanIterator;

    move-result-object v6

    .line 200
    .local v6, "sr":Lae/sun/java2d/pipe/ShapeSpanIterator;
    :try_start_0
    invoke-static {p1, v6}, Lae/sun/java2d/pipe/LoopPipe;->fillSpans(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/pipe/SpanIterator;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 202
    invoke-virtual {v6}, Lae/sun/java2d/pipe/ShapeSpanIterator;->dispose()V

    goto :goto_2

    .line 201
    :catchall_0
    move-exception v0

    .line 202
    invoke-virtual {v6}, Lae/sun/java2d/pipe/ShapeSpanIterator;->dispose()V

    .line 203
    throw v0
.end method

.method public drawArc(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    .locals 10
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "startAngle"    # I
    .param p7, "arcAngle"    # I

    .prologue
    .line 91
    iget-object v9, p1, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    new-instance v1, Lae/java/awt/geom/Arc2D$Float;

    int-to-float v2, p2

    int-to-float v3, p3

    int-to-float v4, p4

    int-to-float v5, p5

    .line 92
    move/from16 v0, p6

    int-to-float v6, v0

    move/from16 v0, p7

    int-to-float v7, v0

    .line 93
    const/4 v8, 0x0

    invoke-direct/range {v1 .. v8}, Lae/java/awt/geom/Arc2D$Float;-><init>(FFFFFFI)V

    .line 91
    invoke-interface {v9, p1, v1}, Lae/sun/java2d/pipe/ShapeDrawPipe;->draw(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V

    .line 94
    return-void
.end method

.method public drawLine(Lae/sun/java2d/SunGraphics2D;IIII)V
    .locals 9
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x1"    # I
    .param p3, "y1"    # I
    .param p4, "x2"    # I
    .param p5, "y2"    # I

    .prologue
    .line 56
    iget v7, p1, Lae/sun/java2d/SunGraphics2D;->transX:I

    .line 57
    .local v7, "tX":I
    iget v8, p1, Lae/sun/java2d/SunGraphics2D;->transY:I

    .line 58
    .local v8, "tY":I
    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->loops:Lae/sun/java2d/loops/RenderLoops;

    iget-object v0, v0, Lae/sun/java2d/loops/RenderLoops;->drawLineLoop:Lae/sun/java2d/loops/DrawLine;

    invoke-virtual {p1}, Lae/sun/java2d/SunGraphics2D;->getSurfaceData()Lae/sun/java2d/SurfaceData;

    move-result-object v2

    .line 59
    add-int v3, p2, v7

    add-int v4, p3, v8

    .line 60
    add-int v5, p4, v7

    add-int v6, p5, v8

    move-object v1, p1

    .line 58
    invoke-virtual/range {v0 .. v6}, Lae/sun/java2d/loops/DrawLine;->DrawLine(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/SurfaceData;IIII)V

    .line 61
    return-void
.end method

.method public drawOval(Lae/sun/java2d/SunGraphics2D;IIII)V
    .locals 6
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I

    .prologue
    .line 84
    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    new-instance v1, Lae/java/awt/geom/Ellipse2D$Float;

    int-to-float v2, p2

    int-to-float v3, p3

    int-to-float v4, p4

    int-to-float v5, p5

    invoke-direct {v1, v2, v3, v4, v5}, Lae/java/awt/geom/Ellipse2D$Float;-><init>(FFFF)V

    invoke-interface {v0, p1, v1}, Lae/sun/java2d/pipe/ShapeDrawPipe;->draw(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V

    .line 85
    return-void
.end method

.method public drawPolygon(Lae/sun/java2d/SunGraphics2D;[I[II)V
    .locals 10
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "xPoints"    # [I
    .param p3, "yPoints"    # [I
    .param p4, "nPoints"    # I

    .prologue
    const/4 v6, 0x1

    .line 112
    new-array v5, v6, [I

    const/4 v0, 0x0

    aput p4, v5, v0

    .line 113
    .local v5, "nPointsArray":[I
    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->loops:Lae/sun/java2d/loops/RenderLoops;

    iget-object v0, v0, Lae/sun/java2d/loops/RenderLoops;->drawPolygonsLoop:Lae/sun/java2d/loops/DrawPolygons;

    invoke-virtual {p1}, Lae/sun/java2d/SunGraphics2D;->getSurfaceData()Lae/sun/java2d/SurfaceData;

    move-result-object v2

    .line 116
    iget v7, p1, Lae/sun/java2d/SunGraphics2D;->transX:I

    iget v8, p1, Lae/sun/java2d/SunGraphics2D;->transY:I

    move-object v1, p1

    move-object v3, p2

    move-object v4, p3

    move v9, v6

    .line 113
    invoke-virtual/range {v0 .. v9}, Lae/sun/java2d/loops/DrawPolygons;->DrawPolygons(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/SurfaceData;[I[I[IIIIZ)V

    .line 118
    return-void
.end method

.method public drawPolyline(Lae/sun/java2d/SunGraphics2D;[I[II)V
    .locals 10
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "xPoints"    # [I
    .param p3, "yPoints"    # [I
    .param p4, "nPoints"    # I

    .prologue
    const/4 v6, 0x1

    const/4 v9, 0x0

    .line 100
    new-array v5, v6, [I

    aput p4, v5, v9

    .line 101
    .local v5, "nPointsArray":[I
    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->loops:Lae/sun/java2d/loops/RenderLoops;

    iget-object v0, v0, Lae/sun/java2d/loops/RenderLoops;->drawPolygonsLoop:Lae/sun/java2d/loops/DrawPolygons;

    invoke-virtual {p1}, Lae/sun/java2d/SunGraphics2D;->getSurfaceData()Lae/sun/java2d/SurfaceData;

    move-result-object v2

    .line 104
    iget v7, p1, Lae/sun/java2d/SunGraphics2D;->transX:I

    iget v8, p1, Lae/sun/java2d/SunGraphics2D;->transY:I

    move-object v1, p1

    move-object v3, p2

    move-object v4, p3

    .line 101
    invoke-virtual/range {v0 .. v9}, Lae/sun/java2d/loops/DrawPolygons;->DrawPolygons(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/SurfaceData;[I[I[IIIIZ)V

    .line 106
    return-void
.end method

.method public drawRect(Lae/sun/java2d/SunGraphics2D;IIII)V
    .locals 7
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I

    .prologue
    .line 66
    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->loops:Lae/sun/java2d/loops/RenderLoops;

    iget-object v0, v0, Lae/sun/java2d/loops/RenderLoops;->drawRectLoop:Lae/sun/java2d/loops/DrawRect;

    invoke-virtual {p1}, Lae/sun/java2d/SunGraphics2D;->getSurfaceData()Lae/sun/java2d/SurfaceData;

    move-result-object v2

    .line 67
    iget v1, p1, Lae/sun/java2d/SunGraphics2D;->transX:I

    add-int v3, p2, v1

    .line 68
    iget v1, p1, Lae/sun/java2d/SunGraphics2D;->transY:I

    add-int v4, p3, v1

    move-object v1, p1

    move v5, p4

    move v6, p5

    .line 66
    invoke-virtual/range {v0 .. v6}, Lae/sun/java2d/loops/DrawRect;->DrawRect(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/SurfaceData;IIII)V

    .line 70
    return-void
.end method

.method public drawRoundRect(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    .locals 8
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "arcWidth"    # I
    .param p7, "arcHeight"    # I

    .prologue
    .line 76
    iget-object v7, p1, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    .line 77
    new-instance v0, Lae/java/awt/geom/RoundRectangle2D$Float;

    int-to-float v1, p2

    int-to-float v2, p3

    int-to-float v3, p4

    int-to-float v4, p5

    .line 78
    int-to-float v5, p6

    int-to-float v6, p7

    .line 77
    invoke-direct/range {v0 .. v6}, Lae/java/awt/geom/RoundRectangle2D$Float;-><init>(FFFFFF)V

    .line 76
    invoke-interface {v7, p1, v0}, Lae/sun/java2d/pipe/ShapeDrawPipe;->draw(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V

    .line 79
    return-void
.end method

.method public fill(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V
    .locals 8
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "s"    # Lae/java/awt/Shape;

    .prologue
    .line 288
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    if-nez v0, :cond_2

    .line 292
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v1, 0x1

    if-gt v0, v1, :cond_1

    .line 293
    instance-of v0, p2, Lae/java/awt/geom/Path2D$Float;

    if-eqz v0, :cond_0

    move-object v5, p2

    .line 294
    check-cast v5, Lae/java/awt/geom/Path2D$Float;

    .line 298
    .local v5, "p2df":Lae/java/awt/geom/Path2D$Float;
    :goto_0
    iget v3, p1, Lae/sun/java2d/SunGraphics2D;->transX:I

    .line 299
    .local v3, "transX":I
    iget v4, p1, Lae/sun/java2d/SunGraphics2D;->transY:I

    .line 305
    .local v4, "transY":I
    :goto_1
    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->loops:Lae/sun/java2d/loops/RenderLoops;

    iget-object v0, v0, Lae/sun/java2d/loops/RenderLoops;->fillPathLoop:Lae/sun/java2d/loops/FillPath;

    invoke-virtual {p1}, Lae/sun/java2d/SunGraphics2D;->getSurfaceData()Lae/sun/java2d/SurfaceData;

    move-result-object v2

    move-object v1, p1

    invoke-virtual/range {v0 .. v5}, Lae/sun/java2d/loops/FillPath;->FillPath(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/SurfaceData;IILae/java/awt/geom/Path2D$Float;)V

    .line 322
    .end local v3    # "transX":I
    .end local v4    # "transY":I
    .end local v5    # "p2df":Lae/java/awt/geom/Path2D$Float;
    :goto_2
    return-void

    .line 296
    :cond_0
    new-instance v5, Lae/java/awt/geom/Path2D$Float;

    invoke-direct {v5, p2}, Lae/java/awt/geom/Path2D$Float;-><init>(Lae/java/awt/Shape;)V

    .restart local v5    # "p2df":Lae/java/awt/geom/Path2D$Float;
    goto :goto_0

    .line 301
    .end local v5    # "p2df":Lae/java/awt/geom/Path2D$Float;
    :cond_1
    new-instance v5, Lae/java/awt/geom/Path2D$Float;

    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-direct {v5, p2, v0}, Lae/java/awt/geom/Path2D$Float;-><init>(Lae/java/awt/Shape;Lae/java/awt/geom/AffineTransform;)V

    .line 302
    .restart local v5    # "p2df":Lae/java/awt/geom/Path2D$Float;
    const/4 v3, 0x0

    .line 303
    .restart local v3    # "transX":I
    const/4 v4, 0x0

    .restart local v4    # "transY":I
    goto :goto_1

    .line 310
    .end local v3    # "transX":I
    .end local v4    # "transY":I
    .end local v5    # "p2df":Lae/java/awt/geom/Path2D$Float;
    :cond_2
    invoke-static {p1}, Lae/sun/java2d/pipe/LoopPipe;->getFillSSI(Lae/sun/java2d/SunGraphics2D;)Lae/sun/java2d/pipe/ShapeSpanIterator;

    move-result-object v7

    .line 312
    .local v7, "sr":Lae/sun/java2d/pipe/ShapeSpanIterator;
    :try_start_0
    invoke-virtual {p1}, Lae/sun/java2d/SunGraphics2D;->getCompClip()Lae/sun/java2d/pipe/Region;

    move-result-object v0

    invoke-virtual {v7, v0}, Lae/sun/java2d/pipe/ShapeSpanIterator;->setOutputArea(Lae/sun/java2d/pipe/Region;)V

    .line 314
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->transformState:I

    if-nez v0, :cond_3

    .line 315
    const/4 v6, 0x0

    .line 317
    .local v6, "at":Lae/java/awt/geom/AffineTransform;
    :goto_3
    invoke-interface {p2, v6}, Lae/java/awt/Shape;->getPathIterator(Lae/java/awt/geom/AffineTransform;)Lae/java/awt/geom/PathIterator;

    move-result-object v0

    invoke-virtual {v7, v0}, Lae/sun/java2d/pipe/ShapeSpanIterator;->appendPath(Lae/java/awt/geom/PathIterator;)V

    .line 318
    invoke-static {p1, v7}, Lae/sun/java2d/pipe/LoopPipe;->fillSpans(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/pipe/SpanIterator;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 320
    invoke-virtual {v7}, Lae/sun/java2d/pipe/ShapeSpanIterator;->dispose()V

    goto :goto_2

    .line 316
    .end local v6    # "at":Lae/java/awt/geom/AffineTransform;
    :cond_3
    :try_start_1
    iget-object v6, p1, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_3

    .line 319
    :catchall_0
    move-exception v0

    .line 320
    invoke-virtual {v7}, Lae/sun/java2d/pipe/ShapeSpanIterator;->dispose()V

    .line 321
    throw v0
.end method

.method public fillArc(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    .locals 10
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "startAngle"    # I
    .param p7, "arcAngle"    # I

    .prologue
    .line 148
    iget-object v9, p1, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    new-instance v1, Lae/java/awt/geom/Arc2D$Float;

    int-to-float v2, p2

    int-to-float v3, p3

    int-to-float v4, p4

    int-to-float v5, p5

    .line 149
    move/from16 v0, p6

    int-to-float v6, v0

    move/from16 v0, p7

    int-to-float v7, v0

    .line 150
    const/4 v8, 0x2

    invoke-direct/range {v1 .. v8}, Lae/java/awt/geom/Arc2D$Float;-><init>(FFFFFFI)V

    .line 148
    invoke-interface {v9, p1, v1}, Lae/sun/java2d/pipe/ShapeDrawPipe;->fill(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V

    .line 151
    return-void
.end method

.method public fillOval(Lae/sun/java2d/SunGraphics2D;IIII)V
    .locals 6
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I

    .prologue
    .line 141
    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    new-instance v1, Lae/java/awt/geom/Ellipse2D$Float;

    int-to-float v2, p2

    int-to-float v3, p3

    int-to-float v4, p4

    int-to-float v5, p5

    invoke-direct {v1, v2, v3, v4, v5}, Lae/java/awt/geom/Ellipse2D$Float;-><init>(FFFF)V

    invoke-interface {v0, p1, v1}, Lae/sun/java2d/pipe/ShapeDrawPipe;->fill(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V

    .line 142
    return-void
.end method

.method public fillPolygon(Lae/sun/java2d/SunGraphics2D;[I[II)V
    .locals 6
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "xPoints"    # [I
    .param p3, "yPoints"    # [I
    .param p4, "nPoints"    # I

    .prologue
    .line 157
    invoke-static {p1}, Lae/sun/java2d/pipe/LoopPipe;->getFillSSI(Lae/sun/java2d/SunGraphics2D;)Lae/sun/java2d/pipe/ShapeSpanIterator;

    move-result-object v0

    .line 160
    .local v0, "sr":Lae/sun/java2d/pipe/ShapeSpanIterator;
    :try_start_0
    invoke-virtual {p1}, Lae/sun/java2d/SunGraphics2D;->getCompClip()Lae/sun/java2d/pipe/Region;

    move-result-object v1

    invoke-virtual {v0, v1}, Lae/sun/java2d/pipe/ShapeSpanIterator;->setOutputArea(Lae/sun/java2d/pipe/Region;)V

    .line 161
    iget v4, p1, Lae/sun/java2d/SunGraphics2D;->transX:I

    iget v5, p1, Lae/sun/java2d/SunGraphics2D;->transY:I

    move-object v1, p2

    move-object v2, p3

    move v3, p4

    invoke-virtual/range {v0 .. v5}, Lae/sun/java2d/pipe/ShapeSpanIterator;->appendPoly([I[IIII)V

    .line 162
    invoke-static {p1, v0}, Lae/sun/java2d/pipe/LoopPipe;->fillSpans(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/pipe/SpanIterator;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 164
    invoke-virtual {v0}, Lae/sun/java2d/pipe/ShapeSpanIterator;->dispose()V

    .line 166
    return-void

    .line 163
    :catchall_0
    move-exception v1

    .line 164
    invoke-virtual {v0}, Lae/sun/java2d/pipe/ShapeSpanIterator;->dispose()V

    .line 165
    throw v1
.end method

.method public fillRect(Lae/sun/java2d/SunGraphics2D;IIII)V
    .locals 7
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I

    .prologue
    .line 123
    iget-object v0, p1, Lae/sun/java2d/SunGraphics2D;->loops:Lae/sun/java2d/loops/RenderLoops;

    iget-object v0, v0, Lae/sun/java2d/loops/RenderLoops;->fillRectLoop:Lae/sun/java2d/loops/FillRect;

    invoke-virtual {p1}, Lae/sun/java2d/SunGraphics2D;->getSurfaceData()Lae/sun/java2d/SurfaceData;

    move-result-object v2

    .line 124
    iget v1, p1, Lae/sun/java2d/SunGraphics2D;->transX:I

    add-int v3, p2, v1

    .line 125
    iget v1, p1, Lae/sun/java2d/SunGraphics2D;->transY:I

    add-int v4, p3, v1

    move-object v1, p1

    move v5, p4

    move v6, p5

    .line 123
    invoke-virtual/range {v0 .. v6}, Lae/sun/java2d/loops/FillRect;->FillRect(Lae/sun/java2d/SunGraphics2D;Lae/sun/java2d/SurfaceData;IIII)V

    .line 127
    return-void
.end method

.method public fillRoundRect(Lae/sun/java2d/SunGraphics2D;IIIIII)V
    .locals 8
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "arcWidth"    # I
    .param p7, "arcHeight"    # I

    .prologue
    .line 133
    iget-object v7, p1, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    .line 134
    new-instance v0, Lae/java/awt/geom/RoundRectangle2D$Float;

    int-to-float v1, p2

    int-to-float v2, p3

    int-to-float v3, p4

    int-to-float v4, p5

    .line 135
    int-to-float v5, p6

    int-to-float v6, p7

    .line 134
    invoke-direct/range {v0 .. v6}, Lae/java/awt/geom/RoundRectangle2D$Float;-><init>(FFFFFF)V

    .line 133
    invoke-interface {v7, p1, v0}, Lae/sun/java2d/pipe/ShapeDrawPipe;->fill(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V

    .line 136
    return-void
.end method

.class public Lae/sun/java2d/pipe/PixelToParallelogramConverter;
.super Lae/sun/java2d/pipe/PixelToShapeConverter;
.source "PixelToParallelogramConverter.java"

# interfaces
.implements Lae/sun/java2d/pipe/ShapeDrawPipe;


# instance fields
.field adjustfill:Z

.field minPenSize:D

.field normPosition:D

.field normRoundingBias:D

.field outrenderer:Lae/sun/java2d/pipe/ParallelogramPipe;


# direct methods
.method public constructor <init>(Lae/sun/java2d/pipe/ShapeDrawPipe;Lae/sun/java2d/pipe/ParallelogramPipe;DDZ)V
    .locals 3
    .param p1, "shapepipe"    # Lae/sun/java2d/pipe/ShapeDrawPipe;
    .param p2, "pgrampipe"    # Lae/sun/java2d/pipe/ParallelogramPipe;
    .param p3, "minPenSize"    # D
    .param p5, "normPosition"    # D
    .param p7, "adjustfill"    # Z

    .prologue
    .line 69
    invoke-direct {p0, p1}, Lae/sun/java2d/pipe/PixelToShapeConverter;-><init>(Lae/sun/java2d/pipe/ShapeDrawPipe;)V

    .line 70
    iput-object p2, p0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->outrenderer:Lae/sun/java2d/pipe/ParallelogramPipe;

    .line 71
    iput-wide p3, p0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->minPenSize:D

    .line 72
    iput-wide p5, p0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normPosition:D

    .line 73
    const-wide/high16 v0, 0x3fe0000000000000L    # 0.5

    sub-double/2addr v0, p5

    iput-wide v0, p0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normRoundingBias:D

    .line 74
    iput-boolean p7, p0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->adjustfill:Z

    .line 75
    return-void
.end method

.method static len(DD)D
    .locals 4
    .param p0, "x"    # D
    .param p2, "y"    # D

    .prologue
    const-wide/16 v2, 0x0

    .line 168
    cmpl-double v0, p0, v2

    if-nez v0, :cond_0

    invoke-static {p2, p3}, Ljava/lang/Math;->abs(D)D

    move-result-wide v0

    :goto_0
    return-wide v0

    .line 169
    :cond_0
    cmpl-double v0, p2, v2

    if-nez v0, :cond_1

    invoke-static {p0, p1}, Ljava/lang/Math;->abs(D)D

    move-result-wide v0

    goto :goto_0

    .line 170
    :cond_1
    mul-double v0, p0, p0

    mul-double v2, p2, p2

    add-double/2addr v0, v2

    invoke-static {v0, v1}, Ljava/lang/Math;->sqrt(D)D

    move-result-wide v0

    goto :goto_0
.end method


# virtual methods
.method public draw(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V
    .locals 27
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "s"    # Lae/java/awt/Shape;

    .prologue
    .line 120
    move-object/from16 v0, p1

    iget v2, v0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    const/4 v3, 0x3

    if-ge v2, v3, :cond_2

    .line 121
    move-object/from16 v0, p1

    iget-object v0, v0, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    move-object/from16 v24, v0

    check-cast v24, Lae/java/awt/BasicStroke;

    .line 122
    .local v24, "bs":Lae/java/awt/BasicStroke;
    move-object/from16 v0, p2

    instance-of v2, v0, Lae/java/awt/geom/Rectangle2D;

    if-eqz v2, :cond_1

    .line 123
    invoke-virtual/range {v24 .. v24}, Lae/java/awt/BasicStroke;->getLineJoin()I

    move-result v2

    if-nez v2, :cond_2

    .line 124
    invoke-virtual/range {v24 .. v24}, Lae/java/awt/BasicStroke;->getDashArray()[F

    move-result-object v2

    if-nez v2, :cond_2

    move-object/from16 v26, p2

    .line 126
    check-cast v26, Lae/java/awt/geom/Rectangle2D;

    .line 127
    .local v26, "r2d":Lae/java/awt/geom/Rectangle2D;
    invoke-virtual/range {v26 .. v26}, Lae/java/awt/geom/Rectangle2D;->getWidth()D

    move-result-wide v8

    .line 128
    .local v8, "w":D
    invoke-virtual/range {v26 .. v26}, Lae/java/awt/geom/Rectangle2D;->getHeight()D

    move-result-wide v10

    .line 129
    .local v10, "h":D
    invoke-virtual/range {v26 .. v26}, Lae/java/awt/geom/Rectangle2D;->getX()D

    move-result-wide v4

    .line 130
    .local v4, "x":D
    invoke-virtual/range {v26 .. v26}, Lae/java/awt/geom/Rectangle2D;->getY()D

    move-result-wide v6

    .line 131
    .local v6, "y":D
    const-wide/16 v2, 0x0

    cmpl-double v2, v8, v2

    if-ltz v2, :cond_0

    const-wide/16 v2, 0x0

    cmpl-double v2, v10, v2

    if-ltz v2, :cond_0

    .line 132
    invoke-virtual/range {v24 .. v24}, Lae/java/awt/BasicStroke;->getLineWidth()F

    move-result v2

    float-to-double v12, v2

    .local v12, "lw":D
    move-object/from16 v2, p0

    move-object/from16 v3, p1

    .line 133
    invoke-virtual/range {v2 .. v13}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->drawRectangle(Lae/sun/java2d/SunGraphics2D;DDDDD)V

    .line 149
    .end local v4    # "x":D
    .end local v6    # "y":D
    .end local v8    # "w":D
    .end local v10    # "h":D
    .end local v12    # "lw":D
    .end local v24    # "bs":Lae/java/awt/BasicStroke;
    .end local v26    # "r2d":Lae/java/awt/geom/Rectangle2D;
    :cond_0
    :goto_0
    return-void

    .line 137
    .restart local v24    # "bs":Lae/java/awt/BasicStroke;
    :cond_1
    move-object/from16 v0, p2

    instance-of v2, v0, Lae/java/awt/geom/Line2D;

    if-eqz v2, :cond_2

    move-object/from16 v25, p2

    .line 138
    check-cast v25, Lae/java/awt/geom/Line2D;

    .line 140
    .local v25, "l2d":Lae/java/awt/geom/Line2D;
    invoke-virtual/range {v25 .. v25}, Lae/java/awt/geom/Line2D;->getX1()D

    move-result-wide v16

    invoke-virtual/range {v25 .. v25}, Lae/java/awt/geom/Line2D;->getY1()D

    move-result-wide v18

    .line 141
    invoke-virtual/range {v25 .. v25}, Lae/java/awt/geom/Line2D;->getX2()D

    move-result-wide v20

    invoke-virtual/range {v25 .. v25}, Lae/java/awt/geom/Line2D;->getY2()D

    move-result-wide v22

    move-object/from16 v14, p0

    move-object/from16 v15, p1

    .line 139
    invoke-virtual/range {v14 .. v23}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->drawGeneralLine(Lae/sun/java2d/SunGraphics2D;DDDD)Z

    move-result v2

    .line 141
    if-nez v2, :cond_0

    .line 148
    .end local v24    # "bs":Lae/java/awt/BasicStroke;
    .end local v25    # "l2d":Lae/java/awt/geom/Line2D;
    :cond_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->outpipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-interface {v2, v0, v1}, Lae/sun/java2d/pipe/ShapeDrawPipe;->draw(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V

    goto :goto_0
.end method

.method public drawGeneralLine(Lae/sun/java2d/SunGraphics2D;DDDD)Z
    .locals 40
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x1"    # D
    .param p4, "y1"    # D
    .param p6, "x2"    # D
    .param p8, "y2"    # D

    .prologue
    .line 181
    move-object/from16 v0, p1

    iget v4, v0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    const/4 v6, 0x3

    if-eq v4, v6, :cond_0

    .line 182
    move-object/from16 v0, p1

    iget v4, v0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    const/4 v6, 0x1

    if-ne v4, v6, :cond_1

    .line 184
    :cond_0
    const/4 v4, 0x0

    .line 283
    :goto_0
    return v4

    .line 186
    :cond_1
    move-object/from16 v0, p1

    iget-object v0, v0, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    move-object/from16 v28, v0

    check-cast v28, Lae/java/awt/BasicStroke;

    .line 187
    .local v28, "bs":Lae/java/awt/BasicStroke;
    invoke-virtual/range {v28 .. v28}, Lae/java/awt/BasicStroke;->getEndCap()I

    move-result v29

    .line 188
    .local v29, "cap":I
    const/4 v4, 0x1

    move/from16 v0, v29

    if-eq v0, v4, :cond_2

    invoke-virtual/range {v28 .. v28}, Lae/java/awt/BasicStroke;->getDashArray()[F

    move-result-object v4

    if-eqz v4, :cond_3

    .line 192
    :cond_2
    const/4 v4, 0x0

    goto :goto_0

    .line 194
    :cond_3
    invoke-virtual/range {v28 .. v28}, Lae/java/awt/BasicStroke;->getLineWidth()F

    move-result v4

    float-to-double v0, v4

    move-wide/from16 v32, v0

    .line 197
    .local v32, "lw":D
    sub-double v24, p6, p2

    .line 198
    .local v24, "dx":D
    sub-double v26, p8, p4

    .line 199
    .local v26, "dy":D
    move-object/from16 v0, p1

    iget v4, v0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    packed-switch v4, :pswitch_data_0

    .line 225
    new-instance v4, Ljava/lang/InternalError;

    const-string v6, "unknown TRANSFORM state..."

    invoke-direct {v4, v6}, Ljava/lang/InternalError;-><init>(Ljava/lang/String;)V

    throw v4

    .line 203
    :pswitch_0
    const/4 v4, 0x4

    new-array v5, v4, [D

    const/4 v4, 0x0

    aput-wide p2, v5, v4

    const/4 v4, 0x1

    aput-wide p4, v5, v4

    const/4 v4, 0x2

    aput-wide p6, v5, v4

    const/4 v4, 0x3

    aput-wide p8, v5, v4

    .line 204
    .local v5, "coords":[D
    move-object/from16 v0, p1

    iget-object v4, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    const/4 v6, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x2

    move-object v7, v5

    invoke-virtual/range {v4 .. v9}, Lae/java/awt/geom/AffineTransform;->transform([DI[DII)V

    .line 205
    const/4 v4, 0x0

    aget-wide p2, v5, v4

    .line 206
    const/4 v4, 0x1

    aget-wide p4, v5, v4

    .line 207
    const/4 v4, 0x2

    aget-wide p6, v5, v4

    .line 208
    const/4 v4, 0x3

    aget-wide p8, v5, v4

    .line 227
    .end local v5    # "coords":[D
    :goto_1
    :pswitch_1
    move-object/from16 v0, p1

    iget v4, v0, Lae/sun/java2d/SunGraphics2D;->strokeHint:I

    const/4 v6, 0x2

    if-eq v4, v6, :cond_5

    .line 228
    move-object/from16 v0, p1

    iget v4, v0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    if-nez v4, :cond_4

    .line 229
    move-object/from16 v0, p0

    iget-object v4, v0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->outrenderer:Lae/sun/java2d/pipe/ParallelogramPipe;

    instance-of v4, v4, Lae/sun/java2d/pipe/PixelDrawPipe;

    if-eqz v4, :cond_4

    .line 233
    move-object/from16 v0, p1

    iget v4, v0, Lae/sun/java2d/SunGraphics2D;->transX:I

    int-to-double v6, v4

    sub-double v6, p2, v6

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v6

    double-to-int v8, v6

    .line 234
    .local v8, "ix1":I
    move-object/from16 v0, p1

    iget v4, v0, Lae/sun/java2d/SunGraphics2D;->transY:I

    int-to-double v6, v4

    sub-double v6, p4, v6

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v6

    double-to-int v9, v6

    .line 235
    .local v9, "iy1":I
    move-object/from16 v0, p1

    iget v4, v0, Lae/sun/java2d/SunGraphics2D;->transX:I

    int-to-double v6, v4

    sub-double v6, p6, v6

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v6

    double-to-int v10, v6

    .line 236
    .local v10, "ix2":I
    move-object/from16 v0, p1

    iget v4, v0, Lae/sun/java2d/SunGraphics2D;->transY:I

    int-to-double v6, v4

    sub-double v6, p8, v6

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v6

    double-to-int v11, v6

    .line 237
    .local v11, "iy2":I
    move-object/from16 v0, p0

    iget-object v6, v0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->outrenderer:Lae/sun/java2d/pipe/ParallelogramPipe;

    check-cast v6, Lae/sun/java2d/pipe/PixelDrawPipe;

    move-object/from16 v7, p1

    invoke-interface/range {v6 .. v11}, Lae/sun/java2d/pipe/PixelDrawPipe;->drawLine(Lae/sun/java2d/SunGraphics2D;IIII)V

    .line 238
    const/4 v4, 0x1

    goto/16 :goto_0

    .line 214
    .end local v8    # "ix1":I
    .end local v9    # "iy1":I
    .end local v10    # "ix2":I
    .end local v11    # "iy2":I
    :pswitch_2
    move-object/from16 v0, p1

    iget-object v4, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v4}, Lae/java/awt/geom/AffineTransform;->getTranslateX()D

    move-result-wide v34

    .line 215
    .local v34, "tx":D
    move-object/from16 v0, p1

    iget-object v4, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    invoke-virtual {v4}, Lae/java/awt/geom/AffineTransform;->getTranslateY()D

    move-result-wide v36

    .line 216
    .local v36, "ty":D
    add-double p2, p2, v34

    .line 217
    add-double p4, p4, v36

    .line 218
    add-double p6, p6, v34

    .line 219
    add-double p8, p8, v36

    .line 221
    goto :goto_1

    .line 240
    .end local v34    # "tx":D
    .end local v36    # "ty":D
    :cond_4
    move-object/from16 v0, p0

    move-wide/from16 v1, p2

    invoke-virtual {v0, v1, v2}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide p2

    .line 241
    move-object/from16 v0, p0

    move-wide/from16 v1, p4

    invoke-virtual {v0, v1, v2}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide p4

    .line 242
    move-object/from16 v0, p0

    move-wide/from16 v1, p6

    invoke-virtual {v0, v1, v2}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide p6

    .line 243
    move-object/from16 v0, p0

    move-wide/from16 v1, p8

    invoke-virtual {v0, v1, v2}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide p8

    .line 245
    :cond_5
    move-object/from16 v0, p1

    iget v4, v0, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v6, 0x3

    if-lt v4, v6, :cond_7

    .line 249
    invoke-static/range {v24 .. v27}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->len(DD)D

    move-result-wide v30

    .line 250
    .local v30, "len":D
    const-wide/16 v6, 0x0

    cmpl-double v4, v30, v6

    if-nez v4, :cond_6

    .line 251
    const-wide/high16 v30, 0x3ff0000000000000L    # 1.0

    move-wide/from16 v24, v30

    .line 255
    :cond_6
    const/4 v4, 0x2

    new-array v13, v4, [D

    const/4 v4, 0x0

    div-double v6, v26, v30

    aput-wide v6, v13, v4

    const/4 v4, 0x1

    move-wide/from16 v0, v24

    neg-double v6, v0

    div-double v6, v6, v30

    aput-wide v6, v13, v4

    .line 256
    .local v13, "unitvector":[D
    move-object/from16 v0, p1

    iget-object v12, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    const/4 v14, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x1

    move-object v15, v13

    invoke-virtual/range {v12 .. v17}, Lae/java/awt/geom/AffineTransform;->deltaTransform([DI[DII)V

    .line 257
    const/4 v4, 0x0

    aget-wide v6, v13, v4

    const/4 v4, 0x1

    aget-wide v14, v13, v4

    invoke-static {v6, v7, v14, v15}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->len(DD)D

    move-result-wide v6

    mul-double v32, v32, v6

    .line 259
    .end local v13    # "unitvector":[D
    .end local v30    # "len":D
    :cond_7
    move-object/from16 v0, p0

    iget-wide v6, v0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->minPenSize:D

    move-wide/from16 v0, v32

    invoke-static {v0, v1, v6, v7}, Ljava/lang/Math;->max(DD)D

    move-result-wide v32

    .line 260
    sub-double v24, p6, p2

    .line 261
    sub-double v26, p8, p4

    .line 262
    invoke-static/range {v24 .. v27}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->len(DD)D

    move-result-wide v30

    .line 264
    .restart local v30    # "len":D
    const-wide/16 v6, 0x0

    cmpl-double v4, v30, v6

    if-nez v4, :cond_a

    .line 265
    if-nez v29, :cond_8

    .line 266
    const/4 v4, 0x1

    goto/16 :goto_0

    .line 268
    :cond_8
    move-wide/from16 v22, v32

    .line 269
    .local v22, "udx":D
    const-wide/16 v38, 0x0

    .line 274
    .local v38, "udy":D
    :goto_2
    const-wide/high16 v6, 0x4000000000000000L    # 2.0

    div-double v6, v38, v6

    add-double v16, p2, v6

    .line 275
    .local v16, "px":D
    const-wide/high16 v6, 0x4000000000000000L    # 2.0

    div-double v6, v22, v6

    sub-double v18, p4, v6

    .line 276
    .local v18, "py":D
    const/4 v4, 0x2

    move/from16 v0, v29

    if-ne v0, v4, :cond_9

    .line 277
    const-wide/high16 v6, 0x4000000000000000L    # 2.0

    div-double v6, v22, v6

    sub-double v16, v16, v6

    .line 278
    const-wide/high16 v6, 0x4000000000000000L    # 2.0

    div-double v6, v38, v6

    sub-double v18, v18, v6

    .line 279
    add-double v24, v24, v22

    .line 280
    add-double v26, v26, v38

    .line 282
    :cond_9
    move-object/from16 v0, p0

    iget-object v14, v0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->outrenderer:Lae/sun/java2d/pipe/ParallelogramPipe;

    move-wide/from16 v0, v38

    neg-double v0, v0

    move-wide/from16 v20, v0

    move-object/from16 v15, p1

    invoke-interface/range {v14 .. v27}, Lae/sun/java2d/pipe/ParallelogramPipe;->fillParallelogram(Lae/sun/java2d/SunGraphics2D;DDDDDD)V

    .line 283
    const/4 v4, 0x1

    goto/16 :goto_0

    .line 271
    .end local v16    # "px":D
    .end local v18    # "py":D
    .end local v22    # "udx":D
    .end local v38    # "udy":D
    :cond_a
    mul-double v6, v32, v24

    div-double v22, v6, v30

    .line 272
    .restart local v22    # "udx":D
    mul-double v6, v32, v26

    div-double v38, v6, v30

    .restart local v38    # "udy":D
    goto :goto_2

    .line 199
    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_2
        :pswitch_2
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method public drawLine(Lae/sun/java2d/SunGraphics2D;IIII)V
    .locals 10
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x1"    # I
    .param p3, "y1"    # I
    .param p4, "x2"    # I
    .param p5, "y2"    # I

    .prologue
    .line 80
    int-to-double v2, p2

    int-to-double v4, p3

    int-to-double v6, p4

    int-to-double v8, p5

    move-object v0, p0

    move-object v1, p1

    invoke-virtual/range {v0 .. v9}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->drawGeneralLine(Lae/sun/java2d/SunGraphics2D;DDDD)Z

    move-result v0

    if-nez v0, :cond_0

    .line 81
    invoke-super/range {p0 .. p5}, Lae/sun/java2d/pipe/PixelToShapeConverter;->drawLine(Lae/sun/java2d/SunGraphics2D;IIII)V

    .line 83
    :cond_0
    return-void
.end method

.method public drawRect(Lae/sun/java2d/SunGraphics2D;IIII)V
    .locals 15
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "w"    # I
    .param p5, "h"    # I

    .prologue
    .line 88
    if-ltz p4, :cond_0

    if-ltz p5, :cond_0

    .line 89
    move-object/from16 v0, p1

    iget v2, v0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    const/4 v3, 0x3

    if-ge v2, v3, :cond_2

    .line 90
    move-object/from16 v0, p1

    iget-object v14, v0, Lae/sun/java2d/SunGraphics2D;->stroke:Lae/java/awt/Stroke;

    check-cast v14, Lae/java/awt/BasicStroke;

    .line 91
    .local v14, "bs":Lae/java/awt/BasicStroke;
    if-lez p4, :cond_1

    if-lez p5, :cond_1

    .line 92
    invoke-virtual {v14}, Lae/java/awt/BasicStroke;->getLineJoin()I

    move-result v2

    if-nez v2, :cond_2

    .line 93
    invoke-virtual {v14}, Lae/java/awt/BasicStroke;->getDashArray()[F

    move-result-object v2

    if-nez v2, :cond_2

    .line 95
    invoke-virtual {v14}, Lae/java/awt/BasicStroke;->getLineWidth()F

    move-result v2

    float-to-double v12, v2

    .line 96
    .local v12, "lw":D
    move/from16 v0, p2

    int-to-double v4, v0

    move/from16 v0, p3

    int-to-double v6, v0

    move/from16 v0, p4

    int-to-double v8, v0

    move/from16 v0, p5

    int-to-double v10, v0

    move-object v2, p0

    move-object/from16 v3, p1

    invoke-virtual/range {v2 .. v13}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->drawRectangle(Lae/sun/java2d/SunGraphics2D;DDDDD)V

    .line 109
    .end local v12    # "lw":D
    .end local v14    # "bs":Lae/java/awt/BasicStroke;
    :cond_0
    :goto_0
    return-void

    .line 103
    .restart local v14    # "bs":Lae/java/awt/BasicStroke;
    :cond_1
    add-int v6, p2, p4

    add-int v7, p3, p5

    move-object v2, p0

    move-object/from16 v3, p1

    move/from16 v4, p2

    move/from16 v5, p3

    invoke-virtual/range {v2 .. v7}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->drawLine(Lae/sun/java2d/SunGraphics2D;IIII)V

    goto :goto_0

    .line 107
    .end local v14    # "bs":Lae/java/awt/BasicStroke;
    :cond_2
    invoke-super/range {p0 .. p5}, Lae/sun/java2d/pipe/PixelToShapeConverter;->drawRect(Lae/sun/java2d/SunGraphics2D;IIII)V

    goto :goto_0
.end method

.method public drawRectangle(Lae/sun/java2d/SunGraphics2D;DDDDD)V
    .locals 48
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "rx"    # D
    .param p4, "ry"    # D
    .param p6, "rw"    # D
    .param p8, "rh"    # D
    .param p10, "lw"    # D

    .prologue
    .line 327
    move-object/from16 v0, p1

    iget-object v0, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    move-object/from16 v46, v0

    .line 328
    .local v46, "txform":Lae/java/awt/geom/AffineTransform;
    invoke-virtual/range {v46 .. v46}, Lae/java/awt/geom/AffineTransform;->getScaleX()D

    move-result-wide v8

    .line 329
    .local v8, "dx1":D
    invoke-virtual/range {v46 .. v46}, Lae/java/awt/geom/AffineTransform;->getShearY()D

    move-result-wide v10

    .line 330
    .local v10, "dy1":D
    invoke-virtual/range {v46 .. v46}, Lae/java/awt/geom/AffineTransform;->getShearX()D

    move-result-wide v12

    .line 331
    .local v12, "dx2":D
    invoke-virtual/range {v46 .. v46}, Lae/java/awt/geom/AffineTransform;->getScaleY()D

    move-result-wide v14

    .line 332
    .local v14, "dy2":D
    mul-double v2, p2, v8

    mul-double v24, p4, v12

    add-double v2, v2, v24

    invoke-virtual/range {v46 .. v46}, Lae/java/awt/geom/AffineTransform;->getTranslateX()D

    move-result-wide v24

    add-double v4, v2, v24

    .line 333
    .local v4, "px":D
    mul-double v2, p2, v10

    mul-double v24, p4, v14

    add-double v2, v2, v24

    invoke-virtual/range {v46 .. v46}, Lae/java/awt/geom/AffineTransform;->getTranslateY()D

    move-result-wide v24

    add-double v6, v2, v24

    .line 336
    .local v6, "py":D
    invoke-static {v8, v9, v10, v11}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->len(DD)D

    move-result-wide v2

    mul-double v20, v2, p10

    .line 337
    .local v20, "lw1":D
    invoke-static {v12, v13, v14, v15}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->len(DD)D

    move-result-wide v2

    mul-double v22, v2, p10

    .line 338
    .local v22, "lw2":D
    mul-double v8, v8, p6

    .line 339
    mul-double v10, v10, p6

    .line 340
    mul-double v12, v12, p8

    .line 341
    mul-double v14, v14, p8

    .line 342
    move-object/from16 v0, p1

    iget v2, v0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    const/4 v3, 0x3

    if-ge v2, v3, :cond_0

    .line 343
    move-object/from16 v0, p1

    iget v2, v0, Lae/sun/java2d/SunGraphics2D;->strokeHint:I

    const/4 v3, 0x2

    if-eq v2, v3, :cond_0

    .line 345
    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v5}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v42

    .line 346
    .local v42, "newx":D
    move-object/from16 v0, p0

    invoke-virtual {v0, v6, v7}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v44

    .line 347
    .local v44, "newy":D
    add-double v2, v4, v8

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v2

    sub-double v8, v2, v42

    .line 348
    add-double v2, v6, v10

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v2

    sub-double v10, v2, v44

    .line 349
    add-double v2, v4, v12

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v2

    sub-double v12, v2, v42

    .line 350
    add-double v2, v6, v14

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v2

    sub-double v14, v2, v44

    .line 351
    move-wide/from16 v4, v42

    .line 352
    move-wide/from16 v6, v44

    .line 354
    .end local v42    # "newx":D
    .end local v44    # "newy":D
    :cond_0
    move-object/from16 v0, p0

    iget-wide v2, v0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->minPenSize:D

    move-wide/from16 v0, v20

    invoke-static {v0, v1, v2, v3}, Ljava/lang/Math;->max(DD)D

    move-result-wide v20

    .line 355
    move-object/from16 v0, p0

    iget-wide v2, v0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->minPenSize:D

    move-wide/from16 v0, v22

    invoke-static {v0, v1, v2, v3}, Ljava/lang/Math;->max(DD)D

    move-result-wide v22

    .line 356
    invoke-static {v8, v9, v10, v11}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->len(DD)D

    move-result-wide v16

    .line 357
    .local v16, "len1":D
    invoke-static {v12, v13, v14, v15}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->len(DD)D

    move-result-wide v18

    .line 358
    .local v18, "len2":D
    cmpl-double v2, v20, v16

    if-gez v2, :cond_1

    cmpl-double v2, v22, v18

    if-ltz v2, :cond_2

    :cond_1
    move-object/from16 v2, p0

    move-object/from16 v3, p1

    .line 362
    invoke-virtual/range {v2 .. v23}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->fillOuterParallelogram(Lae/sun/java2d/SunGraphics2D;DDDDDDDDDD)V

    .line 370
    :goto_0
    return-void

    .line 366
    :cond_2
    move-object/from16 v0, p0

    iget-object v0, v0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->outrenderer:Lae/sun/java2d/pipe/ParallelogramPipe;

    move-object/from16 v24, v0

    .line 368
    div-double v38, v20, v16

    div-double v40, v22, v18

    move-object/from16 v25, p1

    move-wide/from16 v26, v4

    move-wide/from16 v28, v6

    move-wide/from16 v30, v8

    move-wide/from16 v32, v10

    move-wide/from16 v34, v12

    move-wide/from16 v36, v14

    .line 366
    invoke-interface/range {v24 .. v41}, Lae/sun/java2d/pipe/ParallelogramPipe;->drawParallelogram(Lae/sun/java2d/SunGraphics2D;DDDDDDDD)V

    goto :goto_0
.end method

.method public fill(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V
    .locals 11
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "s"    # Lae/java/awt/Shape;

    .prologue
    .line 152
    instance-of v0, p2, Lae/java/awt/geom/Rectangle2D;

    if-eqz v0, :cond_1

    move-object v10, p2

    .line 153
    check-cast v10, Lae/java/awt/geom/Rectangle2D;

    .line 154
    .local v10, "r2d":Lae/java/awt/geom/Rectangle2D;
    invoke-virtual {v10}, Lae/java/awt/geom/Rectangle2D;->getWidth()D

    move-result-wide v6

    .line 155
    .local v6, "w":D
    invoke-virtual {v10}, Lae/java/awt/geom/Rectangle2D;->getHeight()D

    move-result-wide v8

    .line 156
    .local v8, "h":D
    const-wide/16 v0, 0x0

    cmpl-double v0, v6, v0

    if-lez v0, :cond_0

    const-wide/16 v0, 0x0

    cmpl-double v0, v8, v0

    if-lez v0, :cond_0

    .line 157
    invoke-virtual {v10}, Lae/java/awt/geom/Rectangle2D;->getX()D

    move-result-wide v2

    .line 158
    .local v2, "x":D
    invoke-virtual {v10}, Lae/java/awt/geom/Rectangle2D;->getY()D

    move-result-wide v4

    .local v4, "y":D
    move-object v0, p0

    move-object v1, p1

    .line 159
    invoke-virtual/range {v0 .. v9}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->fillRectangle(Lae/sun/java2d/SunGraphics2D;DDDD)V

    .line 165
    .end local v2    # "x":D
    .end local v4    # "y":D
    .end local v6    # "w":D
    .end local v8    # "h":D
    .end local v10    # "r2d":Lae/java/awt/geom/Rectangle2D;
    :cond_0
    :goto_0
    return-void

    .line 164
    :cond_1
    iget-object v0, p0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->outpipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    invoke-interface {v0, p1, p2}, Lae/sun/java2d/pipe/ShapeDrawPipe;->fill(Lae/sun/java2d/SunGraphics2D;Lae/java/awt/Shape;)V

    goto :goto_0
.end method

.method public fillOuterParallelogram(Lae/sun/java2d/SunGraphics2D;DDDDDDDDDD)V
    .locals 24
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "px"    # D
    .param p4, "py"    # D
    .param p6, "dx1"    # D
    .param p8, "dy1"    # D
    .param p10, "dx2"    # D
    .param p12, "dy2"    # D
    .param p14, "len1"    # D
    .param p16, "len2"    # D
    .param p18, "lw1"    # D
    .param p20, "lw2"    # D

    .prologue
    .line 386
    div-double v16, p6, p14

    .line 387
    .local v16, "udx1":D
    div-double v20, p8, p14

    .line 388
    .local v20, "udy1":D
    div-double v18, p10, p16

    .line 389
    .local v18, "udx2":D
    div-double v22, p12, p16

    .line 390
    .local v22, "udy2":D
    const-wide/16 v2, 0x0

    cmpl-double v2, p14, v2

    if-nez v2, :cond_2

    .line 392
    const-wide/16 v2, 0x0

    cmpl-double v2, p16, v2

    if-nez v2, :cond_0

    .line 394
    const-wide/16 v18, 0x0

    .line 395
    const-wide/high16 v22, 0x3ff0000000000000L    # 1.0

    .line 397
    :cond_0
    move-wide/from16 v16, v22

    .line 398
    move-wide/from16 v0, v18

    neg-double v0, v0

    move-wide/from16 v20, v0

    .line 404
    :cond_1
    :goto_0
    mul-double v16, v16, p18

    .line 405
    mul-double v20, v20, p18

    .line 406
    mul-double v18, v18, p20

    .line 407
    mul-double v22, v22, p20

    .line 408
    add-double v2, v16, v18

    const-wide/high16 v4, 0x4000000000000000L    # 2.0

    div-double/2addr v2, v4

    sub-double p2, p2, v2

    .line 409
    add-double v2, v20, v22

    const-wide/high16 v4, 0x4000000000000000L    # 2.0

    div-double/2addr v2, v4

    sub-double p4, p4, v2

    .line 410
    add-double p6, p6, v16

    .line 411
    add-double p8, p8, v20

    .line 412
    add-double p10, p10, v18

    .line 413
    add-double p12, p12, v22

    .line 415
    move-object/from16 v0, p0

    iget-object v2, v0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->outrenderer:Lae/sun/java2d/pipe/ParallelogramPipe;

    move-object/from16 v3, p1

    move-wide/from16 v4, p2

    move-wide/from16 v6, p4

    move-wide/from16 v8, p6

    move-wide/from16 v10, p8

    move-wide/from16 v12, p10

    move-wide/from16 v14, p12

    invoke-interface/range {v2 .. v15}, Lae/sun/java2d/pipe/ParallelogramPipe;->fillParallelogram(Lae/sun/java2d/SunGraphics2D;DDDDDD)V

    .line 416
    return-void

    .line 399
    :cond_2
    const-wide/16 v2, 0x0

    cmpl-double v2, p16, v2

    if-nez v2, :cond_1

    .line 401
    move-wide/from16 v18, v20

    .line 402
    move-wide/from16 v0, v16

    neg-double v0, v0

    move-wide/from16 v22, v0

    goto :goto_0
.end method

.method public fillRect(Lae/sun/java2d/SunGraphics2D;IIII)V
    .locals 10
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "w"    # I
    .param p5, "h"    # I

    .prologue
    .line 114
    if-lez p4, :cond_0

    if-lez p5, :cond_0

    .line 115
    int-to-double v2, p2

    int-to-double v4, p3

    int-to-double v6, p4

    int-to-double v8, p5

    move-object v0, p0

    move-object v1, p1

    invoke-virtual/range {v0 .. v9}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->fillRectangle(Lae/sun/java2d/SunGraphics2D;DDDD)V

    .line 117
    :cond_0
    return-void
.end method

.method public fillRectangle(Lae/sun/java2d/SunGraphics2D;DDDD)V
    .locals 24
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "rx"    # D
    .param p4, "ry"    # D
    .param p6, "rw"    # D
    .param p8, "rh"    # D

    .prologue
    .line 292
    move-object/from16 v0, p1

    iget-object v0, v0, Lae/sun/java2d/SunGraphics2D;->transform:Lae/java/awt/geom/AffineTransform;

    move-object/from16 v20, v0

    .line 293
    .local v20, "txform":Lae/java/awt/geom/AffineTransform;
    invoke-virtual/range {v20 .. v20}, Lae/java/awt/geom/AffineTransform;->getScaleX()D

    move-result-wide v8

    .line 294
    .local v8, "dx1":D
    invoke-virtual/range {v20 .. v20}, Lae/java/awt/geom/AffineTransform;->getShearY()D

    move-result-wide v10

    .line 295
    .local v10, "dy1":D
    invoke-virtual/range {v20 .. v20}, Lae/java/awt/geom/AffineTransform;->getShearX()D

    move-result-wide v12

    .line 296
    .local v12, "dx2":D
    invoke-virtual/range {v20 .. v20}, Lae/java/awt/geom/AffineTransform;->getScaleY()D

    move-result-wide v14

    .line 297
    .local v14, "dy2":D
    mul-double v2, p2, v8

    mul-double v22, p4, v12

    add-double v2, v2, v22

    invoke-virtual/range {v20 .. v20}, Lae/java/awt/geom/AffineTransform;->getTranslateX()D

    move-result-wide v22

    add-double v4, v2, v22

    .line 298
    .local v4, "px":D
    mul-double v2, p2, v10

    mul-double v22, p4, v14

    add-double v2, v2, v22

    invoke-virtual/range {v20 .. v20}, Lae/java/awt/geom/AffineTransform;->getTranslateY()D

    move-result-wide v22

    add-double v6, v2, v22

    .line 299
    .local v6, "py":D
    mul-double v8, v8, p6

    .line 300
    mul-double v10, v10, p6

    .line 301
    mul-double v12, v12, p8

    .line 302
    mul-double v14, v14, p8

    .line 303
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->adjustfill:Z

    if-eqz v2, :cond_0

    .line 304
    move-object/from16 v0, p1

    iget v2, v0, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    const/4 v3, 0x3

    if-ge v2, v3, :cond_0

    .line 305
    move-object/from16 v0, p1

    iget v2, v0, Lae/sun/java2d/SunGraphics2D;->strokeHint:I

    const/4 v3, 0x2

    if-eq v2, v3, :cond_0

    .line 307
    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v5}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v16

    .line 308
    .local v16, "newx":D
    move-object/from16 v0, p0

    invoke-virtual {v0, v6, v7}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v18

    .line 309
    .local v18, "newy":D
    add-double v2, v4, v8

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v2

    sub-double v8, v2, v16

    .line 310
    add-double v2, v6, v10

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v2

    sub-double v10, v2, v18

    .line 311
    add-double v2, v4, v12

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v2

    sub-double v12, v2, v16

    .line 312
    add-double v2, v6, v14

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normalize(D)D

    move-result-wide v2

    sub-double v14, v2, v18

    .line 313
    move-wide/from16 v4, v16

    .line 314
    move-wide/from16 v6, v18

    .line 316
    .end local v16    # "newx":D
    .end local v18    # "newy":D
    :cond_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->outrenderer:Lae/sun/java2d/pipe/ParallelogramPipe;

    move-object/from16 v3, p1

    invoke-interface/range {v2 .. v15}, Lae/sun/java2d/pipe/ParallelogramPipe;->fillParallelogram(Lae/sun/java2d/SunGraphics2D;DDDDDD)V

    .line 317
    return-void
.end method

.method normalize(D)D
    .locals 5
    .param p1, "v"    # D

    .prologue
    .line 174
    iget-wide v0, p0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normRoundingBias:D

    add-double/2addr v0, p1

    invoke-static {v0, v1}, Ljava/lang/Math;->floor(D)D

    move-result-wide v0

    iget-wide v2, p0, Lae/sun/java2d/pipe/PixelToParallelogramConverter;->normPosition:D

    add-double/2addr v0, v2

    return-wide v0
.end method

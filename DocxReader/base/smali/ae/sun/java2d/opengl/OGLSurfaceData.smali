.class public abstract Lae/sun/java2d/opengl/OGLSurfaceData;
.super Lae/sun/java2d/SurfaceData;
.source "OGLSurfaceData.java"

# interfaces
.implements Lae/sun/java2d/pipe/hw/AccelSurface;


# static fields
.field private static final DESC_OPENGL_SURFACE:Ljava/lang/String; = "OpenGL Surface"

.field private static final DESC_OPENGL_SURFACE_RTT:Ljava/lang/String; = "OpenGL Surface (render-to-texture)"

.field private static final DESC_OPENGL_TEXTURE:Ljava/lang/String; = "OpenGL Texture"

.field public static final FBOBJECT:I = 0x5

.field static final OpenGLSurface:Lae/sun/java2d/loops/SurfaceType;

.field static final OpenGLSurfaceRTT:Lae/sun/java2d/loops/SurfaceType;

.field static final OpenGLTexture:Lae/sun/java2d/loops/SurfaceType;

.field public static final PBUFFER:I = 0x2

.field public static final PF_BYTE_GRAY:I = 0x9

.field public static final PF_INT_ARGB:I = 0x0

.field public static final PF_INT_ARGB_PRE:I = 0x1

.field public static final PF_INT_BGR:I = 0x4

.field public static final PF_INT_BGRX:I = 0x5

.field public static final PF_INT_RGB:I = 0x2

.field public static final PF_INT_RGBX:I = 0x3

.field public static final PF_USHORT_555_RGB:I = 0x7

.field public static final PF_USHORT_555_RGBX:I = 0x8

.field public static final PF_USHORT_565_RGB:I = 0x6

.field public static final PF_USHORT_GRAY:I = 0xa

.field private static isBIOpShaderEnabled:Z

.field private static isFBObjectEnabled:Z

.field private static isGradShaderEnabled:Z

.field private static isLCDShaderEnabled:Z

.field protected static oglAAPgramPipe:Lae/sun/java2d/pipe/ParallelogramPipe;

.field protected static oglImagePipe:Lae/sun/java2d/opengl/OGLDrawImage;

.field protected static oglRenderPipe:Lae/sun/java2d/opengl/OGLRenderer;

.field protected static oglTextPipe:Lae/sun/java2d/opengl/OGLTextRenderer;

.field protected static oglTxRenderPipe:Lae/sun/java2d/pipe/PixelToParallelogramConverter;


# instance fields
.field private graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

.field private nativeHeight:I

.field private nativeWidth:I

.field protected type:I


# direct methods
.method static constructor <clinit>()V
    .locals 13

    .prologue
    const/4 v2, 0x0

    const/4 v8, 0x1

    .line 133
    sget-object v1, Lae/sun/java2d/loops/SurfaceType;->Any:Lae/sun/java2d/loops/SurfaceType;

    const-string v3, "OpenGL Surface"

    .line 134
    sget-object v4, Lae/sun/awt/image/PixelConverter$ArgbPre;->instance:Lae/sun/awt/image/PixelConverter;

    .line 133
    invoke-virtual {v1, v3, v4}, Lae/sun/java2d/loops/SurfaceType;->deriveSubType(Ljava/lang/String;Lae/sun/awt/image/PixelConverter;)Lae/sun/java2d/loops/SurfaceType;

    move-result-object v1

    .line 132
    sput-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->OpenGLSurface:Lae/sun/java2d/loops/SurfaceType;

    .line 136
    sget-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->OpenGLSurface:Lae/sun/java2d/loops/SurfaceType;

    const-string v3, "OpenGL Surface (render-to-texture)"

    invoke-virtual {v1, v3}, Lae/sun/java2d/loops/SurfaceType;->deriveSubType(Ljava/lang/String;)Lae/sun/java2d/loops/SurfaceType;

    move-result-object v1

    .line 135
    sput-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->OpenGLSurfaceRTT:Lae/sun/java2d/loops/SurfaceType;

    .line 138
    sget-object v1, Lae/sun/java2d/loops/SurfaceType;->Any:Lae/sun/java2d/loops/SurfaceType;

    const-string v3, "OpenGL Texture"

    invoke-virtual {v1, v3}, Lae/sun/java2d/loops/SurfaceType;->deriveSubType(Ljava/lang/String;)Lae/sun/java2d/loops/SurfaceType;

    move-result-object v1

    .line 137
    sput-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->OpenGLTexture:Lae/sun/java2d/loops/SurfaceType;

    .line 181
    invoke-static {}, Lae/java/awt/GraphicsEnvironment;->isHeadless()Z

    move-result v1

    if-nez v1, :cond_1

    .line 184
    new-instance v1, Lsun/security/action/GetPropertyAction;

    .line 185
    const-string v3, "sun.java2d.opengl.fbobject"

    .line 184
    invoke-direct {v1, v3}, Lsun/security/action/GetPropertyAction;-><init>(Ljava/lang/String;)V

    .line 183
    invoke-static {v1}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Ljava/lang/String;

    .line 186
    .local v9, "fbo":Ljava/lang/String;
    const-string v1, "false"

    invoke-virtual {v1, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2

    move v1, v2

    :goto_0
    sput-boolean v1, Lae/sun/java2d/opengl/OGLSurfaceData;->isFBObjectEnabled:Z

    .line 190
    new-instance v1, Lsun/security/action/GetPropertyAction;

    .line 191
    const-string v3, "sun.java2d.opengl.lcdshader"

    .line 190
    invoke-direct {v1, v3}, Lsun/security/action/GetPropertyAction;-><init>(Ljava/lang/String;)V

    .line 189
    invoke-static {v1}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Ljava/lang/String;

    .line 192
    .local v11, "lcd":Ljava/lang/String;
    const-string v1, "false"

    invoke-virtual {v1, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_3

    move v1, v2

    :goto_1
    sput-boolean v1, Lae/sun/java2d/opengl/OGLSurfaceData;->isLCDShaderEnabled:Z

    .line 196
    new-instance v1, Lsun/security/action/GetPropertyAction;

    .line 197
    const-string v3, "sun.java2d.opengl.biopshader"

    .line 196
    invoke-direct {v1, v3}, Lsun/security/action/GetPropertyAction;-><init>(Ljava/lang/String;)V

    .line 195
    invoke-static {v1}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    .line 198
    .local v0, "biop":Ljava/lang/String;
    const-string v1, "false"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_4

    move v1, v2

    :goto_2
    sput-boolean v1, Lae/sun/java2d/opengl/OGLSurfaceData;->isBIOpShaderEnabled:Z

    .line 202
    new-instance v1, Lsun/security/action/GetPropertyAction;

    .line 203
    const-string v3, "sun.java2d.opengl.gradshader"

    .line 202
    invoke-direct {v1, v3}, Lsun/security/action/GetPropertyAction;-><init>(Ljava/lang/String;)V

    .line 201
    invoke-static {v1}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Ljava/lang/String;

    .line 204
    .local v10, "grad":Ljava/lang/String;
    const-string v1, "false"

    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_5

    :goto_3
    sput-boolean v2, Lae/sun/java2d/opengl/OGLSurfaceData;->isGradShaderEnabled:Z

    .line 206
    invoke-static {}, Lae/sun/java2d/opengl/OGLRenderQueue;->getInstance()Lae/sun/java2d/opengl/OGLRenderQueue;

    move-result-object v12

    .line 207
    .local v12, "rq":Lae/sun/java2d/opengl/OGLRenderQueue;
    new-instance v1, Lae/sun/java2d/opengl/OGLDrawImage;

    invoke-direct {v1}, Lae/sun/java2d/opengl/OGLDrawImage;-><init>()V

    sput-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->oglImagePipe:Lae/sun/java2d/opengl/OGLDrawImage;

    .line 208
    new-instance v1, Lae/sun/java2d/opengl/OGLTextRenderer;

    invoke-direct {v1, v12}, Lae/sun/java2d/opengl/OGLTextRenderer;-><init>(Lae/sun/java2d/pipe/RenderQueue;)V

    sput-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->oglTextPipe:Lae/sun/java2d/opengl/OGLTextRenderer;

    .line 209
    new-instance v1, Lae/sun/java2d/opengl/OGLRenderer;

    invoke-direct {v1, v12}, Lae/sun/java2d/opengl/OGLRenderer;-><init>(Lae/sun/java2d/pipe/RenderQueue;)V

    sput-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->oglRenderPipe:Lae/sun/java2d/opengl/OGLRenderer;

    .line 210
    invoke-static {}, Lae/sun/java2d/loops/GraphicsPrimitive;->tracingEnabled()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 211
    sget-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->oglTextPipe:Lae/sun/java2d/opengl/OGLTextRenderer;

    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLTextRenderer;->traceWrap()Lae/sun/java2d/opengl/OGLTextRenderer;

    move-result-object v1

    sput-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->oglTextPipe:Lae/sun/java2d/opengl/OGLTextRenderer;

    .line 215
    :cond_0
    sget-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->oglRenderPipe:Lae/sun/java2d/opengl/OGLRenderer;

    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderer;->getAAParallelogramPipe()Lae/sun/java2d/pipe/ParallelogramPipe;

    move-result-object v1

    sput-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->oglAAPgramPipe:Lae/sun/java2d/pipe/ParallelogramPipe;

    .line 217
    new-instance v1, Lae/sun/java2d/pipe/PixelToParallelogramConverter;

    sget-object v2, Lae/sun/java2d/opengl/OGLSurfaceData;->oglRenderPipe:Lae/sun/java2d/opengl/OGLRenderer;

    .line 218
    sget-object v3, Lae/sun/java2d/opengl/OGLSurfaceData;->oglRenderPipe:Lae/sun/java2d/opengl/OGLRenderer;

    .line 219
    const-wide/high16 v4, 0x3ff0000000000000L    # 1.0

    const-wide/high16 v6, 0x3fd0000000000000L    # 0.25

    .line 217
    invoke-direct/range {v1 .. v8}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;-><init>(Lae/sun/java2d/pipe/ShapeDrawPipe;Lae/sun/java2d/pipe/ParallelogramPipe;DDZ)V

    .line 216
    sput-object v1, Lae/sun/java2d/opengl/OGLSurfaceData;->oglTxRenderPipe:Lae/sun/java2d/pipe/PixelToParallelogramConverter;

    .line 221
    invoke-static {}, Lae/sun/java2d/opengl/OGLBlitLoops;->register()V

    .line 222
    invoke-static {}, Lae/sun/java2d/opengl/OGLMaskFill;->register()V

    .line 223
    invoke-static {}, Lae/sun/java2d/opengl/OGLMaskBlit;->register()V

    .line 225
    :cond_1
    return-void

    .end local v0    # "biop":Ljava/lang/String;
    .end local v10    # "grad":Ljava/lang/String;
    .end local v11    # "lcd":Ljava/lang/String;
    .end local v12    # "rq":Lae/sun/java2d/opengl/OGLRenderQueue;
    :cond_2
    move v1, v8

    .line 186
    goto/16 :goto_0

    .restart local v11    # "lcd":Ljava/lang/String;
    :cond_3
    move v1, v8

    .line 192
    goto :goto_1

    .restart local v0    # "biop":Ljava/lang/String;
    :cond_4
    move v1, v8

    .line 198
    goto :goto_2

    .restart local v10    # "grad":Ljava/lang/String;
    :cond_5
    move v2, v8

    .line 204
    goto :goto_3
.end method

.method protected constructor <init>(Lae/sun/java2d/opengl/OGLGraphicsConfig;Lae/java/awt/image/ColorModel;I)V
    .locals 1
    .param p1, "gc"    # Lae/sun/java2d/opengl/OGLGraphicsConfig;
    .param p2, "cm"    # Lae/java/awt/image/ColorModel;
    .param p3, "type"    # I

    .prologue
    .line 230
    invoke-static {p3}, Lae/sun/java2d/opengl/OGLSurfaceData;->getCustomSurfaceType(I)Lae/sun/java2d/loops/SurfaceType;

    move-result-object v0

    invoke-direct {p0, v0, p2}, Lae/sun/java2d/SurfaceData;-><init>(Lae/sun/java2d/loops/SurfaceType;Lae/java/awt/image/ColorModel;)V

    .line 231
    iput-object p1, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    .line 232
    iput p3, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->type:I

    .line 233
    invoke-interface {p1}, Lae/sun/java2d/opengl/OGLGraphicsConfig;->getProxyKey()Ljava/lang/Object;

    move-result-object v0

    invoke-virtual {p0, v0}, Lae/sun/java2d/opengl/OGLSurfaceData;->setBlitProxyKey(Ljava/lang/Object;)V

    .line 234
    return-void
.end method

.method static synthetic access$1(Lae/sun/java2d/opengl/OGLSurfaceData;II)V
    .locals 0

    .prologue
    .line 262
    invoke-direct {p0, p1, p2}, Lae/sun/java2d/opengl/OGLSurfaceData;->initSurfaceNow(II)V

    return-void
.end method

.method static dispose(JJ)V
    .locals 4
    .param p0, "pData"    # J
    .param p2, "pConfigInfo"    # J

    .prologue
    .line 591
    invoke-static {}, Lae/sun/java2d/opengl/OGLRenderQueue;->getInstance()Lae/sun/java2d/opengl/OGLRenderQueue;

    move-result-object v1

    .line 592
    .local v1, "rq":Lae/sun/java2d/opengl/OGLRenderQueue;
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->lock()V

    .line 596
    :try_start_0
    invoke-static {p2, p3}, Lae/sun/java2d/opengl/OGLContext;->setScratchSurface(J)V

    .line 598
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->getBuffer()Lae/sun/java2d/pipe/RenderBuffer;

    move-result-object v0

    .line 599
    .local v0, "buf":Lae/sun/java2d/pipe/RenderBuffer;
    const/16 v2, 0xc

    const/4 v3, 0x4

    invoke-virtual {v1, v2, v3}, Lae/sun/java2d/opengl/OGLRenderQueue;->ensureCapacityAndAlignment(II)V

    .line 600
    const/16 v2, 0x49

    invoke-virtual {v0, v2}, Lae/sun/java2d/pipe/RenderBuffer;->putInt(I)Lae/sun/java2d/pipe/RenderBuffer;

    .line 601
    invoke-virtual {v0, p0, p1}, Lae/sun/java2d/pipe/RenderBuffer;->putLong(J)Lae/sun/java2d/pipe/RenderBuffer;

    .line 604
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->flushNow()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 606
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->unlock()V

    .line 608
    return-void

    .line 605
    .end local v0    # "buf":Lae/sun/java2d/pipe/RenderBuffer;
    :catchall_0
    move-exception v2

    .line 606
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->unlock()V

    .line 607
    throw v2
.end method

.method private static getCustomSurfaceType(I)Lae/sun/java2d/loops/SurfaceType;
    .locals 1
    .param p0, "oglType"    # I

    .prologue
    .line 246
    packed-switch p0, :pswitch_data_0

    .line 253
    :pswitch_0
    sget-object v0, Lae/sun/java2d/opengl/OGLSurfaceData;->OpenGLSurface:Lae/sun/java2d/loops/SurfaceType;

    :goto_0
    return-object v0

    .line 248
    :pswitch_1
    sget-object v0, Lae/sun/java2d/opengl/OGLSurfaceData;->OpenGLTexture:Lae/sun/java2d/loops/SurfaceType;

    goto :goto_0

    .line 250
    :pswitch_2
    sget-object v0, Lae/sun/java2d/opengl/OGLSurfaceData;->OpenGLSurfaceRTT:Lae/sun/java2d/loops/SurfaceType;

    goto :goto_0

    .line 246
    :pswitch_data_0
    .packed-switch 0x3
        :pswitch_1
        :pswitch_0
        :pswitch_2
    .end packed-switch
.end method

.method private native getTextureID(J)I
.end method

.method private native getTextureTarget(J)I
.end method

.method private initSurfaceNow(II)V
    .locals 11
    .param p1, "width"    # I
    .param p2, "height"    # I

    .prologue
    const/4 v6, 0x1

    .line 263
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->getTransparency()I

    move-result v1

    if-ne v1, v6, :cond_0

    .line 264
    .local v6, "isOpaque":Z
    :goto_0
    const/4 v0, 0x0

    .line 266
    .local v0, "success":Z
    iget v1, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->type:I

    packed-switch v1, :pswitch_data_0

    .line 296
    :goto_1
    if-nez v0, :cond_1

    .line 297
    new-instance v1, Ljava/lang/OutOfMemoryError;

    const-string v2, "can\'t create offscreen surface"

    invoke-direct {v1, v2}, Ljava/lang/OutOfMemoryError;-><init>(Ljava/lang/String;)V

    throw v1

    .line 263
    .end local v0    # "success":Z
    .end local v6    # "isOpaque":Z
    :cond_0
    const/4 v6, 0x0

    goto :goto_0

    .line 268
    .restart local v0    # "success":Z
    .restart local v6    # "isOpaque":Z
    :pswitch_0
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->getNativeOps()J

    move-result-wide v2

    .line 269
    iget-object v1, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    invoke-interface {v1}, Lae/sun/java2d/opengl/OGLGraphicsConfig;->getNativeConfigInfo()J

    move-result-wide v4

    move-object v1, p0

    move v7, p1

    move v8, p2

    .line 268
    invoke-virtual/range {v1 .. v8}, Lae/sun/java2d/opengl/OGLSurfaceData;->initPbuffer(JJZII)Z

    move-result v0

    .line 272
    goto :goto_1

    .line 275
    :pswitch_1
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->getNativeOps()J

    move-result-wide v4

    .line 276
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->isTexNonPow2Available()Z

    move-result v7

    .line 277
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->isTexRectAvailable()Z

    move-result v8

    move-object v3, p0

    move v9, p1

    move v10, p2

    .line 275
    invoke-virtual/range {v3 .. v10}, Lae/sun/java2d/opengl/OGLSurfaceData;->initTexture(JZZZII)Z

    move-result v0

    .line 279
    goto :goto_1

    .line 282
    :pswitch_2
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->getNativeOps()J

    move-result-wide v4

    .line 283
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->isTexNonPow2Available()Z

    move-result v7

    .line 284
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->isTexRectAvailable()Z

    move-result v8

    move-object v3, p0

    move v9, p1

    move v10, p2

    .line 282
    invoke-virtual/range {v3 .. v10}, Lae/sun/java2d/opengl/OGLSurfaceData;->initFBObject(JZZZII)Z

    move-result v0

    .line 286
    goto :goto_1

    .line 289
    :pswitch_3
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->getNativeOps()J

    move-result-wide v2

    invoke-virtual {p0, v2, v3}, Lae/sun/java2d/opengl/OGLSurfaceData;->initFlipBackbuffer(J)Z

    move-result v0

    .line 290
    goto :goto_1

    .line 299
    :cond_1
    return-void

    .line 266
    nop

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_0
        :pswitch_1
        :pswitch_3
        :pswitch_2
    .end packed-switch
.end method

.method static swapBuffers(J)V
    .locals 4
    .param p0, "window"    # J

    .prologue
    .line 611
    invoke-static {}, Lae/sun/java2d/opengl/OGLRenderQueue;->getInstance()Lae/sun/java2d/opengl/OGLRenderQueue;

    move-result-object v1

    .line 612
    .local v1, "rq":Lae/sun/java2d/opengl/OGLRenderQueue;
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->lock()V

    .line 614
    :try_start_0
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->getBuffer()Lae/sun/java2d/pipe/RenderBuffer;

    move-result-object v0

    .line 615
    .local v0, "buf":Lae/sun/java2d/pipe/RenderBuffer;
    const/16 v2, 0xc

    const/4 v3, 0x4

    invoke-virtual {v1, v2, v3}, Lae/sun/java2d/opengl/OGLRenderQueue;->ensureCapacityAndAlignment(II)V

    .line 616
    const/16 v2, 0x50

    invoke-virtual {v0, v2}, Lae/sun/java2d/pipe/RenderBuffer;->putInt(I)Lae/sun/java2d/pipe/RenderBuffer;

    .line 617
    invoke-virtual {v0, p0, p1}, Lae/sun/java2d/pipe/RenderBuffer;->putLong(J)Lae/sun/java2d/pipe/RenderBuffer;

    .line 618
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->flushNow()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 620
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->unlock()V

    .line 622
    return-void

    .line 619
    .end local v0    # "buf":Lae/sun/java2d/pipe/RenderBuffer;
    :catchall_0
    move-exception v2

    .line 620
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->unlock()V

    .line 621
    throw v2
.end method


# virtual methods
.method public canRenderLCDText(Lae/sun/java2d/SunGraphics2D;)Z
    .locals 2
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;

    .prologue
    .line 411
    iget-object v0, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    const/high16 v1, 0x20000

    invoke-interface {v0, v1}, Lae/sun/java2d/opengl/OGLGraphicsConfig;->isCapPresent(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 412
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    if-gtz v0, :cond_0

    .line 413
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->paintState:I

    .line 410
    if-gtz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public copyArea(Lae/sun/java2d/SunGraphics2D;IIIIII)Z
    .locals 8
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "w"    # I
    .param p5, "h"    # I
    .param p6, "dx"    # I
    .param p7, "dy"    # I

    .prologue
    .line 548
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->transformState:I

    const/4 v1, 0x3

    if-ge v0, v1, :cond_0

    .line 549
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    const/4 v1, 0x2

    if-ge v0, v1, :cond_0

    .line 551
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->transX:I

    add-int/2addr p2, v0

    .line 552
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->transY:I

    add-int/2addr p3, v0

    .line 554
    sget-object v0, Lae/sun/java2d/opengl/OGLSurfaceData;->oglRenderPipe:Lae/sun/java2d/opengl/OGLRenderer;

    move-object v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    move v6, p6

    move v7, p7

    invoke-virtual/range {v0 .. v7}, Lae/sun/java2d/opengl/OGLRenderer;->copyArea(Lae/sun/java2d/SunGraphics2D;IIIIII)V

    .line 556
    const/4 v0, 0x1

    .line 558
    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public flush()V
    .locals 4

    .prologue
    .line 562
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->invalidate()V

    .line 563
    invoke-static {}, Lae/sun/java2d/opengl/OGLRenderQueue;->getInstance()Lae/sun/java2d/opengl/OGLRenderQueue;

    move-result-object v1

    .line 564
    .local v1, "rq":Lae/sun/java2d/opengl/OGLRenderQueue;
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->lock()V

    .line 568
    :try_start_0
    iget-object v2, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    invoke-static {v2}, Lae/sun/java2d/opengl/OGLContext;->setScratchSurface(Lae/sun/java2d/opengl/OGLGraphicsConfig;)V

    .line 570
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->getBuffer()Lae/sun/java2d/pipe/RenderBuffer;

    move-result-object v0

    .line 571
    .local v0, "buf":Lae/sun/java2d/pipe/RenderBuffer;
    const/16 v2, 0xc

    const/4 v3, 0x4

    invoke-virtual {v1, v2, v3}, Lae/sun/java2d/opengl/OGLRenderQueue;->ensureCapacityAndAlignment(II)V

    .line 572
    const/16 v2, 0x48

    invoke-virtual {v0, v2}, Lae/sun/java2d/pipe/RenderBuffer;->putInt(I)Lae/sun/java2d/pipe/RenderBuffer;

    .line 573
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->getNativeOps()J

    move-result-wide v2

    invoke-virtual {v0, v2, v3}, Lae/sun/java2d/pipe/RenderBuffer;->putLong(J)Lae/sun/java2d/pipe/RenderBuffer;

    .line 576
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->flushNow()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 578
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->unlock()V

    .line 580
    return-void

    .line 577
    .end local v0    # "buf":Lae/sun/java2d/pipe/RenderBuffer;
    :catchall_0
    move-exception v2

    .line 578
    invoke-virtual {v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->unlock()V

    .line 579
    throw v2
.end method

.method public final getContext()Lae/sun/java2d/opengl/OGLContext;
    .locals 1

    .prologue
    .line 336
    iget-object v0, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    invoke-interface {v0}, Lae/sun/java2d/opengl/OGLGraphicsConfig;->getContext()Lae/sun/java2d/opengl/OGLContext;

    move-result-object v0

    return-object v0
.end method

.method public bridge synthetic getContext()Lae/sun/java2d/pipe/BufferedContext;
    .locals 1

    .prologue
    .line 1
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->getContext()Lae/sun/java2d/opengl/OGLContext;

    move-result-object v0

    return-object v0
.end method

.method protected getMaskFill(Lae/sun/java2d/SunGraphics2D;)Lae/sun/java2d/loops/MaskFill;
    .locals 2
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;

    .prologue
    .line 524
    iget v0, p1, Lae/sun/java2d/SunGraphics2D;->paintState:I

    const/4 v1, 0x1

    if-le v0, v1, :cond_1

    .line 536
    invoke-static {p1}, Lae/sun/java2d/opengl/OGLPaints;->isValid(Lae/sun/java2d/SunGraphics2D;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 537
    iget-object v0, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    const/16 v1, 0x10

    invoke-interface {v0, v1}, Lae/sun/java2d/opengl/OGLGraphicsConfig;->isCapPresent(I)Z

    move-result v0

    if-nez v0, :cond_1

    .line 539
    :cond_0
    const/4 v0, 0x0

    .line 542
    :goto_0
    return-object v0

    :cond_1
    invoke-super {p0, p1}, Lae/sun/java2d/SurfaceData;->getMaskFill(Lae/sun/java2d/SunGraphics2D;)Lae/sun/java2d/loops/MaskFill;

    move-result-object v0

    goto :goto_0
.end method

.method public getNativeBounds()Lae/java/awt/Rectangle;
    .locals 4

    .prologue
    .line 642
    invoke-static {}, Lae/sun/java2d/opengl/OGLRenderQueue;->getInstance()Lae/sun/java2d/opengl/OGLRenderQueue;

    move-result-object v0

    .line 643
    .local v0, "rq":Lae/sun/java2d/opengl/OGLRenderQueue;
    invoke-virtual {v0}, Lae/sun/java2d/opengl/OGLRenderQueue;->lock()V

    .line 645
    :try_start_0
    new-instance v1, Lae/java/awt/Rectangle;

    iget v2, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->nativeWidth:I

    iget v3, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->nativeHeight:I

    invoke-direct {v1, v2, v3}, Lae/java/awt/Rectangle;-><init>(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 647
    invoke-virtual {v0}, Lae/sun/java2d/opengl/OGLRenderQueue;->unlock()V

    .line 645
    return-object v1

    .line 646
    :catchall_0
    move-exception v1

    .line 647
    invoke-virtual {v0}, Lae/sun/java2d/opengl/OGLRenderQueue;->unlock()V

    .line 648
    throw v1
.end method

.method public getNativeResource(I)J
    .locals 2
    .param p1, "resType"    # I

    .prologue
    .line 389
    const/4 v0, 0x3

    if-ne p1, v0, :cond_0

    .line 390
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->getTextureID()I

    move-result v0

    int-to-long v0, v0

    .line 392
    :goto_0
    return-wide v0

    :cond_0
    const-wide/16 v0, 0x0

    goto :goto_0
.end method

.method final getOGLGraphicsConfig()Lae/sun/java2d/opengl/OGLGraphicsConfig;
    .locals 1

    .prologue
    .line 343
    iget-object v0, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    return-object v0
.end method

.method public getRaster(IIII)Lae/java/awt/image/Raster;
    .locals 2
    .param p1, "x"    # I
    .param p2, "y"    # I
    .param p3, "w"    # I
    .param p4, "h"    # I

    .prologue
    .line 396
    new-instance v0, Ljava/lang/InternalError;

    const-string v1, "not implemented yet"

    invoke-direct {v0, v1}, Ljava/lang/InternalError;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public final getTextureID()I
    .locals 2

    .prologue
    .line 368
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->getNativeOps()J

    move-result-wide v0

    invoke-direct {p0, v0, v1}, Lae/sun/java2d/opengl/OGLSurfaceData;->getTextureID(J)I

    move-result v0

    return v0
.end method

.method public final getTextureTarget()I
    .locals 2

    .prologue
    .line 359
    invoke-virtual {p0}, Lae/sun/java2d/opengl/OGLSurfaceData;->getNativeOps()J

    move-result-wide v0

    invoke-direct {p0, v0, v1}, Lae/sun/java2d/opengl/OGLSurfaceData;->getTextureTarget(J)I

    move-result v0

    return v0
.end method

.method public final getType()I
    .locals 1

    .prologue
    .line 350
    iget v0, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->type:I

    return v0
.end method

.method protected native initFBObject(JZZZII)Z
.end method

.method protected native initFlipBackbuffer(J)Z
.end method

.method protected abstract initPbuffer(JJZII)Z
.end method

.method protected initSurface(II)V
    .locals 2
    .param p1, "width"    # I
    .param p2, "height"    # I

    .prologue
    .line 307
    invoke-static {}, Lae/sun/java2d/opengl/OGLRenderQueue;->getInstance()Lae/sun/java2d/opengl/OGLRenderQueue;

    move-result-object v0

    .line 308
    .local v0, "rq":Lae/sun/java2d/opengl/OGLRenderQueue;
    invoke-virtual {v0}, Lae/sun/java2d/opengl/OGLRenderQueue;->lock()V

    .line 310
    :try_start_0
    iget v1, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->type:I

    packed-switch v1, :pswitch_data_0

    .line 321
    :goto_0
    :pswitch_0
    new-instance v1, Lae/sun/java2d/opengl/OGLSurfaceData$1;

    invoke-direct {v1, p0, p1, p2}, Lae/sun/java2d/opengl/OGLSurfaceData$1;-><init>(Lae/sun/java2d/opengl/OGLSurfaceData;II)V

    invoke-virtual {v0, v1}, Lae/sun/java2d/opengl/OGLRenderQueue;->flushAndInvokeNow(Ljava/lang/Runnable;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 327
    invoke-virtual {v0}, Lae/sun/java2d/opengl/OGLRenderQueue;->unlock()V

    .line 329
    return-void

    .line 316
    :pswitch_1
    :try_start_1
    iget-object v1, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    invoke-static {v1}, Lae/sun/java2d/opengl/OGLContext;->setScratchSurface(Lae/sun/java2d/opengl/OGLGraphicsConfig;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 326
    :catchall_0
    move-exception v1

    .line 327
    invoke-virtual {v0}, Lae/sun/java2d/opengl/OGLRenderQueue;->unlock()V

    .line 328
    throw v1

    .line 310
    nop

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_1
        :pswitch_1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method protected native initTexture(JZZZII)Z
.end method

.method isTexNonPow2Available()Z
    .locals 2

    .prologue
    .line 629
    iget-object v0, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    const/16 v1, 0x20

    invoke-interface {v0, v1}, Lae/sun/java2d/opengl/OGLGraphicsConfig;->isCapPresent(I)Z

    move-result v0

    return v0
.end method

.method isTexRectAvailable()Z
    .locals 2

    .prologue
    .line 638
    iget-object v0, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    const/high16 v1, 0x100000

    invoke-interface {v0, v1}, Lae/sun/java2d/opengl/OGLGraphicsConfig;->isCapPresent(I)Z

    move-result v0

    return v0
.end method

.method public makeProxyFor(Lae/sun/java2d/SurfaceData;)Lae/sun/java2d/SurfaceDataProxy;
    .locals 1
    .param p1, "srcData"    # Lae/sun/java2d/SurfaceData;

    .prologue
    .line 238
    iget-object v0, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    invoke-static {p1, v0}, Lae/sun/java2d/opengl/OGLSurfaceDataProxy;->createProxy(Lae/sun/java2d/SurfaceData;Lae/sun/java2d/opengl/OGLGraphicsConfig;)Lae/sun/java2d/SurfaceDataProxy;

    move-result-object v0

    return-object v0
.end method

.method public validatePipe(Lae/sun/java2d/SunGraphics2D;)V
    .locals 13
    .param p1, "sg2d"    # Lae/sun/java2d/SunGraphics2D;

    .prologue
    const/4 v12, 0x3

    const/4 v4, 0x2

    const/4 v3, 0x1

    .line 418
    const/4 v11, 0x0

    .line 428
    .local v11, "validated":Z
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    if-gtz v2, :cond_0

    .line 429
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->paintState:I

    if-le v2, v3, :cond_2

    .line 432
    :cond_0
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    if-ne v2, v3, :cond_1

    .line 433
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->paintState:I

    if-gt v2, v3, :cond_1

    .line 434
    iget-object v2, p1, Lae/sun/java2d/SunGraphics2D;->composite:Lae/java/awt/Composite;

    check-cast v2, Lae/java/awt/AlphaComposite;

    invoke-virtual {v2}, Lae/java/awt/AlphaComposite;->getRule()I

    move-result v2

    if-eq v2, v12, :cond_2

    .line 438
    :cond_1
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    if-ne v2, v4, :cond_5

    .line 439
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->paintState:I

    if-gt v2, v3, :cond_5

    .line 441
    :cond_2
    sget-object v9, Lae/sun/java2d/opengl/OGLSurfaceData;->oglTextPipe:Lae/sun/java2d/opengl/OGLTextRenderer;

    .line 450
    .local v9, "textpipe":Lae/sun/java2d/pipe/TextPipe;
    :goto_0
    const/4 v10, 0x0

    .line 451
    .local v10, "txPipe":Lae/sun/java2d/pipe/PixelToParallelogramConverter;
    const/4 v0, 0x0

    .line 453
    .local v0, "nonTxPipe":Lae/sun/java2d/opengl/OGLRenderer;
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->antialiasHint:I

    if-eq v2, v4, :cond_7

    .line 454
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->paintState:I

    if-gt v2, v3, :cond_6

    .line 455
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    if-gt v2, v4, :cond_3

    .line 456
    sget-object v10, Lae/sun/java2d/opengl/OGLSurfaceData;->oglTxRenderPipe:Lae/sun/java2d/pipe/PixelToParallelogramConverter;

    .line 457
    sget-object v0, Lae/sun/java2d/opengl/OGLSurfaceData;->oglRenderPipe:Lae/sun/java2d/opengl/OGLRenderer;

    .line 493
    :cond_3
    :goto_1
    if-eqz v10, :cond_d

    .line 494
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->transformState:I

    if-lt v2, v12, :cond_b

    .line 495
    iput-object v10, p1, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    .line 496
    iput-object v10, p1, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    .line 508
    :goto_2
    iput-object v10, p1, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    .line 516
    :cond_4
    :goto_3
    iput-object v9, p1, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    .line 519
    sget-object v2, Lae/sun/java2d/opengl/OGLSurfaceData;->oglImagePipe:Lae/sun/java2d/opengl/OGLDrawImage;

    iput-object v2, p1, Lae/sun/java2d/SunGraphics2D;->imagepipe:Lae/sun/java2d/pipe/DrawImagePipe;

    .line 520
    return-void

    .line 445
    .end local v0    # "nonTxPipe":Lae/sun/java2d/opengl/OGLRenderer;
    .end local v9    # "textpipe":Lae/sun/java2d/pipe/TextPipe;
    .end local v10    # "txPipe":Lae/sun/java2d/pipe/PixelToParallelogramConverter;
    :cond_5
    invoke-super {p0, p1}, Lae/sun/java2d/SurfaceData;->validatePipe(Lae/sun/java2d/SunGraphics2D;)V

    .line 446
    iget-object v9, p1, Lae/sun/java2d/SunGraphics2D;->textpipe:Lae/sun/java2d/pipe/TextPipe;

    .line 447
    .restart local v9    # "textpipe":Lae/sun/java2d/pipe/TextPipe;
    const/4 v11, 0x1

    goto :goto_0

    .line 459
    .restart local v0    # "nonTxPipe":Lae/sun/java2d/opengl/OGLRenderer;
    .restart local v10    # "txPipe":Lae/sun/java2d/pipe/PixelToParallelogramConverter;
    :cond_6
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    if-gt v2, v3, :cond_3

    .line 460
    invoke-static {p1}, Lae/sun/java2d/opengl/OGLPaints;->isValid(Lae/sun/java2d/SunGraphics2D;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 461
    sget-object v10, Lae/sun/java2d/opengl/OGLSurfaceData;->oglTxRenderPipe:Lae/sun/java2d/pipe/PixelToParallelogramConverter;

    .line 462
    sget-object v0, Lae/sun/java2d/opengl/OGLSurfaceData;->oglRenderPipe:Lae/sun/java2d/opengl/OGLRenderer;

    .line 466
    goto :goto_1

    .line 467
    :cond_7
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->paintState:I

    if-gt v2, v3, :cond_3

    .line 468
    iget-object v2, p0, Lae/sun/java2d/opengl/OGLSurfaceData;->graphicsConfig:Lae/sun/java2d/opengl/OGLGraphicsConfig;

    const/16 v3, 0x100

    invoke-interface {v2, v3}, Lae/sun/java2d/opengl/OGLGraphicsConfig;->isCapPresent(I)Z

    move-result v2

    if-eqz v2, :cond_a

    .line 469
    iget-object v2, p1, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    sget-object v3, Lae/sun/java2d/loops/CompositeType;->SrcOverNoEa:Lae/sun/java2d/loops/CompositeType;

    if-eq v2, v3, :cond_8

    .line 470
    iget-object v2, p1, Lae/sun/java2d/SunGraphics2D;->imageComp:Lae/sun/java2d/loops/CompositeType;

    sget-object v3, Lae/sun/java2d/loops/CompositeType;->SrcOver:Lae/sun/java2d/loops/CompositeType;

    if-ne v2, v3, :cond_a

    .line 472
    :cond_8
    if-nez v11, :cond_9

    .line 473
    invoke-super {p0, p1}, Lae/sun/java2d/SurfaceData;->validatePipe(Lae/sun/java2d/SunGraphics2D;)V

    .line 474
    const/4 v11, 0x1

    .line 477
    :cond_9
    new-instance v1, Lae/sun/java2d/pipe/PixelToParallelogramConverter;

    iget-object v2, p1, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    .line 478
    sget-object v3, Lae/sun/java2d/opengl/OGLSurfaceData;->oglAAPgramPipe:Lae/sun/java2d/pipe/ParallelogramPipe;

    .line 479
    const-wide/high16 v4, 0x3fc0000000000000L    # 0.125

    const-wide v6, 0x3fdfef9db22d0e56L    # 0.499

    .line 480
    const/4 v8, 0x0

    .line 477
    invoke-direct/range {v1 .. v8}, Lae/sun/java2d/pipe/PixelToParallelogramConverter;-><init>(Lae/sun/java2d/pipe/ShapeDrawPipe;Lae/sun/java2d/pipe/ParallelogramPipe;DDZ)V

    .line 481
    .local v1, "aaConverter":Lae/sun/java2d/pipe/PixelToParallelogramConverter;
    iput-object v1, p1, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    .line 482
    iput-object v1, p1, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    .line 483
    iput-object v1, p1, Lae/sun/java2d/SunGraphics2D;->shapepipe:Lae/sun/java2d/pipe/ShapeDrawPipe;

    goto :goto_1

    .line 484
    .end local v1    # "aaConverter":Lae/sun/java2d/pipe/PixelToParallelogramConverter;
    :cond_a
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->compositeState:I

    if-ne v2, v4, :cond_3

    .line 486
    sget-object v10, Lae/sun/java2d/opengl/OGLSurfaceData;->oglTxRenderPipe:Lae/sun/java2d/pipe/PixelToParallelogramConverter;

    .line 487
    sget-object v0, Lae/sun/java2d/opengl/OGLSurfaceData;->oglRenderPipe:Lae/sun/java2d/opengl/OGLRenderer;

    goto :goto_1

    .line 497
    :cond_b
    iget v2, p1, Lae/sun/java2d/SunGraphics2D;->strokeState:I

    if-eqz v2, :cond_c

    .line 498
    iput-object v10, p1, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    .line 499
    iput-object v0, p1, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    goto :goto_2

    .line 501
    :cond_c
    iput-object v0, p1, Lae/sun/java2d/SunGraphics2D;->drawpipe:Lae/sun/java2d/pipe/PixelDrawPipe;

    .line 502
    iput-object v0, p1, Lae/sun/java2d/SunGraphics2D;->fillpipe:Lae/sun/java2d/pipe/PixelFillPipe;

    goto :goto_2

    .line 510
    :cond_d
    if-nez v11, :cond_4

    .line 511
    invoke-super {p0, p1}, Lae/sun/java2d/SurfaceData;->validatePipe(Lae/sun/java2d/SunGraphics2D;)V

    goto :goto_3
.end method

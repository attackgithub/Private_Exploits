.class public abstract Lae/java/awt/Image;
.super Ljava/lang/Object;
.source "Image.java"


# static fields
.field public static final SCALE_AREA_AVERAGING:I = 0x10

.field public static final SCALE_DEFAULT:I = 0x1

.field public static final SCALE_FAST:I = 0x2

.field public static final SCALE_REPLICATE:I = 0x8

.field public static final SCALE_SMOOTH:I = 0x4

.field public static final UndefinedProperty:Ljava/lang/Object;

.field private static defaultImageCaps:Lae/java/awt/ImageCapabilities;


# instance fields
.field protected accelerationPriority:F

.field surfaceManager:Lae/sun/awt/image/SurfaceManager;


# direct methods
.method static constructor <clinit>()V
    .locals 2

    .prologue
    .line 53
    new-instance v0, Lae/java/awt/ImageCapabilities;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Lae/java/awt/ImageCapabilities;-><init>(Z)V

    .line 52
    sput-object v0, Lae/java/awt/Image;->defaultImageCaps:Lae/java/awt/ImageCapabilities;

    .line 136
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    sput-object v0, Lae/java/awt/Image;->UndefinedProperty:Ljava/lang/Object;

    .line 344
    new-instance v0, Lae/java/awt/Image$1;

    invoke-direct {v0}, Lae/java/awt/Image$1;-><init>()V

    invoke-static {v0}, Lae/sun/awt/image/SurfaceManager;->setImageAccessor(Lae/sun/awt/image/SurfaceManager$ImageAccessor;)V

    .line 352
    return-void
.end method

.method public constructor <init>()V
    .locals 1

    .prologue
    .line 45
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 62
    const/high16 v0, 0x3f000000    # 0.5f

    iput v0, p0, Lae/java/awt/Image;->accelerationPriority:F

    .line 45
    return-void
.end method


# virtual methods
.method public flush()V
    .locals 1

    .prologue
    .line 259
    iget-object v0, p0, Lae/java/awt/Image;->surfaceManager:Lae/sun/awt/image/SurfaceManager;

    if-eqz v0, :cond_0

    .line 260
    iget-object v0, p0, Lae/java/awt/Image;->surfaceManager:Lae/sun/awt/image/SurfaceManager;

    invoke-virtual {v0}, Lae/sun/awt/image/SurfaceManager;->flush()V

    .line 262
    :cond_0
    return-void
.end method

.method public getAccelerationPriority()F
    .locals 1

    .prologue
    .line 338
    iget v0, p0, Lae/java/awt/Image;->accelerationPriority:F

    return v0
.end method

.method public getCapabilities(Lae/java/awt/GraphicsConfiguration;)Lae/java/awt/ImageCapabilities;
    .locals 1
    .param p1, "gc"    # Lae/java/awt/GraphicsConfiguration;

    .prologue
    .line 287
    iget-object v0, p0, Lae/java/awt/Image;->surfaceManager:Lae/sun/awt/image/SurfaceManager;

    if-eqz v0, :cond_0

    .line 288
    iget-object v0, p0, Lae/java/awt/Image;->surfaceManager:Lae/sun/awt/image/SurfaceManager;

    invoke-virtual {v0, p1}, Lae/sun/awt/image/SurfaceManager;->getCapabilities(Lae/java/awt/GraphicsConfiguration;)Lae/java/awt/ImageCapabilities;

    move-result-object v0

    .line 296
    :goto_0
    return-object v0

    :cond_0
    sget-object v0, Lae/java/awt/Image;->defaultImageCaps:Lae/java/awt/ImageCapabilities;

    goto :goto_0
.end method

.method public abstract getGraphics()Lae/java/awt/Graphics;
.end method

.method public abstract getHeight(Lae/java/awt/image/ImageObserver;)I
.end method

.method public abstract getProperty(Ljava/lang/String;Lae/java/awt/image/ImageObserver;)Ljava/lang/Object;
.end method

.method public getScaledInstance(III)Lae/java/awt/Image;
    .locals 3
    .param p1, "width"    # I
    .param p2, "height"    # I
    .param p3, "hints"    # I

    .prologue
    .line 170
    and-int/lit8 v2, p3, 0x14

    if-eqz v2, :cond_0

    .line 171
    new-instance v0, Lae/java/awt/image/AreaAveragingScaleFilter;

    invoke-direct {v0, p1, p2}, Lae/java/awt/image/AreaAveragingScaleFilter;-><init>(II)V

    .line 176
    .local v0, "filter":Lae/java/awt/image/ImageFilter;
    :goto_0
    new-instance v1, Lae/java/awt/image/FilteredImageSource;

    invoke-virtual {p0}, Lae/java/awt/Image;->getSource()Lae/java/awt/image/ImageProducer;

    move-result-object v2

    invoke-direct {v1, v2, v0}, Lae/java/awt/image/FilteredImageSource;-><init>(Lae/java/awt/image/ImageProducer;Lae/java/awt/image/ImageFilter;)V

    .line 177
    .local v1, "prod":Lae/java/awt/image/ImageProducer;
    invoke-static {}, Lae/java/awt/Toolkit;->getDefaultToolkit()Lae/java/awt/Toolkit;

    move-result-object v2

    invoke-virtual {v2, v1}, Lae/java/awt/Toolkit;->createImage(Lae/java/awt/image/ImageProducer;)Lae/java/awt/Image;

    move-result-object v2

    return-object v2

    .line 173
    .end local v0    # "filter":Lae/java/awt/image/ImageFilter;
    .end local v1    # "prod":Lae/java/awt/image/ImageProducer;
    :cond_0
    new-instance v0, Lae/java/awt/image/ReplicateScaleFilter;

    invoke-direct {v0, p1, p2}, Lae/java/awt/image/ReplicateScaleFilter;-><init>(II)V

    .restart local v0    # "filter":Lae/java/awt/image/ImageFilter;
    goto :goto_0
.end method

.method public abstract getSource()Lae/java/awt/image/ImageProducer;
.end method

.method public abstract getWidth(Lae/java/awt/image/ImageObserver;)I
.end method

.method public setAccelerationPriority(F)V
    .locals 2
    .param p1, "priority"    # F

    .prologue
    .line 320
    const/4 v0, 0x0

    cmpg-float v0, p1, v0

    if-ltz v0, :cond_0

    const/high16 v0, 0x3f800000    # 1.0f

    cmpl-float v0, p1, v0

    if-lez v0, :cond_1

    .line 321
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Priority must be a value between 0 and 1, inclusive"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 324
    :cond_1
    iput p1, p0, Lae/java/awt/Image;->accelerationPriority:F

    .line 325
    iget-object v0, p0, Lae/java/awt/Image;->surfaceManager:Lae/sun/awt/image/SurfaceManager;

    if-eqz v0, :cond_2

    .line 326
    iget-object v0, p0, Lae/java/awt/Image;->surfaceManager:Lae/sun/awt/image/SurfaceManager;

    iget v1, p0, Lae/java/awt/Image;->accelerationPriority:F

    invoke-virtual {v0, v1}, Lae/sun/awt/image/SurfaceManager;->setAccelerationPriority(F)V

    .line 328
    :cond_2
    return-void
.end method

.class public Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;
.super Lae/javax/imageio/ImageWriteParam;
.source "JPEGImageWriteParam.java"


# instance fields
.field private ACHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

.field private DCHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

.field private compressionNames:[Ljava/lang/String;

.field private optimizeHuffman:Z

.field private qTables:[Lae/javax/imageio/plugins/jpeg/JPEGQTable;

.field private qualityDescs:[Ljava/lang/String;

.field private qualityVals:[F


# direct methods
.method public constructor <init>(Ljava/util/Locale;)V
    .locals 5
    .param p1, "locale"    # Ljava/util/Locale;

    .prologue
    const/4 v0, 0x0

    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 119
    invoke-direct {p0, p1}, Lae/javax/imageio/ImageWriteParam;-><init>(Ljava/util/Locale;)V

    .line 95
    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->qTables:[Lae/javax/imageio/plugins/jpeg/JPEGQTable;

    .line 96
    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->DCHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    .line 97
    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->ACHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    .line 98
    iput-boolean v3, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->optimizeHuffman:Z

    .line 99
    new-array v0, v4, [Ljava/lang/String;

    const-string v1, "JPEG"

    aput-object v1, v0, v3

    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->compressionNames:[Ljava/lang/String;

    .line 100
    const/4 v0, 0x4

    new-array v0, v0, [F

    fill-array-data v0, :array_0

    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->qualityVals:[F

    .line 101
    const/4 v0, 0x3

    new-array v0, v0, [Ljava/lang/String;

    .line 102
    const-string v1, "Low quality"

    aput-object v1, v0, v3

    .line 103
    const-string v1, "Medium quality"

    aput-object v1, v0, v4

    const/4 v1, 0x2

    .line 104
    const-string v2, "Visually lossless"

    aput-object v2, v0, v1

    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->qualityDescs:[Ljava/lang/String;

    .line 120
    iput-boolean v4, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->canWriteProgressive:Z

    .line 121
    iput v3, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->progressiveMode:I

    .line 122
    iput-boolean v4, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->canWriteCompressed:Z

    .line 123
    iget-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->compressionNames:[Ljava/lang/String;

    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->compressionTypes:[Ljava/lang/String;

    .line 124
    iget-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->compressionTypes:[Ljava/lang/String;

    aget-object v0, v0, v3

    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->compressionType:Ljava/lang/String;

    .line 125
    const/high16 v0, 0x3f400000    # 0.75f

    iput v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->compressionQuality:F

    .line 126
    return-void

    .line 100
    nop

    :array_0
    .array-data 4
        0x0
        0x3e99999a    # 0.3f
        0x3f400000    # 0.75f
        0x3f800000    # 1.0f
    .end array-data
.end method


# virtual methods
.method public areTablesSet()Z
    .locals 1

    .prologue
    .line 191
    iget-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->qTables:[Lae/javax/imageio/plugins/jpeg/JPEGQTable;

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public getACHuffmanTables()[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;
    .locals 1

    .prologue
    .line 284
    iget-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->ACHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    if-eqz v0, :cond_0

    .line 285
    iget-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->ACHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    invoke-virtual {v0}, [Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    .line 284
    :goto_0
    return-object v0

    .line 286
    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public getCompressionQualityDescriptions()[Ljava/lang/String;
    .locals 2

    .prologue
    .line 163
    invoke-virtual {p0}, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_0

    .line 164
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 165
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 164
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 167
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->getCompressionTypes()[Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 168
    invoke-virtual {p0}, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->getCompressionType()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_1

    .line 169
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "No compression type set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 171
    :cond_1
    iget-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->qualityDescs:[Ljava/lang/String;

    invoke-virtual {v0}, [Ljava/lang/String;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    return-object v0
.end method

.method public getCompressionQualityValues()[F
    .locals 2

    .prologue
    .line 175
    invoke-virtual {p0}, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_0

    .line 176
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 177
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 176
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 179
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->getCompressionTypes()[Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 180
    invoke-virtual {p0}, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->getCompressionType()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_1

    .line 181
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "No compression type set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 183
    :cond_1
    iget-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->qualityVals:[F

    invoke-virtual {v0}, [F->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [F

    return-object v0
.end method

.method public getDCHuffmanTables()[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;
    .locals 1

    .prologue
    .line 268
    iget-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->DCHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    if-eqz v0, :cond_0

    .line 269
    iget-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->DCHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    invoke-virtual {v0}, [Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    .line 268
    :goto_0
    return-object v0

    .line 270
    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public getOptimizeHuffmanTables()Z
    .locals 1

    .prologue
    .line 319
    iget-boolean v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->optimizeHuffman:Z

    return v0
.end method

.method public getQTables()[Lae/javax/imageio/plugins/jpeg/JPEGQTable;
    .locals 1

    .prologue
    .line 254
    iget-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->qTables:[Lae/javax/imageio/plugins/jpeg/JPEGQTable;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->qTables:[Lae/javax/imageio/plugins/jpeg/JPEGQTable;

    invoke-virtual {v0}, [Lae/javax/imageio/plugins/jpeg/JPEGQTable;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lae/javax/imageio/plugins/jpeg/JPEGQTable;

    :goto_0
    return-object v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isCompressionLossless()Z
    .locals 2

    .prologue
    .line 155
    invoke-virtual {p0}, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_0

    .line 156
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 157
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 156
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 159
    :cond_0
    const/4 v0, 0x0

    return v0
.end method

.method public setEncodeTables([Lae/javax/imageio/plugins/jpeg/JPEGQTable;[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;)V
    .locals 2
    .param p1, "qTables"    # [Lae/javax/imageio/plugins/jpeg/JPEGQTable;
    .param p2, "DCHuffmanTables"    # [Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;
    .param p3, "ACHuffmanTables"    # [Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    .prologue
    const/4 v1, 0x4

    .line 217
    if-eqz p1, :cond_0

    .line 218
    if-eqz p2, :cond_0

    .line 219
    if-eqz p3, :cond_0

    .line 220
    array-length v0, p1

    if-gt v0, v1, :cond_0

    .line 221
    array-length v0, p2

    if-gt v0, v1, :cond_0

    .line 222
    array-length v0, p3

    if-gt v0, v1, :cond_0

    .line 223
    array-length v0, p2

    array-length v1, p3

    if-eq v0, v1, :cond_1

    .line 224
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Invalid JPEG table arrays"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 226
    :cond_1
    invoke-virtual {p1}, [Lae/javax/imageio/plugins/jpeg/JPEGQTable;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lae/javax/imageio/plugins/jpeg/JPEGQTable;

    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->qTables:[Lae/javax/imageio/plugins/jpeg/JPEGQTable;

    .line 227
    invoke-virtual {p2}, [Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->DCHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    .line 228
    invoke-virtual {p3}, [Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->ACHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    .line 229
    return-void
.end method

.method public setOptimizeHuffmanTables(Z)V
    .locals 0
    .param p1, "optimize"    # Z

    .prologue
    .line 304
    iput-boolean p1, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->optimizeHuffman:Z

    .line 305
    return-void
.end method

.method public unsetCompression()V
    .locals 2

    .prologue
    .line 138
    invoke-virtual {p0}, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_0

    .line 139
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 140
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 139
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 142
    :cond_0
    const/high16 v0, 0x3f400000    # 0.75f

    iput v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->compressionQuality:F

    .line 143
    return-void
.end method

.method public unsetEncodeTables()V
    .locals 1

    .prologue
    const/4 v0, 0x0

    .line 238
    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->qTables:[Lae/javax/imageio/plugins/jpeg/JPEGQTable;

    .line 239
    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->DCHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    .line 240
    iput-object v0, p0, Lae/javax/imageio/plugins/jpeg/JPEGImageWriteParam;->ACHuffmanTables:[Lae/javax/imageio/plugins/jpeg/JPEGHuffmanTable;

    .line 241
    return-void
.end method

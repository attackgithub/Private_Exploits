.class Lae/javax/imageio/ImageTypeSpecifier$Banded;
.super Lae/javax/imageio/ImageTypeSpecifier;
.source "ImageTypeSpecifier.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lae/javax/imageio/ImageTypeSpecifier;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x8
    name = "Banded"
.end annotation


# instance fields
.field bandOffsets:[I

.field bankIndices:[I

.field colorSpace:Lae/java/awt/color/ColorSpace;

.field dataType:I

.field hasAlpha:Z

.field isAlphaPremultiplied:Z


# direct methods
.method public constructor <init>(Lae/java/awt/color/ColorSpace;[I[IIZZ)V
    .locals 8
    .param p1, "colorSpace"    # Lae/java/awt/color/ColorSpace;
    .param p2, "bankIndices"    # [I
    .param p3, "bandOffsets"    # [I
    .param p4, "dataType"    # I
    .param p5, "hasAlpha"    # Z
    .param p6, "isAlphaPremultiplied"    # Z

    .prologue
    const/4 v0, 0x1

    .line 529
    const/4 v1, 0x0

    invoke-direct {p0, v1}, Lae/javax/imageio/ImageTypeSpecifier;-><init>(Lae/javax/imageio/ImageTypeSpecifier;)V

    .line 535
    if-nez p1, :cond_0

    .line 536
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "colorSpace == null!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 538
    :cond_0
    if-nez p2, :cond_1

    .line 539
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "bankIndices == null!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 541
    :cond_1
    if-nez p3, :cond_2

    .line 542
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "bandOffsets == null!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 544
    :cond_2
    array-length v1, p2

    array-length v4, p3

    if-eq v1, v4, :cond_3

    .line 545
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 546
    const-string v1, "bankIndices.length != bandOffsets.length!"

    .line 545
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 548
    :cond_3
    if-eqz p4, :cond_4

    .line 549
    const/4 v1, 0x2

    if-eq p4, v1, :cond_4

    .line 550
    if-eq p4, v0, :cond_4

    .line 551
    const/4 v1, 0x3

    if-eq p4, v1, :cond_4

    .line 552
    const/4 v1, 0x4

    if-eq p4, v1, :cond_4

    .line 553
    const/4 v1, 0x5

    if-eq p4, v1, :cond_4

    .line 554
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 555
    const-string v1, "Bad value for dataType!"

    .line 554
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 557
    :cond_4
    invoke-virtual {p1}, Lae/java/awt/color/ColorSpace;->getNumComponents()I

    move-result v1

    .line 558
    if-eqz p5, :cond_5

    .line 557
    :goto_0
    add-int v7, v1, v0

    .line 559
    .local v7, "numBands":I
    array-length v0, p3

    if-eq v0, v7, :cond_6

    .line 560
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 561
    const-string v1, "bandOffsets.length is wrong!"

    .line 560
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 558
    .end local v7    # "numBands":I
    :cond_5
    const/4 v0, 0x0

    goto :goto_0

    .line 564
    .restart local v7    # "numBands":I
    :cond_6
    iput-object p1, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->colorSpace:Lae/java/awt/color/ColorSpace;

    .line 565
    invoke-virtual {p2}, [I->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [I

    iput-object v0, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bankIndices:[I

    .line 566
    invoke-virtual {p3}, [I->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [I

    iput-object v0, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bandOffsets:[I

    .line 567
    iput p4, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->dataType:I

    .line 568
    iput-boolean p5, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->hasAlpha:Z

    .line 569
    iput-boolean p6, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->isAlphaPremultiplied:Z

    .line 573
    array-length v0, p2

    .line 572
    invoke-static {p1, v0, p4, p5, p6}, Lae/javax/imageio/ImageTypeSpecifier;->createComponentCM(Lae/java/awt/color/ColorSpace;IIZZ)Lae/java/awt/image/ColorModel;

    move-result-object v0

    .line 571
    iput-object v0, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->colorModel:Lae/java/awt/image/ColorModel;

    .line 578
    const/4 v2, 0x1

    .line 579
    .local v2, "w":I
    const/4 v3, 0x1

    .line 580
    .local v3, "h":I
    new-instance v0, Lae/java/awt/image/BandedSampleModel;

    move v1, p4

    move v4, v2

    move-object v5, p2

    move-object v6, p3

    .line 584
    invoke-direct/range {v0 .. v6}, Lae/java/awt/image/BandedSampleModel;-><init>(IIII[I[I)V

    .line 580
    iput-object v0, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->sampleModel:Lae/java/awt/image/SampleModel;

    .line 585
    return-void
.end method


# virtual methods
.method public equals(Ljava/lang/Object;)Z
    .locals 5
    .param p1, "o"    # Ljava/lang/Object;

    .prologue
    const/4 v2, 0x0

    .line 588
    if-eqz p1, :cond_0

    .line 589
    instance-of v3, p1, Lae/javax/imageio/ImageTypeSpecifier$Banded;

    if-nez v3, :cond_1

    .line 617
    :cond_0
    :goto_0
    return v2

    :cond_1
    move-object v1, p1

    .line 594
    check-cast v1, Lae/javax/imageio/ImageTypeSpecifier$Banded;

    .line 596
    .local v1, "that":Lae/javax/imageio/ImageTypeSpecifier$Banded;
    iget-object v3, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->colorSpace:Lae/java/awt/color/ColorSpace;

    iget-object v4, v1, Lae/javax/imageio/ImageTypeSpecifier$Banded;->colorSpace:Lae/java/awt/color/ColorSpace;

    invoke-virtual {v3, v4}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 597
    iget v3, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->dataType:I

    iget v4, v1, Lae/javax/imageio/ImageTypeSpecifier$Banded;->dataType:I

    if-ne v3, v4, :cond_0

    .line 598
    iget-boolean v3, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->hasAlpha:Z

    iget-boolean v4, v1, Lae/javax/imageio/ImageTypeSpecifier$Banded;->hasAlpha:Z

    if-ne v3, v4, :cond_0

    .line 599
    iget-boolean v3, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->isAlphaPremultiplied:Z

    iget-boolean v4, v1, Lae/javax/imageio/ImageTypeSpecifier$Banded;->isAlphaPremultiplied:Z

    if-ne v3, v4, :cond_0

    .line 600
    iget-object v3, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bankIndices:[I

    array-length v3, v3

    iget-object v4, v1, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bankIndices:[I

    array-length v4, v4

    if-ne v3, v4, :cond_0

    .line 601
    iget-object v3, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bandOffsets:[I

    array-length v3, v3

    iget-object v4, v1, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bandOffsets:[I

    array-length v4, v4

    if-ne v3, v4, :cond_0

    .line 605
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    iget-object v3, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bankIndices:[I

    array-length v3, v3

    if-lt v0, v3, :cond_2

    .line 611
    const/4 v0, 0x0

    :goto_2
    iget-object v3, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bandOffsets:[I

    array-length v3, v3

    if-lt v0, v3, :cond_3

    .line 617
    const/4 v2, 0x1

    goto :goto_0

    .line 606
    :cond_2
    iget-object v3, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bankIndices:[I

    aget v3, v3, v0

    iget-object v4, v1, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bankIndices:[I

    aget v4, v4, v0

    if-ne v3, v4, :cond_0

    .line 605
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 612
    :cond_3
    iget-object v3, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bandOffsets:[I

    aget v3, v3, v0

    iget-object v4, v1, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bandOffsets:[I

    aget v4, v4, v0

    if-ne v3, v4, :cond_0

    .line 611
    add-int/lit8 v0, v0, 0x1

    goto :goto_2
.end method

.method public hashCode()I
    .locals 2

    .prologue
    .line 621
    invoke-super {p0}, Lae/javax/imageio/ImageTypeSpecifier;->hashCode()I

    move-result v0

    .line 622
    iget-object v1, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bandOffsets:[I

    array-length v1, v1

    mul-int/lit8 v1, v1, 0x3

    .line 621
    add-int/2addr v0, v1

    .line 623
    iget-object v1, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->bankIndices:[I

    array-length v1, v1

    mul-int/lit8 v1, v1, 0x7

    .line 621
    add-int/2addr v0, v1

    .line 624
    iget v1, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->dataType:I

    mul-int/lit8 v1, v1, 0x15

    .line 621
    add-int/2addr v1, v0

    .line 625
    iget-boolean v0, p0, Lae/javax/imageio/ImageTypeSpecifier$Banded;->hasAlpha:Z

    if-eqz v0, :cond_0

    const/16 v0, 0x13

    .line 621
    :goto_0
    add-int/2addr v0, v1

    return v0

    .line 625
    :cond_0
    const/16 v0, 0x1d

    goto :goto_0
.end method

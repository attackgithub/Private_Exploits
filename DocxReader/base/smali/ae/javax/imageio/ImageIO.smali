.class public final Lae/javax/imageio/ImageIO;
.super Ljava/lang/Object;
.source "ImageIO.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lae/javax/imageio/ImageIO$CacheInfo;,
        Lae/javax/imageio/ImageIO$CanDecodeInputFilter;,
        Lae/javax/imageio/ImageIO$CanEncodeImageAndFormatFilter;,
        Lae/javax/imageio/ImageIO$ContainsFilter;,
        Lae/javax/imageio/ImageIO$ImageReaderIterator;,
        Lae/javax/imageio/ImageIO$ImageTranscoderIterator;,
        Lae/javax/imageio/ImageIO$ImageWriterIterator;,
        Lae/javax/imageio/ImageIO$SpiInfo;,
        Lae/javax/imageio/ImageIO$TranscoderFilter;
    }
.end annotation


# static fields
.field private static readerFileSuffixesMethod:Ljava/lang/reflect/Method;

.field private static readerFormatNamesMethod:Ljava/lang/reflect/Method;

.field private static readerMIMETypesMethod:Ljava/lang/reflect/Method;

.field private static final theRegistry:Lae/javax/imageio/spi/IIORegistry;

.field private static writerFileSuffixesMethod:Ljava/lang/reflect/Method;

.field private static writerFormatNamesMethod:Ljava/lang/reflect/Method;

.field private static writerMIMETypesMethod:Ljava/lang/reflect/Method;


# direct methods
.method static constructor <clinit>()V
    .locals 4

    .prologue
    .line 65
    invoke-static {}, Lae/javax/imageio/spi/IIORegistry;->getDefaultInstance()Lae/javax/imageio/spi/IIORegistry;

    move-result-object v1

    .line 64
    sput-object v1, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    .line 656
    :try_start_0
    const-class v1, Lae/javax/imageio/spi/ImageReaderSpi;

    const-string v2, "getFormatNames"

    const/4 v3, 0x0

    new-array v3, v3, [Ljava/lang/Class;

    invoke-virtual {v1, v2, v3}, Ljava/lang/Class;->getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v1

    .line 655
    sput-object v1, Lae/javax/imageio/ImageIO;->readerFormatNamesMethod:Ljava/lang/reflect/Method;

    .line 658
    const-class v1, Lae/javax/imageio/spi/ImageReaderSpi;

    const-string v2, "getFileSuffixes"

    const/4 v3, 0x0

    new-array v3, v3, [Ljava/lang/Class;

    invoke-virtual {v1, v2, v3}, Ljava/lang/Class;->getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v1

    .line 657
    sput-object v1, Lae/javax/imageio/ImageIO;->readerFileSuffixesMethod:Ljava/lang/reflect/Method;

    .line 660
    const-class v1, Lae/javax/imageio/spi/ImageReaderSpi;

    const-string v2, "getMIMETypes"

    const/4 v3, 0x0

    new-array v3, v3, [Ljava/lang/Class;

    invoke-virtual {v1, v2, v3}, Ljava/lang/Class;->getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v1

    .line 659
    sput-object v1, Lae/javax/imageio/ImageIO;->readerMIMETypesMethod:Ljava/lang/reflect/Method;

    .line 663
    const-class v1, Lae/javax/imageio/spi/ImageWriterSpi;

    const-string v2, "getFormatNames"

    const/4 v3, 0x0

    new-array v3, v3, [Ljava/lang/Class;

    invoke-virtual {v1, v2, v3}, Ljava/lang/Class;->getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v1

    .line 662
    sput-object v1, Lae/javax/imageio/ImageIO;->writerFormatNamesMethod:Ljava/lang/reflect/Method;

    .line 665
    const-class v1, Lae/javax/imageio/spi/ImageWriterSpi;

    const-string v2, "getFileSuffixes"

    const/4 v3, 0x0

    new-array v3, v3, [Ljava/lang/Class;

    invoke-virtual {v1, v2, v3}, Ljava/lang/Class;->getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v1

    .line 664
    sput-object v1, Lae/javax/imageio/ImageIO;->writerFileSuffixesMethod:Ljava/lang/reflect/Method;

    .line 667
    const-class v1, Lae/javax/imageio/spi/ImageWriterSpi;

    const-string v2, "getMIMETypes"

    const/4 v3, 0x0

    new-array v3, v3, [Ljava/lang/Class;

    invoke-virtual {v1, v2, v3}, Ljava/lang/Class;->getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v1

    .line 666
    sput-object v1, Lae/javax/imageio/ImageIO;->writerMIMETypesMethod:Ljava/lang/reflect/Method;
    :try_end_0
    .catch Ljava/lang/NoSuchMethodException; {:try_start_0 .. :try_end_0} :catch_0

    .line 671
    .local v0, "e":Ljava/lang/NoSuchMethodException;
    :goto_0
    return-void

    .line 668
    .end local v0    # "e":Ljava/lang/NoSuchMethodException;
    :catch_0
    move-exception v0

    .line 669
    .restart local v0    # "e":Ljava/lang/NoSuchMethodException;
    invoke-virtual {v0}, Ljava/lang/NoSuchMethodException;->printStackTrace()V

    goto :goto_0
.end method

.method private constructor <init>()V
    .locals 0

    .prologue
    .line 70
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method static synthetic access$0()Lae/javax/imageio/spi/IIORegistry;
    .locals 1

    .prologue
    .line 64
    sget-object v0, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    return-object v0
.end method

.method static synthetic access$1([Ljava/lang/String;Ljava/lang/String;)Z
    .locals 1

    .prologue
    .line 846
    invoke-static {p0, p1}, Lae/javax/imageio/ImageIO;->contains([Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    return v0
.end method

.method private static contains([Ljava/lang/String;Ljava/lang/String;)Z
    .locals 2
    .param p0, "names"    # [Ljava/lang/String;
    .param p1, "name"    # Ljava/lang/String;

    .prologue
    .line 847
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    array-length v1, p0

    if-lt v0, v1, :cond_0

    .line 853
    const/4 v1, 0x0

    :goto_1
    return v1

    .line 848
    :cond_0
    aget-object v1, p0, v0

    invoke-virtual {p1, v1}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 849
    const/4 v1, 0x1

    goto :goto_1

    .line 847
    :cond_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0
.end method

.method public static createImageInputStream(Ljava/lang/Object;)Lae/javax/imageio/stream/ImageInputStream;
    .locals 8
    .param p0, "input"    # Ljava/lang/Object;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    const/4 v4, 0x0

    const/4 v3, 0x1

    .line 328
    if-nez p0, :cond_0

    .line 329
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string v5, "input == null!"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 335
    :cond_0
    :try_start_0
    sget-object v5, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v6, Lae/javax/imageio/spi/ImageInputStreamSpi;

    .line 336
    const/4 v7, 0x1

    .line 335
    invoke-virtual {v5, v6, v7}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 341
    .local v1, "iter":Ljava/util/Iterator;
    invoke-static {}, Lae/javax/imageio/ImageIO;->getUseCache()Z

    move-result v5

    if-eqz v5, :cond_2

    invoke-static {}, Lae/javax/imageio/ImageIO;->hasCachePermission()Z

    move-result v5

    if-eqz v5, :cond_2

    .line 343
    .local v3, "usecache":Z
    :cond_1
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-nez v5, :cond_3

    .line 356
    .end local v1    # "iter":Ljava/util/Iterator;
    .end local v3    # "usecache":Z
    :goto_1
    return-object v4

    .line 337
    :catch_0
    move-exception v0

    .line 338
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    goto :goto_1

    .line 341
    .end local v0    # "e":Ljava/lang/IllegalArgumentException;
    .restart local v1    # "iter":Ljava/util/Iterator;
    :cond_2
    const/4 v3, 0x0

    goto :goto_0

    .line 344
    .restart local v3    # "usecache":Z
    :cond_3
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lae/javax/imageio/spi/ImageInputStreamSpi;

    .line 345
    .local v2, "spi":Lae/javax/imageio/spi/ImageInputStreamSpi;
    invoke-virtual {v2}, Lae/javax/imageio/spi/ImageInputStreamSpi;->getInputClass()Ljava/lang/Class;

    move-result-object v5

    invoke-virtual {v5, p0}, Ljava/lang/Class;->isInstance(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_1

    .line 349
    :try_start_1
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheDirectory()Ljava/io/File;

    move-result-object v4

    .line 347
    invoke-virtual {v2, p0, v3, v4}, Lae/javax/imageio/spi/ImageInputStreamSpi;->createInputStreamInstance(Ljava/lang/Object;ZLjava/io/File;)Lae/javax/imageio/stream/ImageInputStream;
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1

    move-result-object v4

    goto :goto_1

    .line 350
    :catch_1
    move-exception v0

    .line 351
    .local v0, "e":Ljava/io/IOException;
    new-instance v4, Lae/javax/imageio/IIOException;

    const-string v5, "Can\'t create cache file!"

    invoke-direct {v4, v5, v0}, Lae/javax/imageio/IIOException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v4
.end method

.method public static createImageOutputStream(Ljava/lang/Object;)Lae/javax/imageio/stream/ImageOutputStream;
    .locals 8
    .param p0, "output"    # Ljava/lang/Object;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    const/4 v4, 0x0

    const/4 v3, 0x1

    .line 390
    if-nez p0, :cond_0

    .line 391
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string v5, "output == null!"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 397
    :cond_0
    :try_start_0
    sget-object v5, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v6, Lae/javax/imageio/spi/ImageOutputStreamSpi;

    .line 398
    const/4 v7, 0x1

    .line 397
    invoke-virtual {v5, v6, v7}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 403
    .local v1, "iter":Ljava/util/Iterator;
    invoke-static {}, Lae/javax/imageio/ImageIO;->getUseCache()Z

    move-result v5

    if-eqz v5, :cond_2

    invoke-static {}, Lae/javax/imageio/ImageIO;->hasCachePermission()Z

    move-result v5

    if-eqz v5, :cond_2

    .line 405
    .local v3, "usecache":Z
    :cond_1
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-nez v5, :cond_3

    .line 418
    .end local v1    # "iter":Ljava/util/Iterator;
    .end local v3    # "usecache":Z
    :goto_1
    return-object v4

    .line 399
    :catch_0
    move-exception v0

    .line 400
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    goto :goto_1

    .line 403
    .end local v0    # "e":Ljava/lang/IllegalArgumentException;
    .restart local v1    # "iter":Ljava/util/Iterator;
    :cond_2
    const/4 v3, 0x0

    goto :goto_0

    .line 406
    .restart local v3    # "usecache":Z
    :cond_3
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lae/javax/imageio/spi/ImageOutputStreamSpi;

    .line 407
    .local v2, "spi":Lae/javax/imageio/spi/ImageOutputStreamSpi;
    invoke-virtual {v2}, Lae/javax/imageio/spi/ImageOutputStreamSpi;->getOutputClass()Ljava/lang/Class;

    move-result-object v5

    invoke-virtual {v5, p0}, Ljava/lang/Class;->isInstance(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_1

    .line 411
    :try_start_1
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheDirectory()Ljava/io/File;

    move-result-object v4

    .line 409
    invoke-virtual {v2, p0, v3, v4}, Lae/javax/imageio/spi/ImageOutputStreamSpi;->createOutputStreamInstance(Ljava/lang/Object;ZLjava/io/File;)Lae/javax/imageio/stream/ImageOutputStream;
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1

    move-result-object v4

    goto :goto_1

    .line 412
    :catch_1
    move-exception v0

    .line 413
    .local v0, "e":Ljava/io/IOException;
    new-instance v4, Lae/javax/imageio/IIOException;

    const-string v5, "Can\'t create cache file!"

    invoke-direct {v4, v5, v0}, Lae/javax/imageio/IIOException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v4
.end method

.method private static doWrite(Lae/java/awt/image/RenderedImage;Lae/javax/imageio/ImageWriter;Lae/javax/imageio/stream/ImageOutputStream;)Z
    .locals 1
    .param p0, "im"    # Lae/java/awt/image/RenderedImage;
    .param p1, "writer"    # Lae/javax/imageio/ImageWriter;
    .param p2, "output"    # Lae/javax/imageio/stream/ImageOutputStream;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 1597
    if-nez p1, :cond_0

    .line 1598
    const/4 v0, 0x0

    .line 1607
    :goto_0
    return v0

    .line 1600
    :cond_0
    invoke-virtual {p1, p2}, Lae/javax/imageio/ImageWriter;->setOutput(Ljava/lang/Object;)V

    .line 1602
    :try_start_0
    invoke-virtual {p1, p0}, Lae/javax/imageio/ImageWriter;->write(Lae/java/awt/image/RenderedImage;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 1604
    invoke-virtual {p1}, Lae/javax/imageio/ImageWriter;->dispose()V

    .line 1605
    invoke-interface {p2}, Lae/javax/imageio/stream/ImageOutputStream;->flush()V

    .line 1607
    const/4 v0, 0x1

    goto :goto_0

    .line 1603
    :catchall_0
    move-exception v0

    .line 1604
    invoke-virtual {p1}, Lae/javax/imageio/ImageWriter;->dispose()V

    .line 1605
    invoke-interface {p2}, Lae/javax/imageio/stream/ImageOutputStream;->flush()V

    .line 1606
    throw v0
.end method

.method public static getCacheDirectory()Ljava/io/File;
    .locals 1

    .prologue
    .line 297
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheInfo()Lae/javax/imageio/ImageIO$CacheInfo;

    move-result-object v0

    invoke-virtual {v0}, Lae/javax/imageio/ImageIO$CacheInfo;->getCacheDirectory()Ljava/io/File;

    move-result-object v0

    return-object v0
.end method

.method private static declared-synchronized getCacheInfo()Lae/javax/imageio/ImageIO$CacheInfo;
    .locals 4

    .prologue
    .line 156
    const-class v3, Lae/javax/imageio/ImageIO;

    monitor-enter v3

    :try_start_0
    invoke-static {}, Lae/sun/awt/AppContext;->getAppContext()Lae/sun/awt/AppContext;

    move-result-object v0

    .line 157
    .local v0, "context":Lae/sun/awt/AppContext;
    const-class v2, Lae/javax/imageio/ImageIO$CacheInfo;

    invoke-virtual {v0, v2}, Lae/sun/awt/AppContext;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lae/javax/imageio/ImageIO$CacheInfo;

    .line 158
    .local v1, "info":Lae/javax/imageio/ImageIO$CacheInfo;
    if-nez v1, :cond_0

    .line 159
    new-instance v1, Lae/javax/imageio/ImageIO$CacheInfo;

    .end local v1    # "info":Lae/javax/imageio/ImageIO$CacheInfo;
    invoke-direct {v1}, Lae/javax/imageio/ImageIO$CacheInfo;-><init>()V

    .line 160
    .restart local v1    # "info":Lae/javax/imageio/ImageIO$CacheInfo;
    const-class v2, Lae/javax/imageio/ImageIO$CacheInfo;

    invoke-virtual {v0, v2, v1}, Lae/sun/awt/AppContext;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 162
    :cond_0
    monitor-exit v3

    return-object v1

    .line 156
    .end local v1    # "info":Lae/javax/imageio/ImageIO$CacheInfo;
    :catchall_0
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method public static getImageReader(Lae/javax/imageio/ImageWriter;)Lae/javax/imageio/ImageReader;
    .locals 11
    .param p0, "writer"    # Lae/javax/imageio/ImageWriter;

    .prologue
    const/4 v7, 0x0

    .line 1069
    if-nez p0, :cond_0

    .line 1070
    new-instance v7, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v8, "writer == null!"

    invoke-direct {v7, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 1073
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriter;->getOriginatingProvider()Lae/javax/imageio/spi/ImageWriterSpi;

    move-result-object v5

    .line 1074
    .local v5, "writerSpi":Lae/javax/imageio/spi/ImageWriterSpi;
    if-nez v5, :cond_4

    .line 1079
    :try_start_0
    sget-object v8, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v9, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 1080
    const/4 v10, 0x0

    .line 1079
    invoke-virtual {v8, v9, v10}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v6

    .line 1085
    .local v6, "writerSpiIter":Ljava/util/Iterator;
    :cond_1
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v8

    if-nez v8, :cond_3

    .line 1092
    :goto_0
    if-nez v5, :cond_4

    .line 1122
    .end local v6    # "writerSpiIter":Ljava/util/Iterator;
    :cond_2
    :goto_1
    return-object v7

    .line 1081
    :catch_0
    move-exception v0

    .line 1082
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    goto :goto_1

    .line 1086
    .end local v0    # "e":Ljava/lang/IllegalArgumentException;
    .restart local v6    # "writerSpiIter":Ljava/util/Iterator;
    :cond_3
    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 1087
    .local v4, "temp":Lae/javax/imageio/spi/ImageWriterSpi;
    invoke-virtual {v4, p0}, Lae/javax/imageio/spi/ImageWriterSpi;->isOwnWriter(Lae/javax/imageio/ImageWriter;)Z

    move-result v8

    if-eqz v8, :cond_1

    .line 1088
    move-object v5, v4

    .line 1089
    goto :goto_0

    .line 1097
    .end local v4    # "temp":Lae/javax/imageio/spi/ImageWriterSpi;
    .end local v6    # "writerSpiIter":Ljava/util/Iterator;
    :cond_4
    invoke-virtual {v5}, Lae/javax/imageio/spi/ImageWriterSpi;->getImageReaderSpiNames()[Ljava/lang/String;

    move-result-object v1

    .line 1098
    .local v1, "readerNames":[Ljava/lang/String;
    if-eqz v1, :cond_2

    .line 1102
    const/4 v3, 0x0

    .line 1104
    .local v3, "readerSpiClass":Ljava/lang/Class;
    const/4 v8, 0x0

    :try_start_1
    aget-object v8, v1, v8

    const/4 v9, 0x1

    .line 1105
    invoke-static {}, Ljava/lang/ClassLoader;->getSystemClassLoader()Ljava/lang/ClassLoader;

    move-result-object v10

    .line 1104
    invoke-static {v8, v9, v10}, Ljava/lang/Class;->forName(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
    :try_end_1
    .catch Ljava/lang/ClassNotFoundException; {:try_start_1 .. :try_end_1} :catch_1

    move-result-object v3

    .line 1111
    sget-object v8, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    invoke-virtual {v8, v3}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviderByClass(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lae/javax/imageio/spi/ImageReaderSpi;

    .line 1112
    .local v2, "readerSpi":Lae/javax/imageio/spi/ImageReaderSpi;
    if-eqz v2, :cond_2

    .line 1117
    :try_start_2
    invoke-virtual {v2}, Lae/javax/imageio/spi/ImageReaderSpi;->createReaderInstance()Lae/javax/imageio/ImageReader;
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2

    move-result-object v7

    goto :goto_1

    .line 1106
    .end local v2    # "readerSpi":Lae/javax/imageio/spi/ImageReaderSpi;
    :catch_1
    move-exception v0

    .line 1107
    .local v0, "e":Ljava/lang/ClassNotFoundException;
    goto :goto_1

    .line 1118
    .end local v0    # "e":Ljava/lang/ClassNotFoundException;
    .restart local v2    # "readerSpi":Lae/javax/imageio/spi/ImageReaderSpi;
    :catch_2
    move-exception v0

    .line 1120
    .local v0, "e":Ljava/io/IOException;
    sget-object v8, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    .line 1121
    const-class v9, Lae/javax/imageio/spi/ImageReaderSpi;

    .line 1120
    invoke-virtual {v8, v2, v9}, Lae/javax/imageio/spi/IIORegistry;->deregisterServiceProvider(Ljava/lang/Object;Ljava/lang/Class;)Z

    goto :goto_1
.end method

.method public static getImageReaders(Ljava/lang/Object;)Ljava/util/Iterator;
    .locals 6
    .param p0, "input"    # Ljava/lang/Object;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/Object;",
            ")",
            "Ljava/util/Iterator",
            "<",
            "Lae/javax/imageio/ImageReader;",
            ">;"
        }
    .end annotation

    .prologue
    .line 630
    if-nez p0, :cond_0

    .line 631
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "input == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 636
    :cond_0
    :try_start_0
    sget-object v2, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v3, Lae/javax/imageio/spi/ImageReaderSpi;

    .line 637
    new-instance v4, Lae/javax/imageio/ImageIO$CanDecodeInputFilter;

    invoke-direct {v4, p0}, Lae/javax/imageio/ImageIO$CanDecodeInputFilter;-><init>(Ljava/lang/Object;)V

    .line 638
    const/4 v5, 0x1

    .line 636
    invoke-virtual {v2, v3, v4, v5}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Lae/javax/imageio/spi/ServiceRegistry$Filter;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 643
    .local v1, "iter":Ljava/util/Iterator;
    new-instance v2, Lae/javax/imageio/ImageIO$ImageReaderIterator;

    invoke-direct {v2, v1}, Lae/javax/imageio/ImageIO$ImageReaderIterator;-><init>(Ljava/util/Iterator;)V

    .end local v1    # "iter":Ljava/util/Iterator;
    :goto_0
    return-object v2

    .line 639
    :catch_0
    move-exception v0

    .line 640
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    invoke-static {}, Ljava/util/Collections;->emptyIterator()Ljava/util/Iterator;

    move-result-object v2

    goto :goto_0
.end method

.method public static getImageReadersByFormatName(Ljava/lang/String;)Ljava/util/Iterator;
    .locals 6
    .param p0, "formatName"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/Iterator",
            "<",
            "Lae/javax/imageio/ImageReader;",
            ">;"
        }
    .end annotation

    .prologue
    .line 692
    if-nez p0, :cond_0

    .line 693
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "formatName == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 698
    :cond_0
    :try_start_0
    sget-object v2, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v3, Lae/javax/imageio/spi/ImageReaderSpi;

    .line 699
    new-instance v4, Lae/javax/imageio/ImageIO$ContainsFilter;

    sget-object v5, Lae/javax/imageio/ImageIO;->readerFormatNamesMethod:Ljava/lang/reflect/Method;

    invoke-direct {v4, v5, p0}, Lae/javax/imageio/ImageIO$ContainsFilter;-><init>(Ljava/lang/reflect/Method;Ljava/lang/String;)V

    .line 701
    const/4 v5, 0x1

    .line 698
    invoke-virtual {v2, v3, v4, v5}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Lae/javax/imageio/spi/ServiceRegistry$Filter;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 705
    .local v1, "iter":Ljava/util/Iterator;
    new-instance v2, Lae/javax/imageio/ImageIO$ImageReaderIterator;

    invoke-direct {v2, v1}, Lae/javax/imageio/ImageIO$ImageReaderIterator;-><init>(Ljava/util/Iterator;)V

    .end local v1    # "iter":Ljava/util/Iterator;
    :goto_0
    return-object v2

    .line 702
    :catch_0
    move-exception v0

    .line 703
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    invoke-static {}, Ljava/util/Collections;->emptyIterator()Ljava/util/Iterator;

    move-result-object v2

    goto :goto_0
.end method

.method public static getImageReadersByMIMEType(Ljava/lang/String;)Ljava/util/Iterator;
    .locals 6
    .param p0, "MIMEType"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/Iterator",
            "<",
            "Lae/javax/imageio/ImageReader;",
            ">;"
        }
    .end annotation

    .prologue
    .line 762
    if-nez p0, :cond_0

    .line 763
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "MIMEType == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 768
    :cond_0
    :try_start_0
    sget-object v2, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v3, Lae/javax/imageio/spi/ImageReaderSpi;

    .line 769
    new-instance v4, Lae/javax/imageio/ImageIO$ContainsFilter;

    sget-object v5, Lae/javax/imageio/ImageIO;->readerMIMETypesMethod:Ljava/lang/reflect/Method;

    invoke-direct {v4, v5, p0}, Lae/javax/imageio/ImageIO$ContainsFilter;-><init>(Ljava/lang/reflect/Method;Ljava/lang/String;)V

    .line 771
    const/4 v5, 0x1

    .line 768
    invoke-virtual {v2, v3, v4, v5}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Lae/javax/imageio/spi/ServiceRegistry$Filter;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 775
    .local v1, "iter":Ljava/util/Iterator;
    new-instance v2, Lae/javax/imageio/ImageIO$ImageReaderIterator;

    invoke-direct {v2, v1}, Lae/javax/imageio/ImageIO$ImageReaderIterator;-><init>(Ljava/util/Iterator;)V

    .end local v1    # "iter":Ljava/util/Iterator;
    :goto_0
    return-object v2

    .line 772
    :catch_0
    move-exception v0

    .line 773
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    invoke-static {}, Ljava/util/Collections;->emptyIterator()Ljava/util/Iterator;

    move-result-object v2

    goto :goto_0
.end method

.method public static getImageReadersBySuffix(Ljava/lang/String;)Ljava/util/Iterator;
    .locals 6
    .param p0, "fileSuffix"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/Iterator",
            "<",
            "Lae/javax/imageio/ImageReader;",
            ">;"
        }
    .end annotation

    .prologue
    .line 727
    if-nez p0, :cond_0

    .line 728
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "fileSuffix == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 733
    :cond_0
    :try_start_0
    sget-object v2, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v3, Lae/javax/imageio/spi/ImageReaderSpi;

    .line 734
    new-instance v4, Lae/javax/imageio/ImageIO$ContainsFilter;

    sget-object v5, Lae/javax/imageio/ImageIO;->readerFileSuffixesMethod:Ljava/lang/reflect/Method;

    invoke-direct {v4, v5, p0}, Lae/javax/imageio/ImageIO$ContainsFilter;-><init>(Ljava/lang/reflect/Method;Ljava/lang/String;)V

    .line 736
    const/4 v5, 0x1

    .line 733
    invoke-virtual {v2, v3, v4, v5}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Lae/javax/imageio/spi/ServiceRegistry$Filter;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 740
    .local v1, "iter":Ljava/util/Iterator;
    new-instance v2, Lae/javax/imageio/ImageIO$ImageReaderIterator;

    invoke-direct {v2, v1}, Lae/javax/imageio/ImageIO$ImageReaderIterator;-><init>(Ljava/util/Iterator;)V

    .end local v1    # "iter":Ljava/util/Iterator;
    :goto_0
    return-object v2

    .line 737
    :catch_0
    move-exception v0

    .line 738
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    invoke-static {}, Ljava/util/Collections;->emptyIterator()Ljava/util/Iterator;

    move-result-object v2

    goto :goto_0
.end method

.method public static getImageTranscoders(Lae/javax/imageio/ImageReader;Lae/javax/imageio/ImageWriter;)Ljava/util/Iterator;
    .locals 8
    .param p0, "reader"    # Lae/javax/imageio/ImageReader;
    .param p1, "writer"    # Lae/javax/imageio/ImageWriter;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lae/javax/imageio/ImageReader;",
            "Lae/javax/imageio/ImageWriter;",
            ")",
            "Ljava/util/Iterator",
            "<",
            "Lae/javax/imageio/ImageTranscoder;",
            ">;"
        }
    .end annotation

    .prologue
    .line 1231
    if-nez p0, :cond_0

    .line 1232
    new-instance v5, Ljava/lang/IllegalArgumentException;

    const-string v6, "reader == null!"

    invoke-direct {v5, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 1234
    :cond_0
    if-nez p1, :cond_1

    .line 1235
    new-instance v5, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v6, "writer == null!"

    invoke-direct {v5, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 1237
    :cond_1
    invoke-virtual {p0}, Lae/javax/imageio/ImageReader;->getOriginatingProvider()Lae/javax/imageio/spi/ImageReaderSpi;

    move-result-object v3

    .line 1238
    .local v3, "readerSpi":Lae/javax/imageio/spi/ImageReaderSpi;
    invoke-virtual {p1}, Lae/javax/imageio/ImageWriter;->getOriginatingProvider()Lae/javax/imageio/spi/ImageWriterSpi;

    move-result-object v4

    .line 1240
    .local v4, "writerSpi":Lae/javax/imageio/spi/ImageWriterSpi;
    new-instance v1, Lae/javax/imageio/ImageIO$TranscoderFilter;

    invoke-direct {v1, v3, v4}, Lae/javax/imageio/ImageIO$TranscoderFilter;-><init>(Lae/javax/imageio/spi/ImageReaderSpi;Lae/javax/imageio/spi/ImageWriterSpi;)V

    .line 1245
    .local v1, "filter":Lae/javax/imageio/spi/ServiceRegistry$Filter;
    :try_start_0
    sget-object v5, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v6, Lae/javax/imageio/spi/ImageTranscoderSpi;

    .line 1246
    const/4 v7, 0x1

    .line 1245
    invoke-virtual {v5, v6, v1, v7}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Lae/javax/imageio/spi/ServiceRegistry$Filter;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v2

    .line 1250
    .local v2, "iter":Ljava/util/Iterator;
    new-instance v5, Lae/javax/imageio/ImageIO$ImageTranscoderIterator;

    invoke-direct {v5, v2}, Lae/javax/imageio/ImageIO$ImageTranscoderIterator;-><init>(Ljava/util/Iterator;)V

    .end local v2    # "iter":Ljava/util/Iterator;
    :goto_0
    return-object v5

    .line 1247
    :catch_0
    move-exception v0

    .line 1248
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    invoke-static {}, Ljava/util/Collections;->emptyIterator()Ljava/util/Iterator;

    move-result-object v5

    goto :goto_0
.end method

.method public static getImageWriter(Lae/javax/imageio/ImageReader;)Lae/javax/imageio/ImageWriter;
    .locals 11
    .param p0, "reader"    # Lae/javax/imageio/ImageReader;

    .prologue
    const/4 v7, 0x0

    .line 989
    if-nez p0, :cond_0

    .line 990
    new-instance v7, Ljava/lang/IllegalArgumentException;

    const-string v8, "reader == null!"

    invoke-direct {v7, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 993
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageReader;->getOriginatingProvider()Lae/javax/imageio/spi/ImageReaderSpi;

    move-result-object v1

    .line 994
    .local v1, "readerSpi":Lae/javax/imageio/spi/ImageReaderSpi;
    if-nez v1, :cond_4

    .line 999
    :try_start_0
    sget-object v8, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v9, Lae/javax/imageio/spi/ImageReaderSpi;

    .line 1000
    const/4 v10, 0x0

    .line 999
    invoke-virtual {v8, v9, v10}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v2

    .line 1005
    .local v2, "readerSpiIter":Ljava/util/Iterator;
    :cond_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v8

    if-nez v8, :cond_3

    .line 1012
    :goto_0
    if-nez v1, :cond_4

    .line 1042
    .end local v2    # "readerSpiIter":Ljava/util/Iterator;
    :cond_2
    :goto_1
    return-object v7

    .line 1001
    :catch_0
    move-exception v0

    .line 1002
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    goto :goto_1

    .line 1006
    .end local v0    # "e":Ljava/lang/IllegalArgumentException;
    .restart local v2    # "readerSpiIter":Ljava/util/Iterator;
    :cond_3
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lae/javax/imageio/spi/ImageReaderSpi;

    .line 1007
    .local v3, "temp":Lae/javax/imageio/spi/ImageReaderSpi;
    invoke-virtual {v3, p0}, Lae/javax/imageio/spi/ImageReaderSpi;->isOwnReader(Lae/javax/imageio/ImageReader;)Z

    move-result v8

    if-eqz v8, :cond_1

    .line 1008
    move-object v1, v3

    .line 1009
    goto :goto_0

    .line 1017
    .end local v2    # "readerSpiIter":Ljava/util/Iterator;
    .end local v3    # "temp":Lae/javax/imageio/spi/ImageReaderSpi;
    :cond_4
    invoke-virtual {v1}, Lae/javax/imageio/spi/ImageReaderSpi;->getImageWriterSpiNames()[Ljava/lang/String;

    move-result-object v4

    .line 1018
    .local v4, "writerNames":[Ljava/lang/String;
    if-eqz v4, :cond_2

    .line 1022
    const/4 v6, 0x0

    .line 1024
    .local v6, "writerSpiClass":Ljava/lang/Class;
    const/4 v8, 0x0

    :try_start_1
    aget-object v8, v4, v8

    const/4 v9, 0x1

    .line 1025
    invoke-static {}, Ljava/lang/ClassLoader;->getSystemClassLoader()Ljava/lang/ClassLoader;

    move-result-object v10

    .line 1024
    invoke-static {v8, v9, v10}, Ljava/lang/Class;->forName(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
    :try_end_1
    .catch Ljava/lang/ClassNotFoundException; {:try_start_1 .. :try_end_1} :catch_1

    move-result-object v6

    .line 1031
    sget-object v8, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    invoke-virtual {v8, v6}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviderByClass(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 1032
    .local v5, "writerSpi":Lae/javax/imageio/spi/ImageWriterSpi;
    if-eqz v5, :cond_2

    .line 1037
    :try_start_2
    invoke-virtual {v5}, Lae/javax/imageio/spi/ImageWriterSpi;->createWriterInstance()Lae/javax/imageio/ImageWriter;
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2

    move-result-object v7

    goto :goto_1

    .line 1026
    .end local v5    # "writerSpi":Lae/javax/imageio/spi/ImageWriterSpi;
    :catch_1
    move-exception v0

    .line 1027
    .local v0, "e":Ljava/lang/ClassNotFoundException;
    goto :goto_1

    .line 1038
    .end local v0    # "e":Ljava/lang/ClassNotFoundException;
    .restart local v5    # "writerSpi":Lae/javax/imageio/spi/ImageWriterSpi;
    :catch_2
    move-exception v0

    .line 1040
    .local v0, "e":Ljava/io/IOException;
    sget-object v8, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    .line 1041
    const-class v9, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 1040
    invoke-virtual {v8, v5, v9}, Lae/javax/imageio/spi/IIORegistry;->deregisterServiceProvider(Ljava/lang/Object;Ljava/lang/Class;)Z

    goto :goto_1
.end method

.method public static getImageWriters(Lae/javax/imageio/ImageTypeSpecifier;Ljava/lang/String;)Ljava/util/Iterator;
    .locals 6
    .param p0, "type"    # Lae/javax/imageio/ImageTypeSpecifier;
    .param p1, "formatName"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lae/javax/imageio/ImageTypeSpecifier;",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/Iterator",
            "<",
            "Lae/javax/imageio/ImageWriter;",
            ">;"
        }
    .end annotation

    .prologue
    .line 1146
    if-nez p0, :cond_0

    .line 1147
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "type == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1149
    :cond_0
    if-nez p1, :cond_1

    .line 1150
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "formatName == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1156
    :cond_1
    :try_start_0
    sget-object v2, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v3, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 1157
    new-instance v4, Lae/javax/imageio/ImageIO$CanEncodeImageAndFormatFilter;

    invoke-direct {v4, p0, p1}, Lae/javax/imageio/ImageIO$CanEncodeImageAndFormatFilter;-><init>(Lae/javax/imageio/ImageTypeSpecifier;Ljava/lang/String;)V

    .line 1159
    const/4 v5, 0x1

    .line 1156
    invoke-virtual {v2, v3, v4, v5}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Lae/javax/imageio/spi/ServiceRegistry$Filter;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 1164
    .local v1, "iter":Ljava/util/Iterator;
    new-instance v2, Lae/javax/imageio/ImageIO$ImageWriterIterator;

    invoke-direct {v2, v1}, Lae/javax/imageio/ImageIO$ImageWriterIterator;-><init>(Ljava/util/Iterator;)V

    .end local v1    # "iter":Ljava/util/Iterator;
    :goto_0
    return-object v2

    .line 1160
    :catch_0
    move-exception v0

    .line 1161
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    invoke-static {}, Ljava/util/Collections;->emptyIterator()Ljava/util/Iterator;

    move-result-object v2

    goto :goto_0
.end method

.method public static getImageWritersByFormatName(Ljava/lang/String;)Ljava/util/Iterator;
    .locals 6
    .param p0, "formatName"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/Iterator",
            "<",
            "Lae/javax/imageio/ImageWriter;",
            ">;"
        }
    .end annotation

    .prologue
    .line 875
    if-nez p0, :cond_0

    .line 876
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "formatName == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 881
    :cond_0
    :try_start_0
    sget-object v2, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v3, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 882
    new-instance v4, Lae/javax/imageio/ImageIO$ContainsFilter;

    sget-object v5, Lae/javax/imageio/ImageIO;->writerFormatNamesMethod:Ljava/lang/reflect/Method;

    invoke-direct {v4, v5, p0}, Lae/javax/imageio/ImageIO$ContainsFilter;-><init>(Ljava/lang/reflect/Method;Ljava/lang/String;)V

    .line 884
    const/4 v5, 0x1

    .line 881
    invoke-virtual {v2, v3, v4, v5}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Lae/javax/imageio/spi/ServiceRegistry$Filter;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 888
    .local v1, "iter":Ljava/util/Iterator;
    new-instance v2, Lae/javax/imageio/ImageIO$ImageWriterIterator;

    invoke-direct {v2, v1}, Lae/javax/imageio/ImageIO$ImageWriterIterator;-><init>(Ljava/util/Iterator;)V

    .end local v1    # "iter":Ljava/util/Iterator;
    :goto_0
    return-object v2

    .line 885
    :catch_0
    move-exception v0

    .line 886
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    invoke-static {}, Ljava/util/Collections;->emptyIterator()Ljava/util/Iterator;

    move-result-object v2

    goto :goto_0
.end method

.method public static getImageWritersByMIMEType(Ljava/lang/String;)Ljava/util/Iterator;
    .locals 6
    .param p0, "MIMEType"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/Iterator",
            "<",
            "Lae/javax/imageio/ImageWriter;",
            ">;"
        }
    .end annotation

    .prologue
    .line 943
    if-nez p0, :cond_0

    .line 944
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "MIMEType == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 949
    :cond_0
    :try_start_0
    sget-object v2, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v3, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 950
    new-instance v4, Lae/javax/imageio/ImageIO$ContainsFilter;

    sget-object v5, Lae/javax/imageio/ImageIO;->writerMIMETypesMethod:Ljava/lang/reflect/Method;

    invoke-direct {v4, v5, p0}, Lae/javax/imageio/ImageIO$ContainsFilter;-><init>(Ljava/lang/reflect/Method;Ljava/lang/String;)V

    .line 952
    const/4 v5, 0x1

    .line 949
    invoke-virtual {v2, v3, v4, v5}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Lae/javax/imageio/spi/ServiceRegistry$Filter;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 956
    .local v1, "iter":Ljava/util/Iterator;
    new-instance v2, Lae/javax/imageio/ImageIO$ImageWriterIterator;

    invoke-direct {v2, v1}, Lae/javax/imageio/ImageIO$ImageWriterIterator;-><init>(Ljava/util/Iterator;)V

    .end local v1    # "iter":Ljava/util/Iterator;
    :goto_0
    return-object v2

    .line 953
    :catch_0
    move-exception v0

    .line 954
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    invoke-static {}, Ljava/util/Collections;->emptyIterator()Ljava/util/Iterator;

    move-result-object v2

    goto :goto_0
.end method

.method public static getImageWritersBySuffix(Ljava/lang/String;)Ljava/util/Iterator;
    .locals 6
    .param p0, "fileSuffix"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/Iterator",
            "<",
            "Lae/javax/imageio/ImageWriter;",
            ">;"
        }
    .end annotation

    .prologue
    .line 909
    if-nez p0, :cond_0

    .line 910
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "fileSuffix == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 915
    :cond_0
    :try_start_0
    sget-object v2, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const-class v3, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 916
    new-instance v4, Lae/javax/imageio/ImageIO$ContainsFilter;

    sget-object v5, Lae/javax/imageio/ImageIO;->writerFileSuffixesMethod:Ljava/lang/reflect/Method;

    invoke-direct {v4, v5, p0}, Lae/javax/imageio/ImageIO$ContainsFilter;-><init>(Ljava/lang/reflect/Method;Ljava/lang/String;)V

    .line 918
    const/4 v5, 0x1

    .line 915
    invoke-virtual {v2, v3, v4, v5}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Lae/javax/imageio/spi/ServiceRegistry$Filter;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 922
    .local v1, "iter":Ljava/util/Iterator;
    new-instance v2, Lae/javax/imageio/ImageIO$ImageWriterIterator;

    invoke-direct {v2, v1}, Lae/javax/imageio/ImageIO$ImageWriterIterator;-><init>(Ljava/util/Iterator;)V

    .end local v1    # "iter":Ljava/util/Iterator;
    :goto_0
    return-object v2

    .line 919
    :catch_0
    move-exception v0

    .line 920
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    invoke-static {}, Ljava/util/Collections;->emptyIterator()Ljava/util/Iterator;

    move-result-object v2

    goto :goto_0
.end method

.method public static getReaderFileSuffixes()[Ljava/lang/String;
    .locals 2

    .prologue
    .line 499
    const-class v0, Lae/javax/imageio/spi/ImageReaderSpi;

    .line 500
    sget-object v1, Lae/javax/imageio/ImageIO$SpiInfo;->FILE_SUFFIXES:Lae/javax/imageio/ImageIO$SpiInfo;

    .line 499
    invoke-static {v0, v1}, Lae/javax/imageio/ImageIO;->getReaderWriterInfo(Ljava/lang/Class;Lae/javax/imageio/ImageIO$SpiInfo;)[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public static getReaderFormatNames()[Ljava/lang/String;
    .locals 2

    .prologue
    .line 474
    const-class v0, Lae/javax/imageio/spi/ImageReaderSpi;

    .line 475
    sget-object v1, Lae/javax/imageio/ImageIO$SpiInfo;->FORMAT_NAMES:Lae/javax/imageio/ImageIO$SpiInfo;

    .line 474
    invoke-static {v0, v1}, Lae/javax/imageio/ImageIO;->getReaderWriterInfo(Ljava/lang/Class;Lae/javax/imageio/ImageIO$SpiInfo;)[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public static getReaderMIMETypes()[Ljava/lang/String;
    .locals 2

    .prologue
    .line 486
    const-class v0, Lae/javax/imageio/spi/ImageReaderSpi;

    .line 487
    sget-object v1, Lae/javax/imageio/ImageIO$SpiInfo;->MIME_TYPES:Lae/javax/imageio/ImageIO$SpiInfo;

    .line 486
    invoke-static {v0, v1}, Lae/javax/imageio/ImageIO;->getReaderWriterInfo(Ljava/lang/Class;Lae/javax/imageio/ImageIO$SpiInfo;)[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method private static getReaderWriterInfo(Ljava/lang/Class;Lae/javax/imageio/ImageIO$SpiInfo;)[Ljava/lang/String;
    .locals 6
    .param p1, "spiInfo"    # Lae/javax/imageio/ImageIO$SpiInfo;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<S:",
            "Lae/javax/imageio/spi/ImageReaderWriterSpi;",
            ">(",
            "Ljava/lang/Class",
            "<TS;>;",
            "Lae/javax/imageio/ImageIO$SpiInfo;",
            ")[",
            "Ljava/lang/String;"
        }
    .end annotation

    .prologue
    .line 450
    .local p0, "spiClass":Ljava/lang/Class;, "Ljava/lang/Class<TS;>;"
    :try_start_0
    sget-object v4, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    const/4 v5, 0x1

    invoke-virtual {v4, p0, v5}, Lae/javax/imageio/spi/IIORegistry;->getServiceProviders(Ljava/lang/Class;Z)Ljava/util/Iterator;
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 455
    .local v1, "iter":Ljava/util/Iterator;, "Ljava/util/Iterator<TS;>;"
    new-instance v2, Ljava/util/HashSet;

    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V

    .line 456
    .local v2, "s":Ljava/util/HashSet;, "Ljava/util/HashSet<Ljava/lang/String;>;"
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-nez v4, :cond_0

    .line 461
    invoke-virtual {v2}, Ljava/util/HashSet;->size()I

    move-result v4

    new-array v4, v4, [Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljava/util/HashSet;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v4

    check-cast v4, [Ljava/lang/String;

    .end local v1    # "iter":Ljava/util/Iterator;, "Ljava/util/Iterator<TS;>;"
    .end local v2    # "s":Ljava/util/HashSet;, "Ljava/util/HashSet<Ljava/lang/String;>;"
    :goto_1
    return-object v4

    .line 451
    :catch_0
    move-exception v0

    .line 452
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    const/4 v4, 0x0

    new-array v4, v4, [Ljava/lang/String;

    goto :goto_1

    .line 457
    .end local v0    # "e":Ljava/lang/IllegalArgumentException;
    .restart local v1    # "iter":Ljava/util/Iterator;, "Ljava/util/Iterator<TS;>;"
    .restart local v2    # "s":Ljava/util/HashSet;, "Ljava/util/HashSet<Ljava/lang/String;>;"
    :cond_0
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lae/javax/imageio/spi/ImageReaderWriterSpi;

    .line 458
    .local v3, "spi":Lae/javax/imageio/spi/ImageReaderWriterSpi;
    invoke-virtual {p1, v3}, Lae/javax/imageio/ImageIO$SpiInfo;->info(Lae/javax/imageio/spi/ImageReaderWriterSpi;)[Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Ljava/util/Collections;->addAll(Ljava/util/Collection;[Ljava/lang/Object;)Z

    goto :goto_0
.end method

.method private static getTempDir()Ljava/lang/String;
    .locals 2

    .prologue
    .line 170
    new-instance v0, Lae/sun/security/action/GetPropertyAction;

    const-string v1, "java.io.tmpdir"

    invoke-direct {v0, v1}, Lae/sun/security/action/GetPropertyAction;-><init>(Ljava/lang/String;)V

    .line 171
    .local v0, "a":Lae/sun/security/action/GetPropertyAction;
    invoke-static {v0}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    return-object v1
.end method

.method public static getUseCache()Z
    .locals 1

    .prologue
    .line 257
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheInfo()Lae/javax/imageio/ImageIO$CacheInfo;

    move-result-object v0

    invoke-virtual {v0}, Lae/javax/imageio/ImageIO$CacheInfo;->getUseCache()Z

    move-result v0

    return v0
.end method

.method private static getWriter(Lae/java/awt/image/RenderedImage;Ljava/lang/String;)Lae/javax/imageio/ImageWriter;
    .locals 3
    .param p0, "im"    # Lae/java/awt/image/RenderedImage;
    .param p1, "formatName"    # Ljava/lang/String;

    .prologue
    .line 1582
    invoke-static {p0}, Lae/javax/imageio/ImageTypeSpecifier;->createFromRenderedImage(Lae/java/awt/image/RenderedImage;)Lae/javax/imageio/ImageTypeSpecifier;

    move-result-object v1

    .line 1583
    .local v1, "type":Lae/javax/imageio/ImageTypeSpecifier;
    invoke-static {v1, p1}, Lae/javax/imageio/ImageIO;->getImageWriters(Lae/javax/imageio/ImageTypeSpecifier;Ljava/lang/String;)Ljava/util/Iterator;

    move-result-object v0

    .line 1585
    .local v0, "iter":Ljava/util/Iterator;, "Ljava/util/Iterator<Lae/javax/imageio/ImageWriter;>;"
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 1586
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lae/javax/imageio/ImageWriter;

    .line 1588
    :goto_0
    return-object v2

    :cond_0
    const/4 v2, 0x0

    goto :goto_0
.end method

.method public static getWriterFileSuffixes()[Ljava/lang/String;
    .locals 2

    .prologue
    .line 813
    const-class v0, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 814
    sget-object v1, Lae/javax/imageio/ImageIO$SpiInfo;->FILE_SUFFIXES:Lae/javax/imageio/ImageIO$SpiInfo;

    .line 813
    invoke-static {v0, v1}, Lae/javax/imageio/ImageIO;->getReaderWriterInfo(Ljava/lang/Class;Lae/javax/imageio/ImageIO$SpiInfo;)[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public static getWriterFormatNames()[Ljava/lang/String;
    .locals 2

    .prologue
    .line 788
    const-class v0, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 789
    sget-object v1, Lae/javax/imageio/ImageIO$SpiInfo;->FORMAT_NAMES:Lae/javax/imageio/ImageIO$SpiInfo;

    .line 788
    invoke-static {v0, v1}, Lae/javax/imageio/ImageIO;->getReaderWriterInfo(Ljava/lang/Class;Lae/javax/imageio/ImageIO$SpiInfo;)[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public static getWriterMIMETypes()[Ljava/lang/String;
    .locals 2

    .prologue
    .line 800
    const-class v0, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 801
    sget-object v1, Lae/javax/imageio/ImageIO$SpiInfo;->MIME_TYPES:Lae/javax/imageio/ImageIO$SpiInfo;

    .line 800
    invoke-static {v0, v1}, Lae/javax/imageio/ImageIO;->getReaderWriterInfo(Ljava/lang/Class;Lae/javax/imageio/ImageIO$SpiInfo;)[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method private static hasCachePermission()Z
    .locals 8

    .prologue
    const/4 v5, 0x0

    .line 182
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheInfo()Lae/javax/imageio/ImageIO$CacheInfo;

    move-result-object v6

    invoke-virtual {v6}, Lae/javax/imageio/ImageIO$CacheInfo;->getHasPermission()Ljava/lang/Boolean;

    move-result-object v3

    .line 184
    .local v3, "hasPermission":Ljava/lang/Boolean;
    if-eqz v3, :cond_0

    .line 185
    invoke-virtual {v3}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v5

    .line 212
    :goto_0
    return v5

    .line 188
    :cond_0
    :try_start_0
    invoke-static {}, Ljava/lang/System;->getSecurityManager()Ljava/lang/SecurityManager;

    move-result-object v4

    .line 189
    .local v4, "security":Ljava/lang/SecurityManager;
    if-eqz v4, :cond_2

    .line 190
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheDirectory()Ljava/io/File;

    move-result-object v0

    .line 193
    .local v0, "cachedir":Ljava/io/File;
    if-eqz v0, :cond_3

    .line 194
    invoke-virtual {v0}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v1

    .line 204
    .local v1, "cachepath":Ljava/lang/String;
    :cond_1
    invoke-virtual {v4, v1}, Ljava/lang/SecurityManager;->checkWrite(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_0} :catch_0

    .line 211
    .end local v0    # "cachedir":Ljava/io/File;
    .end local v1    # "cachepath":Ljava/lang/String;
    :cond_2
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheInfo()Lae/javax/imageio/ImageIO$CacheInfo;

    move-result-object v5

    sget-object v6, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    invoke-virtual {v5, v6}, Lae/javax/imageio/ImageIO$CacheInfo;->setHasPermission(Ljava/lang/Boolean;)V

    .line 212
    const/4 v5, 0x1

    goto :goto_0

    .line 196
    .restart local v0    # "cachedir":Ljava/io/File;
    :cond_3
    :try_start_1
    invoke-static {}, Lae/javax/imageio/ImageIO;->getTempDir()Ljava/lang/String;

    move-result-object v1

    .line 198
    .restart local v1    # "cachepath":Ljava/lang/String;
    if-nez v1, :cond_1

    .line 199
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheInfo()Lae/javax/imageio/ImageIO$CacheInfo;

    move-result-object v6

    sget-object v7, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    invoke-virtual {v6, v7}, Lae/javax/imageio/ImageIO$CacheInfo;->setHasPermission(Ljava/lang/Boolean;)V
    :try_end_1
    .catch Ljava/lang/SecurityException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_0

    .line 206
    .end local v0    # "cachedir":Ljava/io/File;
    .end local v1    # "cachepath":Ljava/lang/String;
    .end local v4    # "security":Ljava/lang/SecurityManager;
    :catch_0
    move-exception v2

    .line 207
    .local v2, "e":Ljava/lang/SecurityException;
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheInfo()Lae/javax/imageio/ImageIO$CacheInfo;

    move-result-object v6

    sget-object v7, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    invoke-virtual {v6, v7}, Lae/javax/imageio/ImageIO$CacheInfo;->setHasPermission(Ljava/lang/Boolean;)V

    goto :goto_0
.end method

.method public static read(Lae/javax/imageio/stream/ImageInputStream;)Lae/java/awt/image/BufferedImage;
    .locals 6
    .param p0, "stream"    # Lae/javax/imageio/stream/ImageInputStream;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    const/4 v5, 0x1

    .line 1424
    if-nez p0, :cond_0

    .line 1425
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string v5, "stream == null!"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 1428
    :cond_0
    invoke-static {p0}, Lae/javax/imageio/ImageIO;->getImageReaders(Ljava/lang/Object;)Ljava/util/Iterator;

    move-result-object v1

    .line 1429
    .local v1, "iter":Ljava/util/Iterator;
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-nez v4, :cond_1

    .line 1430
    const/4 v0, 0x0

    .line 1443
    :goto_0
    return-object v0

    .line 1433
    :cond_1
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lae/javax/imageio/ImageReader;

    .line 1434
    .local v3, "reader":Lae/javax/imageio/ImageReader;
    invoke-virtual {v3}, Lae/javax/imageio/ImageReader;->getDefaultReadParam()Lae/javax/imageio/ImageReadParam;

    move-result-object v2

    .line 1435
    .local v2, "param":Lae/javax/imageio/ImageReadParam;
    invoke-virtual {v3, p0, v5, v5}, Lae/javax/imageio/ImageReader;->setInput(Ljava/lang/Object;ZZ)V

    .line 1438
    const/4 v4, 0x0

    :try_start_0
    invoke-virtual {v3, v4, v2}, Lae/javax/imageio/ImageReader;->read(ILae/javax/imageio/ImageReadParam;)Lae/java/awt/image/BufferedImage;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 1440
    .local v0, "bi":Lae/java/awt/image/BufferedImage;
    invoke-virtual {v3}, Lae/javax/imageio/ImageReader;->dispose()V

    .line 1441
    invoke-interface {p0}, Lae/javax/imageio/stream/ImageInputStream;->close()V

    goto :goto_0

    .line 1439
    .end local v0    # "bi":Lae/java/awt/image/BufferedImage;
    :catchall_0
    move-exception v4

    .line 1440
    invoke-virtual {v3}, Lae/javax/imageio/ImageReader;->dispose()V

    .line 1441
    invoke-interface {p0}, Lae/javax/imageio/stream/ImageInputStream;->close()V

    .line 1442
    throw v4
.end method

.method public static read(Ljava/io/File;)Lae/java/awt/image/BufferedImage;
    .locals 4
    .param p0, "input"    # Ljava/io/File;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 1287
    if-nez p0, :cond_0

    .line 1288
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "input == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1290
    :cond_0
    invoke-virtual {p0}, Ljava/io/File;->canRead()Z

    move-result v2

    if-nez v2, :cond_1

    .line 1291
    new-instance v2, Lae/javax/imageio/IIOException;

    const-string v3, "Can\'t read input file!"

    invoke-direct {v2, v3}, Lae/javax/imageio/IIOException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1294
    :cond_1
    invoke-static {p0}, Lae/javax/imageio/ImageIO;->createImageInputStream(Ljava/lang/Object;)Lae/javax/imageio/stream/ImageInputStream;

    move-result-object v1

    .line 1295
    .local v1, "stream":Lae/javax/imageio/stream/ImageInputStream;
    if-nez v1, :cond_2

    .line 1296
    new-instance v2, Lae/javax/imageio/IIOException;

    const-string v3, "Can\'t create an ImageInputStream!"

    invoke-direct {v2, v3}, Lae/javax/imageio/IIOException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1298
    :cond_2
    invoke-static {v1}, Lae/javax/imageio/ImageIO;->read(Lae/javax/imageio/stream/ImageInputStream;)Lae/java/awt/image/BufferedImage;

    move-result-object v0

    .line 1299
    .local v0, "bi":Lae/java/awt/image/BufferedImage;
    if-nez v0, :cond_3

    .line 1300
    invoke-interface {v1}, Lae/javax/imageio/stream/ImageInputStream;->close()V

    .line 1302
    :cond_3
    return-object v0
.end method

.method public static read(Ljava/io/InputStream;)Lae/java/awt/image/BufferedImage;
    .locals 4
    .param p0, "input"    # Ljava/io/InputStream;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 1337
    if-nez p0, :cond_0

    .line 1338
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "input == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1341
    :cond_0
    invoke-static {p0}, Lae/javax/imageio/ImageIO;->createImageInputStream(Ljava/lang/Object;)Lae/javax/imageio/stream/ImageInputStream;

    move-result-object v1

    .line 1342
    .local v1, "stream":Lae/javax/imageio/stream/ImageInputStream;
    invoke-static {v1}, Lae/javax/imageio/ImageIO;->read(Lae/javax/imageio/stream/ImageInputStream;)Lae/java/awt/image/BufferedImage;

    move-result-object v0

    .line 1343
    .local v0, "bi":Lae/java/awt/image/BufferedImage;
    if-nez v0, :cond_1

    .line 1344
    invoke-interface {v1}, Lae/javax/imageio/stream/ImageInputStream;->close()V

    .line 1346
    :cond_1
    return-object v0
.end method

.method public static read(Ljava/net/URL;)Lae/java/awt/image/BufferedImage;
    .locals 6
    .param p0, "input"    # Ljava/net/URL;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 1377
    if-nez p0, :cond_0

    .line 1378
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string v5, "input == null!"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 1381
    :cond_0
    const/4 v2, 0x0

    .line 1383
    .local v2, "istream":Ljava/io/InputStream;
    :try_start_0
    invoke-virtual {p0}, Ljava/net/URL;->openStream()Ljava/io/InputStream;
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v2

    .line 1387
    invoke-static {v2}, Lae/javax/imageio/ImageIO;->createImageInputStream(Ljava/lang/Object;)Lae/javax/imageio/stream/ImageInputStream;

    move-result-object v3

    .line 1390
    .local v3, "stream":Lae/javax/imageio/stream/ImageInputStream;
    :try_start_1
    invoke-static {v3}, Lae/javax/imageio/ImageIO;->read(Lae/javax/imageio/stream/ImageInputStream;)Lae/java/awt/image/BufferedImage;

    move-result-object v0

    .line 1391
    .local v0, "bi":Lae/java/awt/image/BufferedImage;
    if-nez v0, :cond_1

    .line 1392
    invoke-interface {v3}, Lae/javax/imageio/stream/ImageInputStream;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1395
    :cond_1
    invoke-virtual {v2}, Ljava/io/InputStream;->close()V

    .line 1397
    return-object v0

    .line 1384
    .end local v0    # "bi":Lae/java/awt/image/BufferedImage;
    .end local v3    # "stream":Lae/javax/imageio/stream/ImageInputStream;
    :catch_0
    move-exception v1

    .line 1385
    .local v1, "e":Ljava/io/IOException;
    new-instance v4, Lae/javax/imageio/IIOException;

    const-string v5, "Can\'t get input stream from URL!"

    invoke-direct {v4, v5, v1}, Lae/javax/imageio/IIOException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v4

    .line 1394
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v3    # "stream":Lae/javax/imageio/stream/ImageInputStream;
    :catchall_0
    move-exception v4

    .line 1395
    invoke-virtual {v2}, Ljava/io/InputStream;->close()V

    .line 1396
    throw v4
.end method

.method public static scanForPlugins()V
    .locals 1

    .prologue
    .line 109
    sget-object v0, Lae/javax/imageio/ImageIO;->theRegistry:Lae/javax/imageio/spi/IIORegistry;

    invoke-virtual {v0}, Lae/javax/imageio/spi/IIORegistry;->registerApplicationClasspathSpis()V

    .line 110
    return-void
.end method

.method public static setCacheDirectory(Ljava/io/File;)V
    .locals 2
    .param p0, "cacheDirectory"    # Ljava/io/File;

    .prologue
    .line 278
    if-eqz p0, :cond_0

    invoke-virtual {p0}, Ljava/io/File;->isDirectory()Z

    move-result v0

    if-nez v0, :cond_0

    .line 279
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Not a directory!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 281
    :cond_0
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheInfo()Lae/javax/imageio/ImageIO$CacheInfo;

    move-result-object v0

    invoke-virtual {v0, p0}, Lae/javax/imageio/ImageIO$CacheInfo;->setCacheDirectory(Ljava/io/File;)V

    .line 282
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheInfo()Lae/javax/imageio/ImageIO$CacheInfo;

    move-result-object v0

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lae/javax/imageio/ImageIO$CacheInfo;->setHasPermission(Ljava/lang/Boolean;)V

    .line 283
    return-void
.end method

.method public static setUseCache(Z)V
    .locals 1
    .param p0, "useCache"    # Z

    .prologue
    .line 243
    invoke-static {}, Lae/javax/imageio/ImageIO;->getCacheInfo()Lae/javax/imageio/ImageIO$CacheInfo;

    move-result-object v0

    invoke-virtual {v0, p0}, Lae/javax/imageio/ImageIO$CacheInfo;->setUseCache(Z)V

    .line 244
    return-void
.end method

.method public static write(Lae/java/awt/image/RenderedImage;Ljava/lang/String;Lae/javax/imageio/stream/ImageOutputStream;)Z
    .locals 2
    .param p0, "im"    # Lae/java/awt/image/RenderedImage;
    .param p1, "formatName"    # Ljava/lang/String;
    .param p2, "output"    # Lae/javax/imageio/stream/ImageOutputStream;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 1472
    if-nez p0, :cond_0

    .line 1473
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "im == null!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1475
    :cond_0
    if-nez p1, :cond_1

    .line 1476
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "formatName == null!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1478
    :cond_1
    if-nez p2, :cond_2

    .line 1479
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "output == null!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1482
    :cond_2
    invoke-static {p0, p1}, Lae/javax/imageio/ImageIO;->getWriter(Lae/java/awt/image/RenderedImage;Ljava/lang/String;)Lae/javax/imageio/ImageWriter;

    move-result-object v0

    invoke-static {p0, v0, p2}, Lae/javax/imageio/ImageIO;->doWrite(Lae/java/awt/image/RenderedImage;Lae/javax/imageio/ImageWriter;Lae/javax/imageio/stream/ImageOutputStream;)Z

    move-result v0

    return v0
.end method

.method public static write(Lae/java/awt/image/RenderedImage;Ljava/lang/String;Ljava/io/File;)Z
    .locals 5
    .param p0, "im"    # Lae/java/awt/image/RenderedImage;
    .param p1, "formatName"    # Ljava/lang/String;
    .param p2, "output"    # Ljava/io/File;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 1505
    if-nez p2, :cond_0

    .line 1506
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "output == null!"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 1508
    :cond_0
    const/4 v1, 0x0

    .line 1510
    .local v1, "stream":Lae/javax/imageio/stream/ImageOutputStream;
    invoke-static {p0, p1}, Lae/javax/imageio/ImageIO;->getWriter(Lae/java/awt/image/RenderedImage;Ljava/lang/String;)Lae/javax/imageio/ImageWriter;

    move-result-object v2

    .line 1511
    .local v2, "writer":Lae/javax/imageio/ImageWriter;
    if-nez v2, :cond_1

    .line 1515
    const/4 v3, 0x0

    .line 1526
    :goto_0
    return v3

    .line 1519
    :cond_1
    :try_start_0
    invoke-virtual {p2}, Ljava/io/File;->delete()Z

    .line 1520
    invoke-static {p2}, Lae/javax/imageio/ImageIO;->createImageOutputStream(Ljava/lang/Object;)Lae/javax/imageio/stream/ImageOutputStream;
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 1526
    :try_start_1
    invoke-static {p0, v2, v1}, Lae/javax/imageio/ImageIO;->doWrite(Lae/java/awt/image/RenderedImage;Lae/javax/imageio/ImageWriter;Lae/javax/imageio/stream/ImageOutputStream;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v3

    .line 1528
    invoke-interface {v1}, Lae/javax/imageio/stream/ImageOutputStream;->close()V

    goto :goto_0

    .line 1521
    :catch_0
    move-exception v0

    .line 1522
    .local v0, "e":Ljava/io/IOException;
    new-instance v3, Lae/javax/imageio/IIOException;

    const-string v4, "Can\'t create output stream!"

    invoke-direct {v3, v4, v0}, Lae/javax/imageio/IIOException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v3

    .line 1527
    .end local v0    # "e":Ljava/io/IOException;
    :catchall_0
    move-exception v3

    .line 1528
    invoke-interface {v1}, Lae/javax/imageio/stream/ImageOutputStream;->close()V

    .line 1529
    throw v3
.end method

.method public static write(Lae/java/awt/image/RenderedImage;Ljava/lang/String;Ljava/io/OutputStream;)Z
    .locals 4
    .param p0, "im"    # Lae/java/awt/image/RenderedImage;
    .param p1, "formatName"    # Ljava/lang/String;
    .param p2, "output"    # Ljava/io/OutputStream;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 1557
    if-nez p2, :cond_0

    .line 1558
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "output == null!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1560
    :cond_0
    const/4 v1, 0x0

    .line 1562
    .local v1, "stream":Lae/javax/imageio/stream/ImageOutputStream;
    :try_start_0
    invoke-static {p2}, Lae/javax/imageio/ImageIO;->createImageOutputStream(Ljava/lang/Object;)Lae/javax/imageio/stream/ImageOutputStream;
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 1568
    :try_start_1
    invoke-static {p0, p1}, Lae/javax/imageio/ImageIO;->getWriter(Lae/java/awt/image/RenderedImage;Ljava/lang/String;)Lae/javax/imageio/ImageWriter;

    move-result-object v2

    invoke-static {p0, v2, v1}, Lae/javax/imageio/ImageIO;->doWrite(Lae/java/awt/image/RenderedImage;Lae/javax/imageio/ImageWriter;Lae/javax/imageio/stream/ImageOutputStream;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v2

    .line 1570
    invoke-interface {v1}, Lae/javax/imageio/stream/ImageOutputStream;->close()V

    .line 1568
    return v2

    .line 1563
    :catch_0
    move-exception v0

    .line 1564
    .local v0, "e":Ljava/io/IOException;
    new-instance v2, Lae/javax/imageio/IIOException;

    const-string v3, "Can\'t create output stream!"

    invoke-direct {v2, v3, v0}, Lae/javax/imageio/IIOException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v2

    .line 1569
    .end local v0    # "e":Ljava/io/IOException;
    :catchall_0
    move-exception v2

    .line 1570
    invoke-interface {v1}, Lae/javax/imageio/stream/ImageOutputStream;->close()V

    .line 1571
    throw v2
.end method

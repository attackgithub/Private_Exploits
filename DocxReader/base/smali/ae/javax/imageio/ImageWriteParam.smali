.class public Lae/javax/imageio/ImageWriteParam;
.super Lae/javax/imageio/IIOParam;
.source "ImageWriteParam.java"


# static fields
.field private static final MAX_MODE:I = 0x3

.field public static final MODE_COPY_FROM_METADATA:I = 0x3

.field public static final MODE_DEFAULT:I = 0x1

.field public static final MODE_DISABLED:I = 0x0

.field public static final MODE_EXPLICIT:I = 0x2


# instance fields
.field protected canOffsetTiles:Z

.field protected canWriteCompressed:Z

.field protected canWriteProgressive:Z

.field protected canWriteTiles:Z

.field protected compressionMode:I

.field protected compressionQuality:F

.field protected compressionType:Ljava/lang/String;

.field protected compressionTypes:[Ljava/lang/String;

.field protected locale:Ljava/util/Locale;

.field protected preferredTileSizes:[Lae/java/awt/Dimension;

.field protected progressiveMode:I

.field protected tileGridXOffset:I

.field protected tileGridYOffset:I

.field protected tileHeight:I

.field protected tileWidth:I

.field protected tilingMode:I

.field protected tilingSet:Z


# direct methods
.method protected constructor <init>()V
    .locals 3

    .prologue
    const/4 v2, 0x3

    const/4 v1, 0x0

    const/4 v0, 0x0

    .line 378
    invoke-direct {p0}, Lae/javax/imageio/IIOParam;-><init>()V

    .line 192
    iput-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canWriteTiles:Z

    .line 208
    iput v2, p0, Lae/javax/imageio/ImageWriteParam;->tilingMode:I

    .line 221
    iput-object v1, p0, Lae/javax/imageio/ImageWriteParam;->preferredTileSizes:[Lae/java/awt/Dimension;

    .line 230
    iput-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->tilingSet:Z

    .line 238
    iput v0, p0, Lae/javax/imageio/ImageWriteParam;->tileWidth:I

    .line 247
    iput v0, p0, Lae/javax/imageio/ImageWriteParam;->tileHeight:I

    .line 259
    iput-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canOffsetTiles:Z

    .line 269
    iput v0, p0, Lae/javax/imageio/ImageWriteParam;->tileGridXOffset:I

    .line 279
    iput v0, p0, Lae/javax/imageio/ImageWriteParam;->tileGridYOffset:I

    .line 291
    iput-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canWriteProgressive:Z

    .line 309
    iput v2, p0, Lae/javax/imageio/ImageWriteParam;->progressiveMode:I

    .line 319
    iput-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed:Z

    .line 336
    iput v2, p0, Lae/javax/imageio/ImageWriteParam;->compressionMode:I

    .line 346
    iput-object v1, p0, Lae/javax/imageio/ImageWriteParam;->compressionTypes:[Ljava/lang/String;

    .line 355
    iput-object v1, p0, Lae/javax/imageio/ImageWriteParam;->compressionType:Ljava/lang/String;

    .line 364
    const/high16 v0, 0x3f800000    # 1.0f

    iput v0, p0, Lae/javax/imageio/ImageWriteParam;->compressionQuality:F

    .line 372
    iput-object v1, p0, Lae/javax/imageio/ImageWriteParam;->locale:Ljava/util/Locale;

    .line 378
    return-void
.end method

.method public constructor <init>(Ljava/util/Locale;)V
    .locals 3
    .param p1, "locale"    # Ljava/util/Locale;

    .prologue
    const/4 v2, 0x3

    const/4 v1, 0x0

    const/4 v0, 0x0

    .line 388
    invoke-direct {p0}, Lae/javax/imageio/IIOParam;-><init>()V

    .line 192
    iput-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canWriteTiles:Z

    .line 208
    iput v2, p0, Lae/javax/imageio/ImageWriteParam;->tilingMode:I

    .line 221
    iput-object v1, p0, Lae/javax/imageio/ImageWriteParam;->preferredTileSizes:[Lae/java/awt/Dimension;

    .line 230
    iput-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->tilingSet:Z

    .line 238
    iput v0, p0, Lae/javax/imageio/ImageWriteParam;->tileWidth:I

    .line 247
    iput v0, p0, Lae/javax/imageio/ImageWriteParam;->tileHeight:I

    .line 259
    iput-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canOffsetTiles:Z

    .line 269
    iput v0, p0, Lae/javax/imageio/ImageWriteParam;->tileGridXOffset:I

    .line 279
    iput v0, p0, Lae/javax/imageio/ImageWriteParam;->tileGridYOffset:I

    .line 291
    iput-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canWriteProgressive:Z

    .line 309
    iput v2, p0, Lae/javax/imageio/ImageWriteParam;->progressiveMode:I

    .line 319
    iput-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed:Z

    .line 336
    iput v2, p0, Lae/javax/imageio/ImageWriteParam;->compressionMode:I

    .line 346
    iput-object v1, p0, Lae/javax/imageio/ImageWriteParam;->compressionTypes:[Ljava/lang/String;

    .line 355
    iput-object v1, p0, Lae/javax/imageio/ImageWriteParam;->compressionType:Ljava/lang/String;

    .line 364
    const/high16 v0, 0x3f800000    # 1.0f

    iput v0, p0, Lae/javax/imageio/ImageWriteParam;->compressionQuality:F

    .line 372
    iput-object v1, p0, Lae/javax/imageio/ImageWriteParam;->locale:Ljava/util/Locale;

    .line 389
    iput-object p1, p0, Lae/javax/imageio/ImageWriteParam;->locale:Ljava/util/Locale;

    .line 390
    return-void
.end method

.method private static clonePreferredTileSizes([Lae/java/awt/Dimension;)[Lae/java/awt/Dimension;
    .locals 4
    .param p0, "sizes"    # [Lae/java/awt/Dimension;

    .prologue
    .line 394
    if-nez p0, :cond_1

    .line 395
    const/4 v1, 0x0

    .line 401
    :cond_0
    return-object v1

    .line 397
    :cond_1
    array-length v2, p0

    new-array v1, v2, [Lae/java/awt/Dimension;

    .line 398
    .local v1, "temp":[Lae/java/awt/Dimension;
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    array-length v2, p0

    if-ge v0, v2, :cond_0

    .line 399
    new-instance v2, Lae/java/awt/Dimension;

    aget-object v3, p0, v0

    invoke-direct {v2, v3}, Lae/java/awt/Dimension;-><init>(Lae/java/awt/Dimension;)V

    aput-object v2, v1, v0

    .line 398
    add-int/lit8 v0, v0, 0x1

    goto :goto_0
.end method


# virtual methods
.method public canOffsetTiles()Z
    .locals 1

    .prologue
    .line 446
    iget-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canOffsetTiles:Z

    return v0
.end method

.method public canWriteCompressed()Z
    .locals 1

    .prologue
    .line 869
    iget-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed:Z

    return v0
.end method

.method public canWriteProgressive()Z
    .locals 1

    .prologue
    .line 786
    iget-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canWriteProgressive:Z

    return v0
.end method

.method public canWriteTiles()Z
    .locals 1

    .prologue
    .line 427
    iget-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->canWriteTiles:Z

    return v0
.end method

.method public getBitRate(F)F
    .locals 2
    .param p1, "quality"    # F

    .prologue
    .line 1332
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 1333
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 1334
    const-string v1, "Compression not supported."

    .line 1333
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1336
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 1337
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 1338
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 1337
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1340
    :cond_1
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionTypes()[Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_2

    .line 1341
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionType()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_2

    .line 1342
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "No compression type set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1344
    :cond_2
    const/4 v0, 0x0

    cmpg-float v0, p1, v0

    if-ltz v0, :cond_3

    const/high16 v0, 0x3f800000    # 1.0f

    cmpl-float v0, p1, v0

    if-lez v0, :cond_4

    .line 1345
    :cond_3
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Quality out-of-bounds!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1347
    :cond_4
    const/high16 v0, -0x40800000    # -1.0f

    return v0
.end method

.method public getCompressionMode()I
    .locals 2

    .prologue
    .line 939
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 940
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 941
    const-string v1, "Compression not supported."

    .line 940
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 943
    :cond_0
    iget v0, p0, Lae/javax/imageio/ImageWriteParam;->compressionMode:I

    return v0
.end method

.method public getCompressionQuality()F
    .locals 2

    .prologue
    .line 1279
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 1280
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 1281
    const-string v1, "Compression not supported."

    .line 1280
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1283
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 1284
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 1285
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 1284
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1287
    :cond_1
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionTypes()[Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_2

    .line 1288
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionType()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_2

    .line 1289
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "No compression type set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1291
    :cond_2
    iget v0, p0, Lae/javax/imageio/ImageWriteParam;->compressionQuality:F

    return v0
.end method

.method public getCompressionQualityDescriptions()[Ljava/lang/String;
    .locals 2

    .prologue
    .line 1404
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 1405
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 1406
    const-string v1, "Compression not supported."

    .line 1405
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1408
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 1409
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 1410
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 1409
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1412
    :cond_1
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionTypes()[Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_2

    .line 1413
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionType()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_2

    .line 1414
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "No compression type set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1416
    :cond_2
    const/4 v0, 0x0

    return-object v0
.end method

.method public getCompressionQualityValues()[F
    .locals 2

    .prologue
    .line 1457
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 1458
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 1459
    const-string v1, "Compression not supported."

    .line 1458
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1461
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 1462
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 1463
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 1462
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1465
    :cond_1
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionTypes()[Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_2

    .line 1466
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionType()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_2

    .line 1467
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "No compression type set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1469
    :cond_2
    const/4 v0, 0x0

    return-object v0
.end method

.method public getCompressionType()Ljava/lang/String;
    .locals 2

    .prologue
    .line 1071
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 1072
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 1073
    const-string v1, "Compression not supported."

    .line 1072
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1075
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 1076
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 1077
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 1076
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1079
    :cond_1
    iget-object v0, p0, Lae/javax/imageio/ImageWriteParam;->compressionType:Ljava/lang/String;

    return-object v0
.end method

.method public getCompressionTypes()[Ljava/lang/String;
    .locals 2

    .prologue
    .line 973
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 974
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 975
    const-string v1, "Compression not supported"

    .line 974
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 977
    :cond_0
    iget-object v0, p0, Lae/javax/imageio/ImageWriteParam;->compressionTypes:[Ljava/lang/String;

    if-nez v0, :cond_1

    .line 978
    const/4 v0, 0x0

    .line 980
    :goto_0
    return-object v0

    :cond_1
    iget-object v0, p0, Lae/javax/imageio/ImageWriteParam;->compressionTypes:[Ljava/lang/String;

    invoke-virtual {v0}, [Ljava/lang/String;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    goto :goto_0
.end method

.method public getLocale()Ljava/util/Locale;
    .locals 1

    .prologue
    .line 412
    iget-object v0, p0, Lae/javax/imageio/ImageWriteParam;->locale:Ljava/util/Locale;

    return-object v0
.end method

.method public getLocalizedCompressionTypeName()Ljava/lang/String;
    .locals 2

    .prologue
    .line 1133
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 1134
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 1135
    const-string v1, "Compression not supported."

    .line 1134
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1137
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 1138
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 1139
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 1138
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1141
    :cond_1
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionType()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_2

    .line 1142
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "No compression type set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1144
    :cond_2
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionType()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getPreferredTileSizes()[Lae/java/awt/Dimension;
    .locals 2

    .prologue
    .line 541
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteTiles()Z

    move-result v0

    if-nez v0, :cond_0

    .line 542
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "Tiling not supported"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 544
    :cond_0
    iget-object v0, p0, Lae/javax/imageio/ImageWriteParam;->preferredTileSizes:[Lae/java/awt/Dimension;

    invoke-static {v0}, Lae/javax/imageio/ImageWriteParam;->clonePreferredTileSizes([Lae/java/awt/Dimension;)[Lae/java/awt/Dimension;

    move-result-object v0

    return-object v0
.end method

.method public getProgressiveMode()I
    .locals 2

    .prologue
    .line 856
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteProgressive()Z

    move-result v0

    if-nez v0, :cond_0

    .line 857
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 858
    const-string v1, "Progressive output not supported"

    .line 857
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 860
    :cond_0
    iget v0, p0, Lae/javax/imageio/ImageWriteParam;->progressiveMode:I

    return v0
.end method

.method public getTileGridXOffset()I
    .locals 2

    .prologue
    .line 733
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteTiles()Z

    move-result v0

    if-nez v0, :cond_0

    .line 734
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "Tiling not supported!"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 736
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getTilingMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 737
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Tiling mode not MODE_EXPLICIT!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 739
    :cond_1
    iget-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->tilingSet:Z

    if-nez v0, :cond_2

    .line 740
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Tiling parameters not set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 742
    :cond_2
    iget v0, p0, Lae/javax/imageio/ImageWriteParam;->tileGridXOffset:I

    return v0
.end method

.method public getTileGridYOffset()I
    .locals 2

    .prologue
    .line 763
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteTiles()Z

    move-result v0

    if-nez v0, :cond_0

    .line 764
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "Tiling not supported!"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 766
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getTilingMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 767
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Tiling mode not MODE_EXPLICIT!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 769
    :cond_1
    iget-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->tilingSet:Z

    if-nez v0, :cond_2

    .line 770
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Tiling parameters not set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 772
    :cond_2
    iget v0, p0, Lae/javax/imageio/ImageWriteParam;->tileGridYOffset:I

    return v0
.end method

.method public getTileHeight()I
    .locals 2

    .prologue
    .line 703
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteTiles()Z

    move-result v0

    if-nez v0, :cond_0

    .line 704
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "Tiling not supported!"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 706
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getTilingMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 707
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Tiling mode not MODE_EXPLICIT!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 709
    :cond_1
    iget-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->tilingSet:Z

    if-nez v0, :cond_2

    .line 710
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Tiling parameters not set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 712
    :cond_2
    iget v0, p0, Lae/javax/imageio/ImageWriteParam;->tileHeight:I

    return v0
.end method

.method public getTileWidth()I
    .locals 2

    .prologue
    .line 673
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteTiles()Z

    move-result v0

    if-nez v0, :cond_0

    .line 674
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "Tiling not supported!"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 676
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getTilingMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 677
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Tiling mode not MODE_EXPLICIT!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 679
    :cond_1
    iget-boolean v0, p0, Lae/javax/imageio/ImageWriteParam;->tilingSet:Z

    if-nez v0, :cond_2

    .line 680
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Tiling parameters not set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 682
    :cond_2
    iget v0, p0, Lae/javax/imageio/ImageWriteParam;->tileWidth:I

    return v0
.end method

.method public getTilingMode()I
    .locals 2

    .prologue
    .line 511
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteTiles()Z

    move-result v0

    if-nez v0, :cond_0

    .line 512
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "Tiling not supported"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 514
    :cond_0
    iget v0, p0, Lae/javax/imageio/ImageWriteParam;->tilingMode:I

    return v0
.end method

.method public isCompressionLossless()Z
    .locals 2

    .prologue
    .line 1175
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 1176
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 1177
    const-string v1, "Compression not supported"

    .line 1176
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1179
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 1180
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 1181
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 1180
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1183
    :cond_1
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionTypes()[Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_2

    .line 1184
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionType()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_2

    .line 1185
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "No compression type set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1187
    :cond_2
    const/4 v0, 0x1

    return v0
.end method

.method public setCompressionMode(I)V
    .locals 2
    .param p1, "mode"    # I

    .prologue
    .line 914
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 915
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 916
    const-string v1, "Compression not supported."

    .line 915
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 918
    :cond_0
    if-ltz p1, :cond_1

    const/4 v0, 0x3

    if-le p1, v0, :cond_2

    .line 919
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Illegal value for mode!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 921
    :cond_2
    iput p1, p0, Lae/javax/imageio/ImageWriteParam;->compressionMode:I

    .line 922
    const/4 v0, 0x2

    if-ne p1, v0, :cond_3

    .line 923
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->unsetCompression()V

    .line 925
    :cond_3
    return-void
.end method

.method public setCompressionQuality(F)V
    .locals 2
    .param p1, "quality"    # F

    .prologue
    .line 1235
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 1236
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 1237
    const-string v1, "Compression not supported"

    .line 1236
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1239
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 1240
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 1241
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 1240
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1243
    :cond_1
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionTypes()[Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_2

    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionType()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_2

    .line 1244
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "No compression type set!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1246
    :cond_2
    const/4 v0, 0x0

    cmpg-float v0, p1, v0

    if-ltz v0, :cond_3

    const/high16 v0, 0x3f800000    # 1.0f

    cmpl-float v0, p1, v0

    if-lez v0, :cond_4

    .line 1247
    :cond_3
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Quality out-of-bounds!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1249
    :cond_4
    iput p1, p0, Lae/javax/imageio/ImageWriteParam;->compressionQuality:F

    .line 1250
    return-void
.end method

.method public setCompressionType(Ljava/lang/String;)V
    .locals 5
    .param p1, "compressionType"    # Ljava/lang/String;

    .prologue
    .line 1017
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v3

    if-nez v3, :cond_0

    .line 1018
    new-instance v3, Ljava/lang/UnsupportedOperationException;

    .line 1019
    const-string v4, "Compression not supported"

    .line 1018
    invoke-direct {v3, v4}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 1021
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionMode()I

    move-result v3

    const/4 v4, 0x2

    if-eq v3, v4, :cond_1

    .line 1022
    new-instance v3, Ljava/lang/IllegalStateException;

    .line 1023
    const-string v4, "Compression mode not MODE_EXPLICIT!"

    .line 1022
    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 1025
    :cond_1
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionTypes()[Ljava/lang/String;

    move-result-object v2

    .line 1026
    .local v2, "legalTypes":[Ljava/lang/String;
    if-nez v2, :cond_2

    .line 1027
    new-instance v3, Ljava/lang/UnsupportedOperationException;

    .line 1028
    const-string v4, "No settable compression types"

    .line 1027
    invoke-direct {v3, v4}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 1030
    :cond_2
    if-eqz p1, :cond_6

    .line 1031
    const/4 v0, 0x0

    .line 1032
    .local v0, "found":Z
    if-eqz v2, :cond_3

    .line 1033
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    array-length v3, v2

    if-lt v1, v3, :cond_4

    .line 1040
    .end local v1    # "i":I
    :cond_3
    :goto_1
    if-nez v0, :cond_6

    .line 1041
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "Unknown compression type!"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 1034
    .restart local v1    # "i":I
    :cond_4
    aget-object v3, v2, v1

    invoke-virtual {p1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_5

    .line 1035
    const/4 v0, 0x1

    .line 1036
    goto :goto_1

    .line 1033
    :cond_5
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 1044
    .end local v0    # "found":Z
    .end local v1    # "i":I
    :cond_6
    iput-object p1, p0, Lae/javax/imageio/ImageWriteParam;->compressionType:Ljava/lang/String;

    .line 1045
    return-void
.end method

.method public setProgressiveMode(I)V
    .locals 2
    .param p1, "mode"    # I

    .prologue
    .line 830
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteProgressive()Z

    move-result v0

    if-nez v0, :cond_0

    .line 831
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 832
    const-string v1, "Progressive output not supported"

    .line 831
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 834
    :cond_0
    if-ltz p1, :cond_1

    const/4 v0, 0x3

    if-le p1, v0, :cond_2

    .line 835
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Illegal value for mode!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 837
    :cond_2
    const/4 v0, 0x2

    if-ne p1, v0, :cond_3

    .line 838
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 839
    const-string v1, "MODE_EXPLICIT not supported for progressive output"

    .line 838
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 841
    :cond_3
    iput p1, p0, Lae/javax/imageio/ImageWriteParam;->progressiveMode:I

    .line 842
    return-void
.end method

.method public setTiling(IIII)V
    .locals 8
    .param p1, "tileWidth"    # I
    .param p2, "tileHeight"    # I
    .param p3, "tileGridXOffset"    # I
    .param p4, "tileGridYOffset"    # I

    .prologue
    const/4 v5, 0x1

    .line 586
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteTiles()Z

    move-result v6

    if-nez v6, :cond_0

    .line 587
    new-instance v5, Ljava/lang/UnsupportedOperationException;

    const-string v6, "Tiling not supported!"

    invoke-direct {v5, v6}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 589
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getTilingMode()I

    move-result v6

    const/4 v7, 0x2

    if-eq v6, v7, :cond_1

    .line 590
    new-instance v5, Ljava/lang/IllegalStateException;

    const-string v6, "Tiling mode not MODE_EXPLICIT!"

    invoke-direct {v5, v6}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 592
    :cond_1
    if-lez p1, :cond_2

    if-gtz p2, :cond_3

    .line 593
    :cond_2
    new-instance v5, Ljava/lang/IllegalArgumentException;

    .line 594
    const-string v6, "tile dimensions are non-positive!"

    .line 593
    invoke-direct {v5, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 596
    :cond_3
    if-nez p3, :cond_4

    if-nez p4, :cond_4

    const/4 v4, 0x0

    .line 597
    .local v4, "tilesOffset":Z
    :goto_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canOffsetTiles()Z

    move-result v6

    if-nez v6, :cond_5

    if-eqz v4, :cond_5

    .line 598
    new-instance v5, Ljava/lang/UnsupportedOperationException;

    const-string v6, "Can\'t offset tiles!"

    invoke-direct {v5, v6}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v5

    .end local v4    # "tilesOffset":Z
    :cond_4
    move v4, v5

    .line 596
    goto :goto_0

    .line 600
    .restart local v4    # "tilesOffset":Z
    :cond_5
    iget-object v6, p0, Lae/javax/imageio/ImageWriteParam;->preferredTileSizes:[Lae/java/awt/Dimension;

    if-eqz v6, :cond_9

    .line 601
    const/4 v3, 0x1

    .line 602
    .local v3, "ok":Z
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    iget-object v6, p0, Lae/javax/imageio/ImageWriteParam;->preferredTileSizes:[Lae/java/awt/Dimension;

    array-length v6, v6

    if-lt v0, v6, :cond_6

    .line 613
    :goto_2
    if-nez v3, :cond_9

    .line 614
    new-instance v5, Ljava/lang/IllegalArgumentException;

    const-string v6, "Illegal tile size!"

    invoke-direct {v5, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 603
    :cond_6
    iget-object v6, p0, Lae/javax/imageio/ImageWriteParam;->preferredTileSizes:[Lae/java/awt/Dimension;

    aget-object v2, v6, v0

    .line 604
    .local v2, "min":Lae/java/awt/Dimension;
    iget-object v6, p0, Lae/javax/imageio/ImageWriteParam;->preferredTileSizes:[Lae/java/awt/Dimension;

    add-int/lit8 v7, v0, 0x1

    aget-object v1, v6, v7

    .line 605
    .local v1, "max":Lae/java/awt/Dimension;
    iget v6, v2, Lae/java/awt/Dimension;->width:I

    if-lt p1, v6, :cond_7

    .line 606
    iget v6, v1, Lae/java/awt/Dimension;->width:I

    if-gt p1, v6, :cond_7

    .line 607
    iget v6, v2, Lae/java/awt/Dimension;->height:I

    if-lt p2, v6, :cond_7

    .line 608
    iget v6, v1, Lae/java/awt/Dimension;->height:I

    if-le p2, v6, :cond_8

    .line 609
    :cond_7
    const/4 v3, 0x0

    .line 610
    goto :goto_2

    .line 602
    :cond_8
    add-int/lit8 v0, v0, 0x2

    goto :goto_1

    .line 618
    .end local v0    # "i":I
    .end local v1    # "max":Lae/java/awt/Dimension;
    .end local v2    # "min":Lae/java/awt/Dimension;
    .end local v3    # "ok":Z
    :cond_9
    iput-boolean v5, p0, Lae/javax/imageio/ImageWriteParam;->tilingSet:Z

    .line 619
    iput p1, p0, Lae/javax/imageio/ImageWriteParam;->tileWidth:I

    .line 620
    iput p2, p0, Lae/javax/imageio/ImageWriteParam;->tileHeight:I

    .line 621
    iput p3, p0, Lae/javax/imageio/ImageWriteParam;->tileGridXOffset:I

    .line 622
    iput p4, p0, Lae/javax/imageio/ImageWriteParam;->tileGridYOffset:I

    .line 623
    return-void
.end method

.method public setTilingMode(I)V
    .locals 2
    .param p1, "mode"    # I

    .prologue
    .line 487
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteTiles()Z

    move-result v0

    if-nez v0, :cond_0

    .line 488
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "Tiling not supported!"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 490
    :cond_0
    if-ltz p1, :cond_1

    const/4 v0, 0x3

    if-le p1, v0, :cond_2

    .line 491
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Illegal value for mode!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 493
    :cond_2
    iput p1, p0, Lae/javax/imageio/ImageWriteParam;->tilingMode:I

    .line 494
    const/4 v0, 0x2

    if-ne p1, v0, :cond_3

    .line 495
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->unsetTiling()V

    .line 497
    :cond_3
    return-void
.end method

.method public unsetCompression()V
    .locals 2

    .prologue
    .line 1099
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteCompressed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 1100
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    .line 1101
    const-string v1, "Compression not supported"

    .line 1100
    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1103
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getCompressionMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 1104
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 1105
    const-string v1, "Compression mode not MODE_EXPLICIT!"

    .line 1104
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1107
    :cond_1
    const/4 v0, 0x0

    iput-object v0, p0, Lae/javax/imageio/ImageWriteParam;->compressionType:Ljava/lang/String;

    .line 1108
    const/high16 v0, 0x3f800000    # 1.0f

    iput v0, p0, Lae/javax/imageio/ImageWriteParam;->compressionQuality:F

    .line 1109
    return-void
.end method

.method public unsetTiling()V
    .locals 3

    .prologue
    const/4 v2, 0x0

    .line 642
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->canWriteTiles()Z

    move-result v0

    if-nez v0, :cond_0

    .line 643
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "Tiling not supported!"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 645
    :cond_0
    invoke-virtual {p0}, Lae/javax/imageio/ImageWriteParam;->getTilingMode()I

    move-result v0

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 646
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Tiling mode not MODE_EXPLICIT!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 648
    :cond_1
    iput-boolean v2, p0, Lae/javax/imageio/ImageWriteParam;->tilingSet:Z

    .line 649
    iput v2, p0, Lae/javax/imageio/ImageWriteParam;->tileWidth:I

    .line 650
    iput v2, p0, Lae/javax/imageio/ImageWriteParam;->tileHeight:I

    .line 651
    iput v2, p0, Lae/javax/imageio/ImageWriteParam;->tileGridXOffset:I

    .line 652
    iput v2, p0, Lae/javax/imageio/ImageWriteParam;->tileGridYOffset:I

    .line 653
    return-void
.end method

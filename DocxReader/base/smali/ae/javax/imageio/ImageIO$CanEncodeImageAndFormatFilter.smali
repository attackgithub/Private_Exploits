.class Lae/javax/imageio/ImageIO$CanEncodeImageAndFormatFilter;
.super Ljava/lang/Object;
.source "ImageIO.java"

# interfaces
.implements Lae/javax/imageio/spi/ServiceRegistry$Filter;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lae/javax/imageio/ImageIO;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x8
    name = "CanEncodeImageAndFormatFilter"
.end annotation


# instance fields
.field formatName:Ljava/lang/String;

.field type:Lae/javax/imageio/ImageTypeSpecifier;


# direct methods
.method public constructor <init>(Lae/javax/imageio/ImageTypeSpecifier;Ljava/lang/String;)V
    .locals 0
    .param p1, "type"    # Lae/javax/imageio/ImageTypeSpecifier;
    .param p2, "formatName"    # Ljava/lang/String;

    .prologue
    .line 575
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 577
    iput-object p1, p0, Lae/javax/imageio/ImageIO$CanEncodeImageAndFormatFilter;->type:Lae/javax/imageio/ImageTypeSpecifier;

    .line 578
    iput-object p2, p0, Lae/javax/imageio/ImageIO$CanEncodeImageAndFormatFilter;->formatName:Ljava/lang/String;

    .line 579
    return-void
.end method


# virtual methods
.method public filter(Ljava/lang/Object;)Z
    .locals 3
    .param p1, "elt"    # Ljava/lang/Object;

    .prologue
    .line 582
    move-object v0, p1

    check-cast v0, Lae/javax/imageio/spi/ImageWriterSpi;

    .line 583
    .local v0, "spi":Lae/javax/imageio/spi/ImageWriterSpi;
    invoke-virtual {v0}, Lae/javax/imageio/spi/ImageWriterSpi;->getFormatNames()[Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v1

    iget-object v2, p0, Lae/javax/imageio/ImageIO$CanEncodeImageAndFormatFilter;->formatName:Ljava/lang/String;

    invoke-interface {v1, v2}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 584
    iget-object v1, p0, Lae/javax/imageio/ImageIO$CanEncodeImageAndFormatFilter;->type:Lae/javax/imageio/ImageTypeSpecifier;

    invoke-virtual {v0, v1}, Lae/javax/imageio/spi/ImageWriterSpi;->canEncodeImage(Lae/javax/imageio/ImageTypeSpecifier;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 583
    const/4 v1, 0x1

    :goto_0
    return v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0
.end method

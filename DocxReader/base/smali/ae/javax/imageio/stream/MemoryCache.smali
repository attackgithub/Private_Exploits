.class Lae/javax/imageio/stream/MemoryCache;
.super Ljava/lang/Object;
.source "MemoryCache.java"


# static fields
.field private static final BUFFER_LENGTH:I = 0x2000


# instance fields
.field private cache:Ljava/util/ArrayList;

.field private cacheStart:J

.field private length:J


# direct methods
.method constructor <init>()V
    .locals 4

    .prologue
    const-wide/16 v2, 0x0

    .line 57
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 61
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lae/javax/imageio/stream/MemoryCache;->cache:Ljava/util/ArrayList;

    .line 63
    iput-wide v2, p0, Lae/javax/imageio/stream/MemoryCache;->cacheStart:J

    .line 68
    iput-wide v2, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    .line 57
    return-void
.end method

.method private getCacheBlock(J)[B
    .locals 5
    .param p1, "blockNum"    # J
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 71
    iget-wide v2, p0, Lae/javax/imageio/stream/MemoryCache;->cacheStart:J

    sub-long v0, p1, v2

    .line 72
    .local v0, "blockOffset":J
    const-wide/32 v2, 0x7fffffff

    cmp-long v2, v0, v2

    if-lez v2, :cond_0

    .line 75
    new-instance v2, Ljava/io/IOException;

    const-string v3, "Cache addressing limit exceeded!"

    invoke-direct {v2, v3}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 77
    :cond_0
    iget-object v2, p0, Lae/javax/imageio/stream/MemoryCache;->cache:Ljava/util/ArrayList;

    long-to-int v3, v0

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, [B

    return-object v2
.end method

.method private pad(J)V
    .locals 15
    .param p1, "pos"    # J
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 182
    iget-wide v10, p0, Lae/javax/imageio/stream/MemoryCache;->cacheStart:J

    iget-object v3, p0, Lae/javax/imageio/stream/MemoryCache;->cache:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    int-to-long v12, v3

    add-long/2addr v10, v12

    const-wide/16 v12, 0x1

    sub-long v0, v10, v12

    .line 183
    .local v0, "currIndex":J
    const-wide/16 v10, 0x2000

    div-long v6, p1, v10

    .line 184
    .local v6, "lastIndex":J
    sub-long v8, v6, v0

    .line 185
    .local v8, "numNewBuffers":J
    const-wide/16 v4, 0x0

    .local v4, "i":J
    :goto_0
    cmp-long v3, v4, v8

    if-ltz v3, :cond_0

    .line 192
    return-void

    .line 187
    :cond_0
    :try_start_0
    iget-object v3, p0, Lae/javax/imageio/stream/MemoryCache;->cache:Ljava/util/ArrayList;

    const/16 v10, 0x2000

    new-array v10, v10, [B

    invoke-virtual {v3, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Ljava/lang/OutOfMemoryError; {:try_start_0 .. :try_end_0} :catch_0

    .line 185
    const-wide/16 v10, 0x1

    add-long/2addr v4, v10

    goto :goto_0

    .line 188
    :catch_0
    move-exception v2

    .line 189
    .local v2, "e":Ljava/lang/OutOfMemoryError;
    new-instance v3, Ljava/io/IOException;

    const-string v10, "No memory left for cache!"

    invoke-direct {v3, v10}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v3
.end method


# virtual methods
.method public disposeBefore(J)V
    .locals 11
    .param p1, "pos"    # J

    .prologue
    .line 343
    const-wide/16 v6, 0x2000

    div-long v2, p1, v6

    .line 344
    .local v2, "index":J
    iget-wide v6, p0, Lae/javax/imageio/stream/MemoryCache;->cacheStart:J

    cmp-long v6, v2, v6

    if-gez v6, :cond_0

    .line 345
    new-instance v6, Ljava/lang/IndexOutOfBoundsException;

    const-string v7, "pos already disposed"

    invoke-direct {v6, v7}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 347
    :cond_0
    iget-wide v6, p0, Lae/javax/imageio/stream/MemoryCache;->cacheStart:J

    sub-long v6, v2, v6

    iget-object v8, p0, Lae/javax/imageio/stream/MemoryCache;->cache:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    int-to-long v8, v8

    invoke-static {v6, v7, v8, v9}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v4

    .line 348
    .local v4, "numBlocks":J
    const-wide/16 v0, 0x0

    .local v0, "i":J
    :goto_0
    cmp-long v6, v0, v4

    if-ltz v6, :cond_1

    .line 351
    iput-wide v2, p0, Lae/javax/imageio/stream/MemoryCache;->cacheStart:J

    .line 352
    return-void

    .line 349
    :cond_1
    iget-object v6, p0, Lae/javax/imageio/stream/MemoryCache;->cache:Ljava/util/ArrayList;

    const/4 v7, 0x0

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 348
    const-wide/16 v6, 0x1

    add-long/2addr v0, v6

    goto :goto_0
.end method

.method public getLength()J
    .locals 2

    .prologue
    .line 275
    iget-wide v0, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    return-wide v0
.end method

.method public loadFromStream(Ljava/io/InputStream;J)J
    .locals 12
    .param p1, "stream"    # Ljava/io/InputStream;
    .param p2, "pos"    # J
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 89
    iget-wide v8, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    cmp-long v7, p2, v8

    if-gez v7, :cond_1

    .line 133
    .end local p2    # "pos":J
    :cond_0
    :goto_0
    return-wide p2

    .line 93
    .restart local p2    # "pos":J
    :cond_1
    iget-wide v8, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    const-wide/16 v10, 0x2000

    rem-long/2addr v8, v10

    long-to-int v6, v8

    .line 94
    .local v6, "offset":I
    const/4 v0, 0x0

    .line 96
    .local v0, "buf":[B
    iget-wide v8, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    sub-long v4, p2, v8

    .line 97
    .local v4, "len":J
    if-eqz v6, :cond_2

    .line 98
    iget-wide v8, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    const-wide/16 v10, 0x2000

    div-long/2addr v8, v10

    invoke-direct {p0, v8, v9}, Lae/javax/imageio/stream/MemoryCache;->getCacheBlock(J)[B

    move-result-object v0

    .line 101
    :cond_2
    :goto_1
    const-wide/16 v8, 0x0

    cmp-long v7, v4, v8

    if-lez v7, :cond_0

    .line 102
    if-nez v0, :cond_3

    .line 104
    const/16 v7, 0x2000

    :try_start_0
    new-array v0, v7, [B
    :try_end_0
    .catch Ljava/lang/OutOfMemoryError; {:try_start_0 .. :try_end_0} :catch_0

    .line 108
    const/4 v6, 0x0

    .line 111
    :cond_3
    rsub-int v2, v6, 0x2000

    .line 112
    .local v2, "left":I
    int-to-long v8, v2

    invoke-static {v4, v5, v8, v9}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v8

    long-to-int v3, v8

    .line 113
    .local v3, "nbytes":I
    invoke-virtual {p1, v0, v6, v3}, Ljava/io/InputStream;->read([BII)I

    move-result v3

    .line 114
    const/4 v7, -0x1

    if-ne v3, v7, :cond_4

    .line 115
    iget-wide p2, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    goto :goto_0

    .line 105
    .end local v2    # "left":I
    .end local v3    # "nbytes":I
    :catch_0
    move-exception v1

    .line 106
    .local v1, "e":Ljava/lang/OutOfMemoryError;
    new-instance v7, Ljava/io/IOException;

    const-string v8, "No memory left for cache!"

    invoke-direct {v7, v8}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 118
    .end local v1    # "e":Ljava/lang/OutOfMemoryError;
    .restart local v2    # "left":I
    .restart local v3    # "nbytes":I
    :cond_4
    if-nez v6, :cond_5

    .line 119
    iget-object v7, p0, Lae/javax/imageio/stream/MemoryCache;->cache:Ljava/util/ArrayList;

    invoke-virtual {v7, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 122
    :cond_5
    int-to-long v8, v3

    sub-long/2addr v4, v8

    .line 123
    iget-wide v8, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    int-to-long v10, v3

    add-long/2addr v8, v10

    iput-wide v8, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    .line 124
    add-int/2addr v6, v3

    .line 126
    const/16 v7, 0x2000

    if-lt v6, v7, :cond_2

    .line 129
    const/4 v0, 0x0

    goto :goto_1
.end method

.method public read(J)I
    .locals 7
    .param p1, "pos"    # J
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    const-wide/16 v4, 0x2000

    const/4 v1, -0x1

    .line 284
    iget-wide v2, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    cmp-long v2, p1, v2

    if-ltz v2, :cond_1

    .line 293
    :cond_0
    :goto_0
    return v1

    .line 288
    :cond_1
    div-long v2, p1, v4

    invoke-direct {p0, v2, v3}, Lae/javax/imageio/stream/MemoryCache;->getCacheBlock(J)[B

    move-result-object v0

    .line 289
    .local v0, "buf":[B
    if-eqz v0, :cond_0

    .line 293
    rem-long v2, p1, v4

    long-to-int v1, v2

    aget-byte v1, v0, v1

    and-int/lit16 v1, v1, 0xff

    goto :goto_0
.end method

.method public read([BIIJ)V
    .locals 14
    .param p1, "b"    # [B
    .param p2, "off"    # I
    .param p3, "len"    # I
    .param p4, "pos"    # J
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 310
    if-nez p1, :cond_0

    .line 311
    new-instance v9, Ljava/lang/NullPointerException;

    const-string v10, "b == null!"

    invoke-direct {v9, v10}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v9

    .line 314
    :cond_0
    if-ltz p2, :cond_1

    if-ltz p3, :cond_1

    const-wide/16 v10, 0x0

    cmp-long v9, p4, v10

    if-ltz v9, :cond_1

    .line 315
    add-int v9, p2, p3

    array-length v10, p1

    if-gt v9, v10, :cond_1

    add-int v9, p2, p3

    if-gez v9, :cond_2

    .line 316
    :cond_1
    new-instance v9, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v9}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v9

    .line 318
    :cond_2
    move/from16 v0, p3

    int-to-long v10, v0

    add-long v10, v10, p4

    iget-wide v12, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    cmp-long v9, v10, v12

    if-lez v9, :cond_3

    .line 319
    new-instance v9, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v9}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v9

    .line 322
    :cond_3
    const-wide/16 v10, 0x2000

    div-long v4, p4, v10

    .line 323
    .local v4, "index":J
    move-wide/from16 v0, p4

    long-to-int v9, v0

    rem-int/lit16 v8, v9, 0x2000

    .local v8, "offset":I
    move-wide v6, v4

    .line 324
    .end local v4    # "index":J
    .local v6, "index":J
    :goto_0
    if-gtz p3, :cond_4

    .line 333
    return-void

    .line 325
    :cond_4
    rsub-int v9, v8, 0x2000

    move/from16 v0, p3

    invoke-static {v0, v9}, Ljava/lang/Math;->min(II)I

    move-result v3

    .line 326
    .local v3, "nbytes":I
    const-wide/16 v10, 0x1

    add-long v4, v6, v10

    .end local v6    # "index":J
    .restart local v4    # "index":J
    invoke-direct {p0, v6, v7}, Lae/javax/imageio/stream/MemoryCache;->getCacheBlock(J)[B

    move-result-object v2

    .line 327
    .local v2, "buf":[B
    move/from16 v0, p2

    invoke-static {v2, v8, p1, v0, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 329
    sub-int p3, p3, v3

    .line 330
    add-int p2, p2, v3

    .line 331
    const/4 v8, 0x0

    move-wide v6, v4

    .end local v4    # "index":J
    .restart local v6    # "index":J
    goto :goto_0
.end method

.method public reset()V
    .locals 4

    .prologue
    const-wide/16 v2, 0x0

    .line 360
    iget-object v0, p0, Lae/javax/imageio/stream/MemoryCache;->cache:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 361
    iput-wide v2, p0, Lae/javax/imageio/stream/MemoryCache;->cacheStart:J

    .line 362
    iput-wide v2, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    .line 363
    return-void
.end method

.method public write(IJ)V
    .locals 6
    .param p1, "b"    # I
    .param p2, "pos"    # J
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    const-wide/16 v4, 0x2000

    .line 253
    const-wide/16 v2, 0x0

    cmp-long v2, p2, v2

    if-gez v2, :cond_0

    .line 254
    new-instance v2, Ljava/lang/ArrayIndexOutOfBoundsException;

    const-string v3, "pos < 0"

    invoke-direct {v2, v3}, Ljava/lang/ArrayIndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 258
    :cond_0
    iget-wide v2, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    cmp-long v2, p2, v2

    if-ltz v2, :cond_1

    .line 259
    invoke-direct {p0, p2, p3}, Lae/javax/imageio/stream/MemoryCache;->pad(J)V

    .line 260
    const-wide/16 v2, 0x1

    add-long/2addr v2, p2

    iput-wide v2, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    .line 264
    :cond_1
    div-long v2, p2, v4

    invoke-direct {p0, v2, v3}, Lae/javax/imageio/stream/MemoryCache;->getCacheBlock(J)[B

    move-result-object v0

    .line 265
    .local v0, "buf":[B
    rem-long v2, p2, v4

    long-to-int v1, v2

    .line 266
    .local v1, "offset":I
    int-to-byte v2, p1

    aput-byte v2, v0, v1

    .line 267
    return-void
.end method

.method public write([BIIJ)V
    .locals 10
    .param p1, "b"    # [B
    .param p2, "off"    # I
    .param p3, "len"    # I
    .param p4, "pos"    # J
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 211
    if-nez p1, :cond_0

    .line 212
    new-instance v5, Ljava/lang/NullPointerException;

    const-string v6, "b == null!"

    invoke-direct {v5, v6}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 215
    :cond_0
    if-ltz p2, :cond_1

    if-ltz p3, :cond_1

    const-wide/16 v6, 0x0

    cmp-long v5, p4, v6

    if-ltz v5, :cond_1

    .line 216
    add-int v5, p2, p3

    array-length v6, p1

    if-gt v5, v6, :cond_1

    add-int v5, p2, p3

    if-gez v5, :cond_2

    .line 217
    :cond_1
    new-instance v5, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v5}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v5

    .line 221
    :cond_2
    int-to-long v6, p3

    add-long/2addr v6, p4

    const-wide/16 v8, 0x1

    sub-long v2, v6, v8

    .line 222
    .local v2, "lastPos":J
    iget-wide v6, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    cmp-long v5, v2, v6

    if-ltz v5, :cond_3

    .line 223
    invoke-direct {p0, v2, v3}, Lae/javax/imageio/stream/MemoryCache;->pad(J)V

    .line 224
    const-wide/16 v6, 0x1

    add-long/2addr v6, v2

    iput-wide v6, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    .line 228
    :cond_3
    const-wide/16 v6, 0x2000

    rem-long v6, p4, v6

    long-to-int v4, v6

    .line 229
    .local v4, "offset":I
    :goto_0
    if-gtz p3, :cond_4

    .line 239
    return-void

    .line 230
    :cond_4
    const-wide/16 v6, 0x2000

    div-long v6, p4, v6

    invoke-direct {p0, v6, v7}, Lae/javax/imageio/stream/MemoryCache;->getCacheBlock(J)[B

    move-result-object v0

    .line 231
    .local v0, "buf":[B
    rsub-int v5, v4, 0x2000

    invoke-static {p3, v5}, Ljava/lang/Math;->min(II)I

    move-result v1

    .line 232
    .local v1, "nbytes":I
    invoke-static {p1, p2, v0, v4, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 234
    int-to-long v6, v1

    add-long/2addr p4, v6

    .line 235
    add-int/2addr p2, v1

    .line 236
    sub-int/2addr p3, v1

    .line 237
    const/4 v4, 0x0

    goto :goto_0
.end method

.method public writeToStream(Ljava/io/OutputStream;JJ)V
    .locals 14
    .param p1, "stream"    # Ljava/io/OutputStream;
    .param p2, "pos"    # J
    .param p4, "len"    # J
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 149
    add-long v10, p2, p4

    iget-wide v12, p0, Lae/javax/imageio/stream/MemoryCache;->length:J

    cmp-long v9, v10, v12

    if-lez v9, :cond_0

    .line 150
    new-instance v9, Ljava/lang/IndexOutOfBoundsException;

    const-string v10, "Argument out of cache"

    invoke-direct {v9, v10}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v9

    .line 152
    :cond_0
    const-wide/16 v10, 0x0

    cmp-long v9, p2, v10

    if-ltz v9, :cond_1

    const-wide/16 v10, 0x0

    cmp-long v9, p4, v10

    if-gez v9, :cond_2

    .line 153
    :cond_1
    new-instance v9, Ljava/lang/IndexOutOfBoundsException;

    const-string v10, "Negative pos or len"

    invoke-direct {v9, v10}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v9

    .line 155
    :cond_2
    const-wide/16 v10, 0x0

    cmp-long v9, p4, v10

    if-nez v9, :cond_4

    .line 176
    :cond_3
    return-void

    .line 159
    :cond_4
    const-wide/16 v10, 0x2000

    div-long v4, p2, v10

    .line 160
    .local v4, "bufIndex":J
    iget-wide v10, p0, Lae/javax/imageio/stream/MemoryCache;->cacheStart:J

    cmp-long v9, v4, v10

    if-gez v9, :cond_5

    .line 161
    new-instance v9, Ljava/lang/IndexOutOfBoundsException;

    const-string v10, "pos already disposed"

    invoke-direct {v9, v10}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v9

    .line 163
    :cond_5
    const-wide/16 v10, 0x2000

    rem-long v10, p2, v10

    long-to-int v8, v10

    .line 165
    .local v8, "offset":I
    const-wide/16 v10, 0x1

    add-long v6, v4, v10

    .end local v4    # "bufIndex":J
    .local v6, "bufIndex":J
    invoke-direct {p0, v4, v5}, Lae/javax/imageio/stream/MemoryCache;->getCacheBlock(J)[B

    move-result-object v2

    .line 166
    .local v2, "buf":[B
    :goto_0
    const-wide/16 v10, 0x0

    cmp-long v9, p4, v10

    if-lez v9, :cond_3

    .line 167
    if-nez v2, :cond_6

    .line 168
    const-wide/16 v10, 0x1

    add-long v4, v6, v10

    .end local v6    # "bufIndex":J
    .restart local v4    # "bufIndex":J
    invoke-direct {p0, v6, v7}, Lae/javax/imageio/stream/MemoryCache;->getCacheBlock(J)[B

    move-result-object v2

    .line 169
    const/4 v8, 0x0

    .line 171
    :goto_1
    rsub-int v9, v8, 0x2000

    int-to-long v10, v9

    move-wide/from16 v0, p4

    invoke-static {v0, v1, v10, v11}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v10

    long-to-int v3, v10

    .line 172
    .local v3, "nbytes":I
    invoke-virtual {p1, v2, v8, v3}, Ljava/io/OutputStream;->write([BII)V

    .line 173
    const/4 v2, 0x0

    .line 174
    int-to-long v10, v3

    sub-long p4, p4, v10

    move-wide v6, v4

    .end local v4    # "bufIndex":J
    .restart local v6    # "bufIndex":J
    goto :goto_0

    .end local v3    # "nbytes":I
    :cond_6
    move-wide v4, v6

    .end local v6    # "bufIndex":J
    .restart local v4    # "bufIndex":J
    goto :goto_1
.end method

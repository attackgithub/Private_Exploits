.class public Lorg/apache/commons/io/FileCleaner;
.super Ljava/lang/Object;
.source "FileCleaner.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lorg/apache/commons/io/FileCleaner$Tracker;,
        Lorg/apache/commons/io/FileCleaner$Reaper;
    }
.end annotation


# static fields
.field static volatile exitWhenFinished:Z

.field static q:Ljava/lang/ref/ReferenceQueue;

.field static reaper:Ljava/lang/Thread;

.field static trackers:Ljava/util/Collection;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .prologue
    .line 48
    new-instance v0, Ljava/lang/ref/ReferenceQueue;

    invoke-direct {v0}, Ljava/lang/ref/ReferenceQueue;-><init>()V

    sput-object v0, Lorg/apache/commons/io/FileCleaner;->q:Ljava/lang/ref/ReferenceQueue;

    .line 52
    new-instance v0, Ljava/util/Vector;

    invoke-direct {v0}, Ljava/util/Vector;-><init>()V

    sput-object v0, Lorg/apache/commons/io/FileCleaner;->trackers:Ljava/util/Collection;

    .line 56
    const/4 v0, 0x0

    sput-boolean v0, Lorg/apache/commons/io/FileCleaner;->exitWhenFinished:Z

    .line 48
    return-void
.end method

.method public constructor <init>()V
    .locals 0

    .prologue
    .line 43
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method private static declared-synchronized addTracker(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V
    .locals 4
    .param p0, "path"    # Ljava/lang/String;
    .param p1, "marker"    # Ljava/lang/Object;
    .param p2, "deleteStrategy"    # Lorg/apache/commons/io/FileDeleteStrategy;

    .prologue
    .line 132
    const-class v1, Lorg/apache/commons/io/FileCleaner;

    monitor-enter v1

    :try_start_0
    sget-boolean v0, Lorg/apache/commons/io/FileCleaner;->exitWhenFinished:Z

    if-eqz v0, :cond_0

    .line 133
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v2, "No new trackers can be added once exitWhenFinished() is called"

    invoke-direct {v0, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 132
    :catchall_0
    move-exception v0

    monitor-exit v1

    throw v0

    .line 135
    :cond_0
    :try_start_1
    sget-object v0, Lorg/apache/commons/io/FileCleaner;->reaper:Ljava/lang/Thread;

    if-nez v0, :cond_1

    .line 136
    new-instance v0, Lorg/apache/commons/io/FileCleaner$Reaper;

    invoke-direct {v0}, Lorg/apache/commons/io/FileCleaner$Reaper;-><init>()V

    sput-object v0, Lorg/apache/commons/io/FileCleaner;->reaper:Ljava/lang/Thread;

    .line 137
    sget-object v0, Lorg/apache/commons/io/FileCleaner;->reaper:Ljava/lang/Thread;

    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    .line 139
    :cond_1
    sget-object v0, Lorg/apache/commons/io/FileCleaner;->trackers:Ljava/util/Collection;

    new-instance v2, Lorg/apache/commons/io/FileCleaner$Tracker;

    sget-object v3, Lorg/apache/commons/io/FileCleaner;->q:Ljava/lang/ref/ReferenceQueue;

    invoke-direct {v2, p0, p2, p1, v3}, Lorg/apache/commons/io/FileCleaner$Tracker;-><init>(Ljava/lang/String;Lorg/apache/commons/io/FileDeleteStrategy;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V

    invoke-interface {v0, v2}, Ljava/util/Collection;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 140
    monitor-exit v1

    return-void
.end method

.method public static declared-synchronized exitWhenFinished()V
    .locals 3

    .prologue
    .line 176
    const-class v1, Lorg/apache/commons/io/FileCleaner;

    monitor-enter v1

    const/4 v0, 0x1

    :try_start_0
    sput-boolean v0, Lorg/apache/commons/io/FileCleaner;->exitWhenFinished:Z

    .line 177
    sget-object v0, Lorg/apache/commons/io/FileCleaner;->reaper:Ljava/lang/Thread;

    if-eqz v0, :cond_0

    .line 178
    sget-object v2, Lorg/apache/commons/io/FileCleaner;->reaper:Ljava/lang/Thread;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 179
    :try_start_1
    sget-object v0, Lorg/apache/commons/io/FileCleaner;->reaper:Ljava/lang/Thread;

    invoke-virtual {v0}, Ljava/lang/Thread;->interrupt()V

    .line 180
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 182
    :cond_0
    monitor-exit v1

    return-void

    .line 180
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit v2

    throw v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 176
    :catchall_1
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public static getTrackCount()I
    .locals 1

    .prologue
    .line 150
    sget-object v0, Lorg/apache/commons/io/FileCleaner;->trackers:Ljava/util/Collection;

    invoke-interface {v0}, Ljava/util/Collection;->size()I

    move-result v0

    return v0
.end method

.method public static track(Ljava/io/File;Ljava/lang/Object;)V
    .locals 1
    .param p0, "file"    # Ljava/io/File;
    .param p1, "marker"    # Ljava/lang/Object;

    .prologue
    .line 73
    const/4 v0, 0x0

    check-cast v0, Lorg/apache/commons/io/FileDeleteStrategy;

    invoke-static {p0, p1, v0}, Lorg/apache/commons/io/FileCleaner;->track(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V

    .line 74
    return-void
.end method

.method public static track(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V
    .locals 2
    .param p0, "file"    # Ljava/io/File;
    .param p1, "marker"    # Ljava/lang/Object;
    .param p2, "deleteStrategy"    # Lorg/apache/commons/io/FileDeleteStrategy;

    .prologue
    .line 87
    if-nez p0, :cond_0

    .line 88
    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "The file must not be null"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 90
    :cond_0
    invoke-virtual {p0}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0, p1, p2}, Lorg/apache/commons/io/FileCleaner;->addTracker(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V

    .line 91
    return-void
.end method

.method public static track(Ljava/lang/String;Ljava/lang/Object;)V
    .locals 1
    .param p0, "path"    # Ljava/lang/String;
    .param p1, "marker"    # Ljava/lang/Object;

    .prologue
    .line 103
    const/4 v0, 0x0

    check-cast v0, Lorg/apache/commons/io/FileDeleteStrategy;

    invoke-static {p0, p1, v0}, Lorg/apache/commons/io/FileCleaner;->track(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V

    .line 104
    return-void
.end method

.method public static track(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V
    .locals 2
    .param p0, "path"    # Ljava/lang/String;
    .param p1, "marker"    # Ljava/lang/Object;
    .param p2, "deleteStrategy"    # Lorg/apache/commons/io/FileDeleteStrategy;

    .prologue
    .line 117
    if-nez p0, :cond_0

    .line 118
    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "The path must not be null"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 120
    :cond_0
    invoke-static {p0, p1, p2}, Lorg/apache/commons/io/FileCleaner;->addTracker(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V

    .line 121
    return-void
.end method

.class public Lorg/apache/xmlgraphics/util/dijkstra/DefaultEdgeDirectory;
.super Ljava/lang/Object;
.source "DefaultEdgeDirectory.java"

# interfaces
.implements Lorg/apache/xmlgraphics/util/dijkstra/EdgeDirectory;


# instance fields
.field private edges:Ljava/util/Map;


# direct methods
.method public constructor <init>()V
    .locals 1

    .prologue
    .line 29
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 32
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lorg/apache/xmlgraphics/util/dijkstra/DefaultEdgeDirectory;->edges:Ljava/util/Map;

    .line 29
    return-void
.end method


# virtual methods
.method public addEdge(Lorg/apache/xmlgraphics/util/dijkstra/Edge;)V
    .locals 3
    .param p1, "edge"    # Lorg/apache/xmlgraphics/util/dijkstra/Edge;

    .prologue
    .line 40
    iget-object v1, p0, Lorg/apache/xmlgraphics/util/dijkstra/DefaultEdgeDirectory;->edges:Ljava/util/Map;

    invoke-interface {p1}, Lorg/apache/xmlgraphics/util/dijkstra/Edge;->getStart()Lorg/apache/xmlgraphics/util/dijkstra/Vertex;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map;

    .line 41
    .local v0, "directEdges":Ljava/util/Map;
    if-nez v0, :cond_0

    .line 42
    new-instance v0, Ljava/util/HashMap;

    .end local v0    # "directEdges":Ljava/util/Map;
    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    .line 43
    .restart local v0    # "directEdges":Ljava/util/Map;
    iget-object v1, p0, Lorg/apache/xmlgraphics/util/dijkstra/DefaultEdgeDirectory;->edges:Ljava/util/Map;

    invoke-interface {p1}, Lorg/apache/xmlgraphics/util/dijkstra/Edge;->getStart()Lorg/apache/xmlgraphics/util/dijkstra/Vertex;

    move-result-object v2

    invoke-interface {v1, v2, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 45
    :cond_0
    invoke-interface {p1}, Lorg/apache/xmlgraphics/util/dijkstra/Edge;->getEnd()Lorg/apache/xmlgraphics/util/dijkstra/Vertex;

    move-result-object v1

    invoke-interface {v0, v1, p1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 46
    return-void
.end method

.method public getBestEdge(Lorg/apache/xmlgraphics/util/dijkstra/Vertex;Lorg/apache/xmlgraphics/util/dijkstra/Vertex;)Lorg/apache/xmlgraphics/util/dijkstra/Edge;
    .locals 5
    .param p1, "start"    # Lorg/apache/xmlgraphics/util/dijkstra/Vertex;
    .param p2, "end"    # Lorg/apache/xmlgraphics/util/dijkstra/Vertex;

    .prologue
    .line 95
    const/4 v0, 0x0

    .line 96
    .local v0, "best":Lorg/apache/xmlgraphics/util/dijkstra/Edge;
    invoke-virtual {p0, p1}, Lorg/apache/xmlgraphics/util/dijkstra/DefaultEdgeDirectory;->getEdges(Lorg/apache/xmlgraphics/util/dijkstra/Vertex;)Ljava/util/Iterator;

    move-result-object v2

    .line 97
    .local v2, "iter":Ljava/util/Iterator;
    :cond_0
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-nez v3, :cond_1

    .line 105
    return-object v0

    .line 98
    :cond_1
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lorg/apache/xmlgraphics/util/dijkstra/Edge;

    .line 99
    .local v1, "edge":Lorg/apache/xmlgraphics/util/dijkstra/Edge;
    invoke-interface {v1}, Lorg/apache/xmlgraphics/util/dijkstra/Edge;->getEnd()Lorg/apache/xmlgraphics/util/dijkstra/Vertex;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 100
    if-eqz v0, :cond_2

    invoke-interface {v1}, Lorg/apache/xmlgraphics/util/dijkstra/Edge;->getPenalty()I

    move-result v3

    invoke-interface {v0}, Lorg/apache/xmlgraphics/util/dijkstra/Edge;->getPenalty()I

    move-result v4

    if-ge v3, v4, :cond_0

    .line 101
    :cond_2
    move-object v0, v1

    goto :goto_0
.end method

.method public getDestinations(Lorg/apache/xmlgraphics/util/dijkstra/Vertex;)Ljava/util/Iterator;
    .locals 3
    .param p1, "origin"    # Lorg/apache/xmlgraphics/util/dijkstra/Vertex;

    .prologue
    .line 66
    iget-object v2, p0, Lorg/apache/xmlgraphics/util/dijkstra/DefaultEdgeDirectory;->edges:Ljava/util/Map;

    invoke-interface {v2, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map;

    .line 67
    .local v0, "directRoutes":Ljava/util/Map;
    if-eqz v0, :cond_0

    .line 68
    invoke-interface {v0}, Ljava/util/Map;->keySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 71
    :goto_0
    return-object v1

    :cond_0
    sget-object v2, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    invoke-interface {v2}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    goto :goto_0
.end method

.method public getEdges(Lorg/apache/xmlgraphics/util/dijkstra/Vertex;)Ljava/util/Iterator;
    .locals 3
    .param p1, "origin"    # Lorg/apache/xmlgraphics/util/dijkstra/Vertex;

    .prologue
    .line 80
    iget-object v2, p0, Lorg/apache/xmlgraphics/util/dijkstra/DefaultEdgeDirectory;->edges:Ljava/util/Map;

    invoke-interface {v2, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map;

    .line 81
    .local v0, "directRoutes":Ljava/util/Map;
    if-eqz v0, :cond_0

    .line 82
    invoke-interface {v0}, Ljava/util/Map;->values()Ljava/util/Collection;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 85
    :goto_0
    return-object v1

    :cond_0
    sget-object v2, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    invoke-interface {v2}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    goto :goto_0
.end method

.method public getPenalty(Lorg/apache/xmlgraphics/util/dijkstra/Vertex;Lorg/apache/xmlgraphics/util/dijkstra/Vertex;)I
    .locals 5
    .param p1, "start"    # Lorg/apache/xmlgraphics/util/dijkstra/Vertex;
    .param p2, "end"    # Lorg/apache/xmlgraphics/util/dijkstra/Vertex;

    .prologue
    .line 50
    iget-object v3, p0, Lorg/apache/xmlgraphics/util/dijkstra/DefaultEdgeDirectory;->edges:Ljava/util/Map;

    invoke-interface {v3, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map;

    .line 51
    .local v0, "edgeMap":Ljava/util/Map;
    if-eqz v0, :cond_0

    .line 52
    invoke-interface {v0, p2}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lorg/apache/xmlgraphics/util/dijkstra/Edge;

    .line 53
    .local v2, "route":Lorg/apache/xmlgraphics/util/dijkstra/Edge;
    if-eqz v2, :cond_0

    .line 54
    invoke-interface {v2}, Lorg/apache/xmlgraphics/util/dijkstra/Edge;->getPenalty()I

    move-result v1

    .line 55
    .local v1, "penalty":I
    if-gez v1, :cond_1

    .line 56
    new-instance v3, Ljava/lang/IllegalStateException;

    const-string v4, "Penalty must not be negative"

    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 61
    .end local v1    # "penalty":I
    .end local v2    # "route":Lorg/apache/xmlgraphics/util/dijkstra/Edge;
    :cond_0
    const/4 v1, 0x0

    :cond_1
    return v1
.end method

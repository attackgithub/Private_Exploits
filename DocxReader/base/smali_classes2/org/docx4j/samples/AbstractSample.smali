.class public abstract Lorg/docx4j/samples/AbstractSample;
.super Ljava/lang/Object;
.source "AbstractSample.java"


# static fields
.field protected static inputfilepath:Ljava/lang/String;

.field protected static outputfilepath:Ljava/lang/String;


# direct methods
.method public constructor <init>()V
    .locals 0

    .prologue
    .line 3
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method protected static getInputFilePath([Ljava/lang/String;)V
    .locals 2
    .param p0, "args"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/IllegalArgumentException;
        }
    .end annotation

    .prologue
    .line 10
    array-length v0, p0

    if-nez v0, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Input file arg missing"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12
    :cond_0
    const/4 v0, 0x0

    aget-object v0, p0, v0

    sput-object v0, Lorg/docx4j/samples/AbstractSample;->inputfilepath:Ljava/lang/String;

    .line 13
    return-void
.end method

.method protected static getOutputFilePath([Ljava/lang/String;)V
    .locals 2
    .param p0, "args"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/IllegalArgumentException;
        }
    .end annotation

    .prologue
    .line 17
    array-length v0, p0

    const/4 v1, 0x2

    if-ge v0, v1, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Output file arg missing"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 19
    :cond_0
    const/4 v0, 0x0

    aget-object v0, p0, v0

    sput-object v0, Lorg/docx4j/samples/AbstractSample;->outputfilepath:Ljava/lang/String;

    .line 20
    return-void
.end method

.class public Lorg/docx4j/utils/Log4jConfigurator;
.super Ljava/lang/Object;
.source "Log4jConfigurator.java"


# direct methods
.method public constructor <init>()V
    .locals 0

    .prologue
    .line 12
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static declared-synchronized configure()V
    .locals 6

    .prologue
    .line 16
    const-class v3, Lorg/docx4j/utils/Log4jConfigurator;

    monitor-enter v3

    :try_start_0
    invoke-static {}, Lorg/docx4j/Docx4jProperties;->getProperties()Ljava/util/Properties;

    move-result-object v2

    const-string v4, "docx4j.Log4j.Configurator.disabled"

    const-string v5, "false"

    invoke-virtual {v2, v4, v5}, Ljava/util/Properties;->getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Ljava/lang/Boolean;->parseBoolean(Ljava/lang/String;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    .line 18
    .local v0, "disabled":Z
    if-eqz v0, :cond_1

    .line 36
    :cond_0
    :goto_0
    monitor-exit v3

    return-void

    .line 20
    :cond_1
    :try_start_1
    invoke-static {}, Lorg/docx4j/utils/Log4jConfigurator;->isConfigured()Z

    move-result v2

    if-nez v2, :cond_0

    .line 22
    invoke-static {}, Lorg/apache/log4j/BasicConfigurator;->configure()V

    .line 26
    invoke-static {}, Lorg/apache/log4j/Logger;->getRootLogger()Lorg/apache/log4j/Logger;

    move-result-object v2

    sget-object v4, Lorg/apache/log4j/Level;->INFO:Lorg/apache/log4j/Level;

    invoke-virtual {v2, v4}, Lorg/apache/log4j/Logger;->setLevel(Lorg/apache/log4j/Level;)V

    .line 27
    const-class v2, Lorg/docx4j/utils/Log4jConfigurator;

    invoke-static {v2}, Lorg/apache/log4j/Logger;->getLogger(Ljava/lang/Class;)Lorg/apache/log4j/Logger;

    move-result-object v1

    .line 28
    .local v1, "log":Lorg/apache/log4j/Logger;
    const-string v2, "Since your log4j configuration (if any) was not found, docx4j has configured log4j automatically."

    invoke-virtual {v1, v2}, Lorg/apache/log4j/Logger;->info(Ljava/lang/Object;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 16
    .end local v1    # "log":Lorg/apache/log4j/Logger;
    :catchall_0
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method private static isConfigured()Z
    .locals 5

    .prologue
    const/4 v3, 0x1

    .line 43
    invoke-static {}, Lorg/apache/log4j/Logger;->getRootLogger()Lorg/apache/log4j/Logger;

    move-result-object v4

    invoke-virtual {v4}, Lorg/apache/log4j/Logger;->getAllAppenders()Ljava/util/Enumeration;

    move-result-object v0

    .line 44
    .local v0, "appenders":Ljava/util/Enumeration;
    invoke-interface {v0}, Ljava/util/Enumeration;->hasMoreElements()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 55
    :goto_0
    return v3

    .line 48
    :cond_0
    invoke-static {}, Lorg/apache/log4j/LogManager;->getCurrentLoggers()Ljava/util/Enumeration;

    move-result-object v2

    .line 49
    .local v2, "loggers":Ljava/util/Enumeration;
    :cond_1
    invoke-interface {v2}, Ljava/util/Enumeration;->hasMoreElements()Z

    move-result v4

    if-eqz v4, :cond_2

    .line 50
    invoke-interface {v2}, Ljava/util/Enumeration;->nextElement()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lorg/apache/log4j/Logger;

    .line 51
    .local v1, "c":Lorg/apache/log4j/Logger;
    invoke-virtual {v1}, Lorg/apache/log4j/Logger;->getAllAppenders()Ljava/util/Enumeration;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Enumeration;->hasMoreElements()Z

    move-result v4

    if-eqz v4, :cond_1

    goto :goto_0

    .line 55
    .end local v1    # "c":Lorg/apache/log4j/Logger;
    :cond_2
    const/4 v3, 0x0

    goto :goto_0
.end method

.class public abstract Lorg/docx4j/fonts/fop/fonts/FontLoader;
.super Ljava/lang/Object;
.source "FontLoader.java"


# static fields
.field protected static log:Lorg/apache/commons/logging/Log;


# instance fields
.field protected embedded:Z

.field protected fontFileURI:Ljava/lang/String;

.field protected loaded:Z

.field protected resolver:Lorg/docx4j/fonts/fop/fonts/FontResolver;

.field protected returnFont:Lorg/docx4j/fonts/fop/fonts/CustomFont;

.field protected useKerning:Z


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .prologue
    .line 49
    const-class v0, Lorg/docx4j/fonts/fop/fonts/FontLoader;

    invoke-static {v0}, Lorg/apache/commons/logging/LogFactory;->getLog(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;

    move-result-object v0

    sput-object v0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->log:Lorg/apache/commons/logging/Log;

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;ZZLorg/docx4j/fonts/fop/fonts/FontResolver;)V
    .locals 2
    .param p1, "fontFileURI"    # Ljava/lang/String;
    .param p2, "embedded"    # Z
    .param p3, "useKerning"    # Z
    .param p4, "resolver"    # Lorg/docx4j/fonts/fop/fonts/FontResolver;

    .prologue
    const/4 v1, 0x1

    const/4 v0, 0x0

    .line 73
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 52
    iput-object v0, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->fontFileURI:Ljava/lang/String;

    .line 54
    iput-object v0, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->resolver:Lorg/docx4j/fonts/fop/fonts/FontResolver;

    .line 56
    iput-object v0, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->returnFont:Lorg/docx4j/fonts/fop/fonts/CustomFont;

    .line 59
    const/4 v0, 0x0

    iput-boolean v0, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->loaded:Z

    .line 61
    iput-boolean v1, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->embedded:Z

    .line 63
    iput-boolean v1, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->useKerning:Z

    .line 74
    iput-object p1, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->fontFileURI:Ljava/lang/String;

    .line 75
    iput-boolean p2, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->embedded:Z

    .line 76
    iput-boolean p3, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->useKerning:Z

    .line 77
    iput-object p4, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->resolver:Lorg/docx4j/fonts/fop/fonts/FontResolver;

    .line 78
    return-void
.end method

.method private static isType1(Ljava/lang/String;)Z
    .locals 2
    .param p0, "fontURI"    # Ljava/lang/String;

    .prologue
    .line 81
    invoke-virtual {p0}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v0

    const-string v1, ".pfb"

    invoke-virtual {v0, v1}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    move-result v0

    return v0
.end method

.method public static loadFont(Ljava/io/File;Ljava/lang/String;ZLorg/docx4j/fonts/fop/fonts/EncodingMode;Lorg/docx4j/fonts/fop/fonts/FontResolver;)Lorg/docx4j/fonts/fop/fonts/CustomFont;
    .locals 6
    .param p0, "fontFile"    # Ljava/io/File;
    .param p1, "subFontName"    # Ljava/lang/String;
    .param p2, "embedded"    # Z
    .param p3, "encodingMode"    # Lorg/docx4j/fonts/fop/fonts/EncodingMode;
    .param p4, "resolver"    # Lorg/docx4j/fonts/fop/fonts/FontResolver;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 96
    invoke-virtual {p0}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v0

    const/4 v4, 0x1

    move-object v1, p1

    move v2, p2

    move-object v3, p3

    move-object v5, p4

    invoke-static/range {v0 .. v5}, Lorg/docx4j/fonts/fop/fonts/FontLoader;->loadFont(Ljava/lang/String;Ljava/lang/String;ZLorg/docx4j/fonts/fop/fonts/EncodingMode;ZLorg/docx4j/fonts/fop/fonts/FontResolver;)Lorg/docx4j/fonts/fop/fonts/CustomFont;

    move-result-object v0

    return-object v0
.end method

.method public static loadFont(Ljava/lang/String;Ljava/lang/String;ZLorg/docx4j/fonts/fop/fonts/EncodingMode;ZLorg/docx4j/fonts/fop/fonts/FontResolver;)Lorg/docx4j/fonts/fop/fonts/CustomFont;
    .locals 8
    .param p0, "fontFileURI"    # Ljava/lang/String;
    .param p1, "subFontName"    # Ljava/lang/String;
    .param p2, "embedded"    # Z
    .param p3, "encodingMode"    # Lorg/docx4j/fonts/fop/fonts/EncodingMode;
    .param p4, "useKerning"    # Z
    .param p5, "resolver"    # Lorg/docx4j/fonts/fop/fonts/FontResolver;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 132
    invoke-virtual {p0}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object p0

    .line 133
    invoke-static {p0}, Lorg/docx4j/fonts/fop/fonts/FontLoader;->isType1(Ljava/lang/String;)Z

    move-result v7

    .line 135
    .local v7, "type1":Z
    if-eqz v7, :cond_1

    .line 136
    sget-object v1, Lorg/docx4j/fonts/fop/fonts/EncodingMode;->CID:Lorg/docx4j/fonts/fop/fonts/EncodingMode;

    if-ne p3, v1, :cond_0

    .line 137
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "CID encoding mode not supported for Type 1 fonts"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 140
    :cond_0
    new-instance v0, Lorg/docx4j/fonts/fop/fonts/type1/Type1FontLoader;

    invoke-direct {v0, p0, p2, p4, p5}, Lorg/docx4j/fonts/fop/fonts/type1/Type1FontLoader;-><init>(Ljava/lang/String;ZZLorg/docx4j/fonts/fop/fonts/FontResolver;)V

    .line 145
    .local v0, "loader":Lorg/docx4j/fonts/fop/fonts/FontLoader;
    :goto_0
    invoke-virtual {v0}, Lorg/docx4j/fonts/fop/fonts/FontLoader;->getFont()Lorg/docx4j/fonts/fop/fonts/CustomFont;

    move-result-object v1

    return-object v1

    .line 142
    .end local v0    # "loader":Lorg/docx4j/fonts/fop/fonts/FontLoader;
    :cond_1
    new-instance v0, Lorg/docx4j/fonts/fop/fonts/truetype/TTFFontLoader;

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move-object v4, p3

    move v5, p4

    move-object v6, p5

    invoke-direct/range {v0 .. v6}, Lorg/docx4j/fonts/fop/fonts/truetype/TTFFontLoader;-><init>(Ljava/lang/String;Ljava/lang/String;ZLorg/docx4j/fonts/fop/fonts/EncodingMode;ZLorg/docx4j/fonts/fop/fonts/FontResolver;)V

    .restart local v0    # "loader":Lorg/docx4j/fonts/fop/fonts/FontLoader;
    goto :goto_0
.end method

.method public static loadFont(Ljava/net/URL;Ljava/lang/String;ZLorg/docx4j/fonts/fop/fonts/EncodingMode;Lorg/docx4j/fonts/fop/fonts/FontResolver;)Lorg/docx4j/fonts/fop/fonts/CustomFont;
    .locals 6
    .param p0, "fontUrl"    # Ljava/net/URL;
    .param p1, "subFontName"    # Ljava/lang/String;
    .param p2, "embedded"    # Z
    .param p3, "encodingMode"    # Lorg/docx4j/fonts/fop/fonts/EncodingMode;
    .param p4, "resolver"    # Lorg/docx4j/fonts/fop/fonts/FontResolver;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 113
    invoke-virtual {p0}, Ljava/net/URL;->toExternalForm()Ljava/lang/String;

    move-result-object v0

    const/4 v4, 0x1

    move-object v1, p1

    move v2, p2

    move-object v3, p3

    move-object v5, p4

    invoke-static/range {v0 .. v5}, Lorg/docx4j/fonts/fop/fonts/FontLoader;->loadFont(Ljava/lang/String;Ljava/lang/String;ZLorg/docx4j/fonts/fop/fonts/EncodingMode;ZLorg/docx4j/fonts/fop/fonts/FontResolver;)Lorg/docx4j/fonts/fop/fonts/CustomFont;

    move-result-object v0

    return-object v0
.end method

.method public static openFontUri(Lorg/docx4j/fonts/fop/fonts/FontResolver;Ljava/lang/String;)Ljava/io/InputStream;
    .locals 5
    .param p0, "resolver"    # Lorg/docx4j/fonts/fop/fonts/FontResolver;
    .param p1, "uri"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Ljava/net/MalformedURLException;
        }
    .end annotation

    .prologue
    .line 158
    const/4 v1, 0x0

    .line 159
    .local v1, "in":Ljava/io/InputStream;
    if-eqz p0, :cond_3

    .line 160
    invoke-interface {p0, p1}, Lorg/docx4j/fonts/fop/fonts/FontResolver;->resolve(Ljava/lang/String;)Ljavax/xml/transform/Source;

    move-result-object v2

    .line 161
    .local v2, "source":Ljavax/xml/transform/Source;
    if-nez v2, :cond_0

    .line 162
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Cannot load font: failed to create Source for font file "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 164
    .local v0, "err":Ljava/lang/String;
    new-instance v3, Ljava/io/IOException;

    invoke-direct {v3, v0}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 166
    .end local v0    # "err":Ljava/lang/String;
    :cond_0
    instance-of v3, v2, Ljavax/xml/transform/stream/StreamSource;

    if-eqz v3, :cond_1

    move-object v3, v2

    .line 167
    check-cast v3, Ljavax/xml/transform/stream/StreamSource;

    invoke-virtual {v3}, Ljavax/xml/transform/stream/StreamSource;->getInputStream()Ljava/io/InputStream;

    move-result-object v1

    .line 169
    :cond_1
    if-nez v1, :cond_2

    invoke-interface {v2}, Ljavax/xml/transform/Source;->getSystemId()Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_2

    .line 170
    new-instance v3, Ljava/net/URL;

    invoke-interface {v2}, Ljavax/xml/transform/Source;->getSystemId()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/net/URL;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3}, Ljava/net/URL;->openStream()Ljava/io/InputStream;

    move-result-object v1

    .line 172
    :cond_2
    if-nez v1, :cond_4

    .line 173
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Cannot load font: failed to create InputStream from Source for font file "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 175
    .restart local v0    # "err":Ljava/lang/String;
    new-instance v3, Ljava/io/IOException;

    invoke-direct {v3, v0}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 178
    .end local v0    # "err":Ljava/lang/String;
    .end local v2    # "source":Ljavax/xml/transform/Source;
    :cond_3
    new-instance v3, Ljava/net/URL;

    invoke-direct {v3, p1}, Ljava/net/URL;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3}, Ljava/net/URL;->openStream()Ljava/io/InputStream;

    move-result-object v1

    .line 180
    :cond_4
    return-object v1
.end method


# virtual methods
.method public getFont()Lorg/docx4j/fonts/fop/fonts/CustomFont;
    .locals 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 195
    iget-boolean v0, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->loaded:Z

    if-nez v0, :cond_0

    .line 196
    invoke-virtual {p0}, Lorg/docx4j/fonts/fop/fonts/FontLoader;->read()V

    .line 198
    :cond_0
    iget-object v0, p0, Lorg/docx4j/fonts/fop/fonts/FontLoader;->returnFont:Lorg/docx4j/fonts/fop/fonts/CustomFont;

    return-object v0
.end method

.method protected abstract read()V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation
.end method

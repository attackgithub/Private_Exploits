.class public abstract Lorg/eclipse/compare/internal/LCS;
.super Ljava/lang/Object;
.source "LCS.java"


# instance fields
.field private length:I

.field private max_differences:I


# direct methods
.method public constructor <init>()V
    .locals 0

    .prologue
    .line 15
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method private static findMostProgress(III[[I)[I
    .locals 15
    .param p0, "M"    # I
    .param p1, "N"    # I
    .param p2, "limit"    # I
    .param p3, "V"    # [[I

    .prologue
    .line 370
    sub-int v3, p1, p0

    .line 373
    .local v3, "delta":I
    and-int/lit8 v13, p0, 0x1

    and-int/lit8 v14, p2, 0x1

    if-ne v13, v14, :cond_1

    .line 374
    neg-int v13, p0

    move/from16 v0, p2

    neg-int v14, v0

    invoke-static {v13, v14}, Ljava/lang/Math;->max(II)I

    move-result v5

    .line 379
    .local v5, "forward_start_diag":I
    :goto_0
    invoke-static/range {p1 .. p2}, Ljava/lang/Math;->min(II)I

    move-result v4

    .line 382
    .local v4, "forward_end_diag":I
    and-int/lit8 v13, p1, 0x1

    and-int/lit8 v14, p2, 0x1

    if-ne v13, v14, :cond_2

    .line 383
    move/from16 v0, p1

    neg-int v13, v0

    move/from16 v0, p2

    neg-int v14, v0

    invoke-static {v13, v14}, Ljava/lang/Math;->max(II)I

    move-result v2

    .line 388
    .local v2, "backward_start_diag":I
    :goto_1
    move/from16 v0, p2

    invoke-static {p0, v0}, Ljava/lang/Math;->min(II)I

    move-result v1

    .line 390
    .local v1, "backward_end_diag":I
    sub-int v13, v4, v5

    sub-int v14, v1, v2

    invoke-static {v13, v14}, Ljava/lang/Math;->max(II)I

    move-result v13

    div-int/lit8 v13, v13, 0x2

    add-int/lit8 v13, v13, 0x1

    const/4 v14, 0x3

    filled-new-array {v13, v14}, [I

    move-result-object v13

    sget-object v14, Ljava/lang/Integer;->TYPE:Ljava/lang/Class;

    invoke-static {v14, v13}, Ljava/lang/reflect/Array;->newInstance(Ljava/lang/Class;[I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, [[I

    .line 392
    .local v7, "max_progress":[[I
    const/4 v9, 0x0

    .line 396
    .local v9, "num_progress":I
    move v6, v5

    .local v6, "k":I
    :goto_2
    if-gt v6, v4, :cond_5

    .line 397
    const/4 v13, 0x0

    aget-object v13, p3, v13

    add-int v14, p2, v6

    aget v11, v13, v14

    .line 398
    .local v11, "x":I
    sub-int v12, v11, v6

    .line 399
    .local v12, "y":I
    move/from16 v0, p1

    if-gt v11, v0, :cond_0

    if-le v12, p0, :cond_3

    .line 396
    :cond_0
    :goto_3
    add-int/lit8 v6, v6, 0x2

    goto :goto_2

    .line 376
    .end local v1    # "backward_end_diag":I
    .end local v2    # "backward_start_diag":I
    .end local v4    # "forward_end_diag":I
    .end local v5    # "forward_start_diag":I
    .end local v6    # "k":I
    .end local v7    # "max_progress":[[I
    .end local v9    # "num_progress":I
    .end local v11    # "x":I
    .end local v12    # "y":I
    :cond_1
    rsub-int/lit8 v13, p0, 0x1

    move/from16 v0, p2

    neg-int v14, v0

    invoke-static {v13, v14}, Ljava/lang/Math;->max(II)I

    move-result v5

    .restart local v5    # "forward_start_diag":I
    goto :goto_0

    .line 385
    .restart local v4    # "forward_end_diag":I
    :cond_2
    rsub-int/lit8 v13, p1, 0x1

    move/from16 v0, p2

    neg-int v14, v0

    invoke-static {v13, v14}, Ljava/lang/Math;->max(II)I

    move-result v2

    .restart local v2    # "backward_start_diag":I
    goto :goto_1

    .line 403
    .restart local v1    # "backward_end_diag":I
    .restart local v6    # "k":I
    .restart local v7    # "max_progress":[[I
    .restart local v9    # "num_progress":I
    .restart local v11    # "x":I
    .restart local v12    # "y":I
    :cond_3
    add-int v10, v11, v12

    .line 404
    .local v10, "progress":I
    const/4 v13, 0x0

    aget-object v13, v7, v13

    const/4 v14, 0x2

    aget v13, v13, v14

    if-le v10, v13, :cond_4

    .line 405
    const/4 v9, 0x0

    .line 406
    const/4 v13, 0x0

    aget-object v13, v7, v13

    const/4 v14, 0x0

    aput v11, v13, v14

    .line 407
    const/4 v13, 0x0

    aget-object v13, v7, v13

    const/4 v14, 0x1

    aput v12, v13, v14

    .line 408
    const/4 v13, 0x0

    aget-object v13, v7, v13

    const/4 v14, 0x2

    aput v10, v13, v14

    goto :goto_3

    .line 409
    :cond_4
    const/4 v13, 0x0

    aget-object v13, v7, v13

    const/4 v14, 0x2

    aget v13, v13, v14

    if-ne v10, v13, :cond_0

    .line 410
    add-int/lit8 v9, v9, 0x1

    .line 411
    aget-object v13, v7, v9

    const/4 v14, 0x0

    aput v11, v13, v14

    .line 412
    aget-object v13, v7, v9

    const/4 v14, 0x1

    aput v12, v13, v14

    .line 413
    aget-object v13, v7, v9

    const/4 v14, 0x2

    aput v10, v13, v14

    goto :goto_3

    .line 417
    .end local v10    # "progress":I
    .end local v11    # "x":I
    .end local v12    # "y":I
    :cond_5
    const/4 v8, 0x1

    .line 422
    .local v8, "max_progress_forward":Z
    move v6, v2

    :goto_4
    if-gt v6, v1, :cond_9

    .line 423
    const/4 v13, 0x1

    aget-object v13, p3, v13

    add-int v14, p2, v6

    aget v11, v13, v14

    .line 424
    .restart local v11    # "x":I
    sub-int v13, v11, v6

    sub-int v12, v13, v3

    .line 425
    .restart local v12    # "y":I
    if-ltz v11, :cond_6

    if-gez v12, :cond_7

    .line 422
    :cond_6
    :goto_5
    add-int/lit8 v6, v6, 0x2

    goto :goto_4

    .line 429
    :cond_7
    sub-int v13, p1, v11

    add-int/2addr v13, p0

    sub-int v10, v13, v12

    .line 430
    .restart local v10    # "progress":I
    const/4 v13, 0x0

    aget-object v13, v7, v13

    const/4 v14, 0x2

    aget v13, v13, v14

    if-le v10, v13, :cond_8

    .line 431
    const/4 v9, 0x0

    .line 432
    const/4 v8, 0x0

    .line 433
    const/4 v13, 0x0

    aget-object v13, v7, v13

    const/4 v14, 0x0

    aput v11, v13, v14

    .line 434
    const/4 v13, 0x0

    aget-object v13, v7, v13

    const/4 v14, 0x1

    aput v12, v13, v14

    .line 435
    const/4 v13, 0x0

    aget-object v13, v7, v13

    const/4 v14, 0x2

    aput v10, v13, v14

    goto :goto_5

    .line 436
    :cond_8
    const/4 v13, 0x0

    aget-object v13, v7, v13

    const/4 v14, 0x2

    aget v13, v13, v14

    if-ne v10, v13, :cond_6

    if-nez v8, :cond_6

    .line 437
    add-int/lit8 v9, v9, 0x1

    .line 438
    aget-object v13, v7, v9

    const/4 v14, 0x0

    aput v11, v13, v14

    .line 439
    aget-object v13, v7, v9

    const/4 v14, 0x1

    aput v12, v13, v14

    .line 440
    aget-object v13, v7, v9

    const/4 v14, 0x2

    aput v10, v13, v14

    goto :goto_5

    .line 445
    .end local v10    # "progress":I
    .end local v11    # "x":I
    .end local v12    # "y":I
    :cond_9
    div-int/lit8 v13, v9, 0x2

    aget-object v13, v7, v13

    return-object v13
.end method

.method private find_middle_snake(IIII[[I[I)I
    .locals 24
    .param p1, "bottoml1"    # I
    .param p2, "topl1"    # I
    .param p3, "bottoml2"    # I
    .param p4, "topl2"    # I
    .param p5, "V"    # [[I
    .param p6, "snake"    # [I

    .prologue
    .line 195
    sub-int v21, p2, p1

    add-int/lit8 v4, v21, 0x1

    .line 196
    .local v4, "N":I
    sub-int v21, p4, p3

    add-int/lit8 v3, v21, 0x1

    .line 200
    .local v3, "M":I
    sub-int v6, v4, v3

    .line 202
    .local v6, "delta":I
    and-int/lit8 v21, v6, 0x1

    const/16 v22, 0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_1

    .line 203
    const/4 v10, 0x0

    .line 208
    .local v10, "isEven":Z
    :goto_0
    move-object/from16 v0, p0

    iget v0, v0, Lorg/eclipse/compare/internal/LCS;->max_differences:I

    move/from16 v21, v0

    add-int v22, v4, v3

    add-int/lit8 v22, v22, 0x1

    div-int/lit8 v22, v22, 0x2

    invoke-static/range {v21 .. v22}, Ljava/lang/Math;->min(II)I

    move-result v12

    .line 213
    .local v12, "limit":I
    and-int/lit8 v21, v3, 0x1

    const/16 v22, 0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_2

    .line 214
    const/16 v18, 0x1

    .line 220
    .local v18, "value_to_add_forward":I
    :goto_1
    and-int/lit8 v21, v4, 0x1

    const/16 v22, 0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_3

    .line 221
    const/16 v17, 0x1

    .line 226
    .local v17, "value_to_add_backward":I
    :goto_2
    neg-int v0, v3

    move/from16 v16, v0

    .line 227
    .local v16, "start_forward":I
    move v9, v4

    .line 228
    .local v9, "end_forward":I
    neg-int v14, v4

    .line 229
    .local v14, "start_backward":I
    move v7, v3

    .line 231
    .local v7, "end_backward":I
    const/16 v21, 0x0

    aget-object v21, p5, v21

    add-int/lit8 v22, v12, 0x1

    const/16 v23, 0x0

    aput v23, v21, v22

    .line 232
    const/16 v21, 0x1

    aget-object v21, p5, v21

    add-int/lit8 v22, v12, -0x1

    aput v4, v21, v22

    .line 233
    const/4 v5, 0x0

    .local v5, "d":I
    :goto_3
    if-gt v5, v12, :cond_11

    .line 235
    add-int v21, v18, v16

    neg-int v0, v5

    move/from16 v22, v0

    invoke-static/range {v21 .. v22}, Ljava/lang/Math;->max(II)I

    move-result v15

    .line 236
    .local v15, "start_diag":I
    invoke-static {v9, v5}, Ljava/lang/Math;->min(II)I

    move-result v8

    .line 237
    .local v8, "end_diag":I
    rsub-int/lit8 v18, v18, 0x1

    .line 240
    move v11, v15

    .local v11, "k":I
    :goto_4
    if-gt v11, v8, :cond_9

    .line 242
    neg-int v0, v5

    move/from16 v21, v0

    move/from16 v0, v21

    if-eq v11, v0, :cond_0

    if-ge v11, v5, :cond_4

    const/16 v21, 0x0

    aget-object v21, p5, v21

    add-int v22, v12, v11

    add-int/lit8 v22, v22, -0x1

    aget v21, v21, v22

    const/16 v22, 0x0

    aget-object v22, p5, v22

    add-int v23, v12, v11

    add-int/lit8 v23, v23, 0x1

    aget v22, v22, v23

    move/from16 v0, v21

    move/from16 v1, v22

    if-ge v0, v1, :cond_4

    .line 244
    :cond_0
    const/16 v21, 0x0

    aget-object v21, p5, v21

    add-int v22, v12, v11

    add-int/lit8 v22, v22, 0x1

    aget v19, v21, v22

    .line 249
    .local v19, "x":I
    :goto_5
    sub-int v20, v19, v11

    .line 251
    .local v20, "y":I
    const/16 v21, 0x0

    add-int v22, v19, p1

    aput v22, p6, v21

    .line 252
    const/16 v21, 0x1

    add-int v22, v20, p3

    aput v22, p6, v21

    .line 253
    const/16 v21, 0x2

    const/16 v22, 0x0

    aput v22, p6, v21

    .line 257
    :goto_6
    move/from16 v0, v19

    if-ge v0, v4, :cond_5

    move/from16 v0, v20

    if-ge v0, v3, :cond_5

    add-int v21, v19, p1

    add-int v22, v20, p3

    move-object/from16 v0, p0

    move/from16 v1, v21

    move/from16 v2, v22

    invoke-virtual {v0, v1, v2}, Lorg/eclipse/compare/internal/LCS;->isRangeEqual(II)Z

    move-result v21

    if-eqz v21, :cond_5

    .line 258
    add-int/lit8 v19, v19, 0x1

    .line 259
    add-int/lit8 v20, v20, 0x1

    .line 260
    const/16 v21, 0x2

    aget v22, p6, v21

    add-int/lit8 v22, v22, 0x1

    aput v22, p6, v21

    goto :goto_6

    .line 205
    .end local v5    # "d":I
    .end local v7    # "end_backward":I
    .end local v8    # "end_diag":I
    .end local v9    # "end_forward":I
    .end local v10    # "isEven":Z
    .end local v11    # "k":I
    .end local v12    # "limit":I
    .end local v14    # "start_backward":I
    .end local v15    # "start_diag":I
    .end local v16    # "start_forward":I
    .end local v17    # "value_to_add_backward":I
    .end local v18    # "value_to_add_forward":I
    .end local v19    # "x":I
    .end local v20    # "y":I
    :cond_1
    const/4 v10, 0x1

    .restart local v10    # "isEven":Z
    goto/16 :goto_0

    .line 216
    .restart local v12    # "limit":I
    :cond_2
    const/16 v18, 0x0

    .restart local v18    # "value_to_add_forward":I
    goto/16 :goto_1

    .line 223
    :cond_3
    const/16 v17, 0x0

    .restart local v17    # "value_to_add_backward":I
    goto/16 :goto_2

    .line 246
    .restart local v5    # "d":I
    .restart local v7    # "end_backward":I
    .restart local v8    # "end_diag":I
    .restart local v9    # "end_forward":I
    .restart local v11    # "k":I
    .restart local v14    # "start_backward":I
    .restart local v15    # "start_diag":I
    .restart local v16    # "start_forward":I
    :cond_4
    const/16 v21, 0x0

    aget-object v21, p5, v21

    add-int v22, v12, v11

    add-int/lit8 v22, v22, -0x1

    aget v21, v21, v22

    add-int/lit8 v19, v21, 0x1

    .restart local v19    # "x":I
    goto :goto_5

    .line 262
    .restart local v20    # "y":I
    :cond_5
    const/16 v21, 0x0

    aget-object v21, p5, v21

    add-int v22, v12, v11

    aput v19, v21, v22

    .line 265
    if-nez v10, :cond_6

    sub-int v21, v6, v5

    add-int/lit8 v21, v21, 0x1

    move/from16 v0, v21

    if-lt v11, v0, :cond_6

    add-int v21, v6, v5

    add-int/lit8 v21, v21, -0x1

    move/from16 v0, v21

    if-gt v11, v0, :cond_6

    const/16 v21, 0x1

    aget-object v21, p5, v21

    add-int v22, v12, v11

    sub-int v22, v22, v6

    aget v21, v21, v22

    move/from16 v0, v19

    move/from16 v1, v21

    if-lt v0, v1, :cond_6

    .line 268
    mul-int/lit8 v21, v5, 0x2

    add-int/lit8 v21, v21, -0x1

    .line 337
    .end local v8    # "end_diag":I
    .end local v11    # "k":I
    .end local v15    # "start_diag":I
    .end local v19    # "x":I
    .end local v20    # "y":I
    :goto_7
    return v21

    .line 272
    .restart local v8    # "end_diag":I
    .restart local v11    # "k":I
    .restart local v15    # "start_diag":I
    .restart local v19    # "x":I
    .restart local v20    # "y":I
    :cond_6
    move/from16 v0, v19

    if-lt v0, v4, :cond_8

    add-int/lit8 v21, v11, -0x1

    move/from16 v0, v21

    if-le v9, v0, :cond_8

    .line 273
    add-int/lit8 v9, v11, -0x1

    .line 240
    :cond_7
    :goto_8
    add-int/lit8 v11, v11, 0x2

    goto/16 :goto_4

    .line 274
    :cond_8
    move/from16 v0, v20

    if-lt v0, v3, :cond_7

    .line 275
    add-int/lit8 v16, v11, 0x1

    .line 276
    const/16 v18, 0x0

    goto :goto_8

    .line 280
    .end local v19    # "x":I
    .end local v20    # "y":I
    :cond_9
    add-int v21, v17, v14

    neg-int v0, v5

    move/from16 v22, v0

    invoke-static/range {v21 .. v22}, Ljava/lang/Math;->max(II)I

    move-result v15

    .line 281
    invoke-static {v7, v5}, Ljava/lang/Math;->min(II)I

    move-result v8

    .line 282
    rsub-int/lit8 v17, v17, 0x1

    .line 285
    move v11, v15

    :goto_9
    if-gt v11, v8, :cond_10

    .line 287
    if-eq v11, v5, :cond_a

    neg-int v0, v5

    move/from16 v21, v0

    move/from16 v0, v21

    if-eq v11, v0, :cond_b

    const/16 v21, 0x1

    aget-object v21, p5, v21

    add-int v22, v12, v11

    add-int/lit8 v22, v22, -0x1

    aget v21, v21, v22

    const/16 v22, 0x1

    aget-object v22, p5, v22

    add-int v23, v12, v11

    add-int/lit8 v23, v23, 0x1

    aget v22, v22, v23

    move/from16 v0, v21

    move/from16 v1, v22

    if-ge v0, v1, :cond_b

    .line 289
    :cond_a
    const/16 v21, 0x1

    aget-object v21, p5, v21

    add-int v22, v12, v11

    add-int/lit8 v22, v22, -0x1

    aget v19, v21, v22

    .line 294
    .restart local v19    # "x":I
    :goto_a
    sub-int v21, v19, v11

    sub-int v20, v21, v6

    .line 296
    .restart local v20    # "y":I
    const/16 v21, 0x2

    const/16 v22, 0x0

    aput v22, p6, v21

    .line 300
    :goto_b
    if-lez v19, :cond_c

    if-lez v20, :cond_c

    add-int/lit8 v21, v19, -0x1

    add-int v21, v21, p1

    add-int/lit8 v22, v20, -0x1

    add-int v22, v22, p3

    move-object/from16 v0, p0

    move/from16 v1, v21

    move/from16 v2, v22

    invoke-virtual {v0, v1, v2}, Lorg/eclipse/compare/internal/LCS;->isRangeEqual(II)Z

    move-result v21

    if-eqz v21, :cond_c

    .line 301
    add-int/lit8 v19, v19, -0x1

    .line 302
    add-int/lit8 v20, v20, -0x1

    .line 303
    const/16 v21, 0x2

    aget v22, p6, v21

    add-int/lit8 v22, v22, 0x1

    aput v22, p6, v21

    goto :goto_b

    .line 291
    .end local v19    # "x":I
    .end local v20    # "y":I
    :cond_b
    const/16 v21, 0x1

    aget-object v21, p5, v21

    add-int v22, v12, v11

    add-int/lit8 v22, v22, 0x1

    aget v21, v21, v22

    add-int/lit8 v19, v21, -0x1

    .restart local v19    # "x":I
    goto :goto_a

    .line 305
    .restart local v20    # "y":I
    :cond_c
    const/16 v21, 0x1

    aget-object v21, p5, v21

    add-int v22, v12, v11

    aput v19, v21, v22

    .line 307
    if-eqz v10, :cond_d

    neg-int v0, v6

    move/from16 v21, v0

    sub-int v21, v21, v5

    move/from16 v0, v21

    if-lt v11, v0, :cond_d

    sub-int v21, v5, v6

    move/from16 v0, v21

    if-gt v11, v0, :cond_d

    const/16 v21, 0x0

    aget-object v21, p5, v21

    add-int v22, v12, v11

    add-int v22, v22, v6

    aget v21, v21, v22

    move/from16 v0, v19

    move/from16 v1, v21

    if-gt v0, v1, :cond_d

    .line 310
    const/16 v21, 0x0

    add-int v22, p1, v19

    aput v22, p6, v21

    .line 311
    const/16 v21, 0x1

    add-int v22, p3, v20

    aput v22, p6, v21

    .line 313
    mul-int/lit8 v21, v5, 0x2

    goto/16 :goto_7

    .line 317
    :cond_d
    if-gtz v19, :cond_f

    .line 318
    add-int/lit8 v14, v11, 0x1

    .line 319
    const/16 v17, 0x0

    .line 285
    :cond_e
    :goto_c
    add-int/lit8 v11, v11, 0x2

    goto/16 :goto_9

    .line 320
    :cond_f
    if-gtz v20, :cond_e

    add-int/lit8 v21, v11, -0x1

    move/from16 v0, v21

    if-le v7, v0, :cond_e

    .line 321
    add-int/lit8 v7, v11, -0x1

    goto :goto_c

    .line 233
    .end local v19    # "x":I
    .end local v20    # "y":I
    :cond_10
    add-int/lit8 v5, v5, 0x1

    goto/16 :goto_3

    .line 332
    .end local v8    # "end_diag":I
    .end local v11    # "k":I
    .end local v15    # "start_diag":I
    :cond_11
    move-object/from16 v0, p5

    invoke-static {v3, v4, v12, v0}, Lorg/eclipse/compare/internal/LCS;->findMostProgress(III[[I)[I

    move-result-object v13

    .line 334
    .local v13, "most_progress":[I
    const/16 v21, 0x0

    const/16 v22, 0x0

    aget v22, v13, v22

    add-int v22, v22, p1

    aput v22, p6, v21

    .line 335
    const/16 v21, 0x1

    const/16 v22, 0x1

    aget v22, v13, v22

    add-int v22, v22, p3

    aput v22, p6, v21

    .line 336
    const/16 v21, 0x2

    const/16 v22, 0x0

    aput v22, p6, v21

    .line 337
    const/16 v21, 0x5

    goto/16 :goto_7
.end method

.method private lcs_rec(IIII[[I[I)I
    .locals 16
    .param p1, "bottoml1"    # I
    .param p2, "topl1"    # I
    .param p3, "bottoml2"    # I
    .param p4, "topl2"    # I
    .param p5, "V"    # [[I
    .param p6, "snake"    # [I

    .prologue
    .line 125
    move/from16 v0, p1

    move/from16 v1, p2

    if-gt v0, v1, :cond_0

    move/from16 v0, p3

    move/from16 v1, p4

    if-le v0, v1, :cond_2

    .line 126
    :cond_0
    const/4 v11, 0x0

    .line 162
    :cond_1
    :goto_0
    return v11

    .line 129
    :cond_2
    invoke-direct/range {p0 .. p6}, Lorg/eclipse/compare/internal/LCS;->find_middle_snake(IIII[[I[I)I

    move-result v9

    .line 134
    .local v9, "d":I
    const/4 v2, 0x2

    aget v11, p6, v2

    .line 135
    .local v11, "len":I
    const/4 v2, 0x0

    aget v13, p6, v2

    .line 136
    .local v13, "startx":I
    const/4 v2, 0x1

    aget v14, p6, v2

    .line 139
    .local v14, "starty":I
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_1
    if-ge v10, v11, :cond_3

    .line 140
    add-int v2, v13, v10

    add-int v3, v14, v10

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lorg/eclipse/compare/internal/LCS;->setLcs(II)V

    .line 139
    add-int/lit8 v10, v10, 0x1

    goto :goto_1

    .line 143
    :cond_3
    const/4 v2, 0x1

    if-le v9, v2, :cond_4

    .line 144
    add-int/lit8 v4, v13, -0x1

    add-int/lit8 v6, v14, -0x1

    move-object/from16 v2, p0

    move/from16 v3, p1

    move/from16 v5, p3

    move-object/from16 v7, p5

    move-object/from16 v8, p6

    invoke-direct/range {v2 .. v8}, Lorg/eclipse/compare/internal/LCS;->lcs_rec(IIII[[I[I)I

    move-result v2

    add-int v15, v11, v2

    add-int v3, v13, v11

    add-int v5, v14, v11

    move-object/from16 v2, p0

    move/from16 v4, p2

    move/from16 v6, p4

    move-object/from16 v7, p5

    move-object/from16 v8, p6

    invoke-direct/range {v2 .. v8}, Lorg/eclipse/compare/internal/LCS;->lcs_rec(IIII[[I[I)I

    move-result v2

    add-int v11, v15, v2

    goto :goto_0

    .line 149
    :cond_4
    const/4 v2, 0x1

    if-ne v9, v2, :cond_1

    .line 155
    sub-int v2, v13, p1

    sub-int v3, v14, p3

    invoke-static {v2, v3}, Ljava/lang/Math;->min(II)I

    move-result v12

    .line 156
    .local v12, "max":I
    const/4 v10, 0x0

    :goto_2
    if-ge v10, v12, :cond_5

    .line 157
    add-int v2, p1, v10

    add-int v3, p3, v10

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lorg/eclipse/compare/internal/LCS;->setLcs(II)V

    .line 156
    add-int/lit8 v10, v10, 0x1

    goto :goto_2

    .line 159
    :cond_5
    add-int/2addr v11, v12

    goto :goto_0
.end method


# virtual methods
.method public getLength()I
    .locals 1

    .prologue
    .line 459
    iget v0, p0, Lorg/eclipse/compare/internal/LCS;->length:I

    return v0
.end method

.method protected abstract getLength1()I
.end method

.method protected abstract getLength2()I
.end method

.method protected abstract initializeLcs(I)V
.end method

.method protected abstract isRangeEqual(II)Z
.end method

.method public longestCommonSubsequence(Lorg/eclipse/compare/internal/LCSSettings;)V
    .locals 18
    .param p1, "settings"    # Lorg/eclipse/compare/internal/LCSSettings;

    .prologue
    .line 42
    invoke-virtual/range {p0 .. p0}, Lorg/eclipse/compare/internal/LCS;->getLength1()I

    move-result v9

    .line 43
    .local v9, "length1":I
    invoke-virtual/range {p0 .. p0}, Lorg/eclipse/compare/internal/LCS;->getLength2()I

    move-result v10

    .line 44
    .local v10, "length2":I
    if-eqz v9, :cond_0

    if-nez v10, :cond_1

    .line 45
    :cond_0
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput v2, v0, Lorg/eclipse/compare/internal/LCS;->length:I

    .line 86
    :goto_0
    return-void

    .line 49
    :cond_1
    add-int v2, v9, v10

    add-int/lit8 v2, v2, 0x1

    div-int/lit8 v2, v2, 0x2

    move-object/from16 v0, p0

    iput v2, v0, Lorg/eclipse/compare/internal/LCS;->max_differences:I

    .line 50
    int-to-double v12, v9

    int-to-double v14, v10

    mul-double/2addr v12, v14

    invoke-virtual/range {p1 .. p1}, Lorg/eclipse/compare/internal/LCSSettings;->getTooLong()D

    move-result-wide v14

    cmpl-double v2, v12, v14

    if-lez v2, :cond_2

    .line 52
    move-object/from16 v0, p0

    iget v2, v0, Lorg/eclipse/compare/internal/LCS;->max_differences:I

    int-to-double v12, v2

    invoke-virtual/range {p1 .. p1}, Lorg/eclipse/compare/internal/LCSSettings;->getPowLimit()D

    move-result-wide v14

    const-wide/high16 v16, 0x3ff0000000000000L    # 1.0

    sub-double v14, v14, v16

    invoke-static {v12, v13, v14, v15}, Ljava/lang/Math;->pow(DD)D

    move-result-wide v12

    double-to-int v2, v12

    move-object/from16 v0, p0

    iput v2, v0, Lorg/eclipse/compare/internal/LCS;->max_differences:I

    .line 56
    :cond_2
    move-object/from16 v0, p0

    invoke-virtual {v0, v9}, Lorg/eclipse/compare/internal/LCS;->initializeLcs(I)V

    .line 63
    invoke-static {v9, v10}, Ljava/lang/Math;->min(II)I

    move-result v11

    .line 64
    .local v11, "max":I
    const/4 v3, 0x0

    .line 65
    .local v3, "forwardBound":I
    :goto_1
    if-ge v3, v11, :cond_3

    move-object/from16 v0, p0

    invoke-virtual {v0, v3, v3}, Lorg/eclipse/compare/internal/LCS;->isRangeEqual(II)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 66
    move-object/from16 v0, p0

    invoke-virtual {v0, v3, v3}, Lorg/eclipse/compare/internal/LCS;->setLcs(II)V

    .line 65
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 69
    :cond_3
    add-int/lit8 v4, v9, -0x1

    .line 70
    .local v4, "backBoundL1":I
    add-int/lit8 v6, v10, -0x1

    .line 73
    .local v6, "backBoundL2":I
    :goto_2
    if-lt v4, v3, :cond_4

    if-lt v6, v3, :cond_4

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, Lorg/eclipse/compare/internal/LCS;->isRangeEqual(II)Z

    move-result v2

    if-eqz v2, :cond_4

    .line 74
    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, Lorg/eclipse/compare/internal/LCS;->setLcs(II)V

    .line 75
    add-int/lit8 v4, v4, -0x1

    .line 76
    add-int/lit8 v6, v6, -0x1

    goto :goto_2

    .line 79
    :cond_4
    add-int v2, v3, v9

    sub-int/2addr v2, v4

    add-int/lit8 v12, v2, -0x1

    const/4 v2, 0x2

    add-int v5, v9, v10

    add-int/lit8 v5, v5, 0x1

    filled-new-array {v2, v5}, [I

    move-result-object v2

    sget-object v5, Ljava/lang/Integer;->TYPE:Ljava/lang/Class;

    invoke-static {v5, v2}, Ljava/lang/reflect/Array;->newInstance(Ljava/lang/Class;[I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, [[I

    const/4 v2, 0x3

    new-array v8, v2, [I

    move-object/from16 v2, p0

    move v5, v3

    invoke-direct/range {v2 .. v8}, Lorg/eclipse/compare/internal/LCS;->lcs_rec(IIII[[I[I)I

    move-result v2

    add-int/2addr v2, v12

    move-object/from16 v0, p0

    iput v2, v0, Lorg/eclipse/compare/internal/LCS;->length:I

    goto/16 :goto_0
.end method

.method protected abstract setLcs(II)V
.end method

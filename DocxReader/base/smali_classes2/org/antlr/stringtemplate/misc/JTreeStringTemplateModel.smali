.class public Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;
.super Ljava/lang/Object;
.source "JTreeStringTemplateModel.java"

# interfaces
.implements Ljavax/swing/tree/TreeModel;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$HashMapWrapper;,
        Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$MapEntryWrapper;,
        Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$ListWrapper;,
        Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$ExprWrapper;,
        Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;,
        Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;
    }
.end annotation


# static fields
.field static class$java$lang$Object:Ljava/lang/Class;

.field static class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$ExprWrapper:Ljava/lang/Class;

.field static class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$HashMapWrapper:Ljava/lang/Class;

.field static class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$ListWrapper:Ljava/lang/Class;

.field static class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$StringTemplateWrapper:Ljava/lang/Class;

.field static classNameToWrapperMap:Ljava/util/Map;


# instance fields
.field root:Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;


# direct methods
.method static constructor <clinit>()V
    .locals 3

    .prologue
    .line 46
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    sput-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->classNameToWrapperMap:Ljava/util/Map;

    .line 49
    sget-object v1, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->classNameToWrapperMap:Ljava/util/Map;

    const-string v2, "org.antlr.stringtemplate.StringTemplate"

    sget-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$StringTemplateWrapper:Ljava/lang/Class;

    if-nez v0, :cond_0

    const-string v0, "org.antlr.stringtemplate.misc.JTreeStringTemplateModel$StringTemplateWrapper"

    invoke-static {v0}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$StringTemplateWrapper:Ljava/lang/Class;

    :goto_0
    invoke-interface {v1, v2, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 51
    sget-object v1, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->classNameToWrapperMap:Ljava/util/Map;

    const-string v2, "org.antlr.stringtemplate.language.ASTExpr"

    sget-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$ExprWrapper:Ljava/lang/Class;

    if-nez v0, :cond_1

    const-string v0, "org.antlr.stringtemplate.misc.JTreeStringTemplateModel$ExprWrapper"

    invoke-static {v0}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$ExprWrapper:Ljava/lang/Class;

    :goto_1
    invoke-interface {v1, v2, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 53
    sget-object v1, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->classNameToWrapperMap:Ljava/util/Map;

    const-string v2, "java.util.Hashtable"

    sget-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$HashMapWrapper:Ljava/lang/Class;

    if-nez v0, :cond_2

    const-string v0, "org.antlr.stringtemplate.misc.JTreeStringTemplateModel$HashMapWrapper"

    invoke-static {v0}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$HashMapWrapper:Ljava/lang/Class;

    :goto_2
    invoke-interface {v1, v2, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 55
    sget-object v1, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->classNameToWrapperMap:Ljava/util/Map;

    const-string v2, "java.util.ArrayList"

    sget-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$ListWrapper:Ljava/lang/Class;

    if-nez v0, :cond_3

    const-string v0, "org.antlr.stringtemplate.misc.JTreeStringTemplateModel$ListWrapper"

    invoke-static {v0}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$ListWrapper:Ljava/lang/Class;

    :goto_3
    invoke-interface {v1, v2, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 57
    sget-object v1, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->classNameToWrapperMap:Ljava/util/Map;

    const-string v2, "java.util.Vector"

    sget-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$ListWrapper:Ljava/lang/Class;

    if-nez v0, :cond_4

    const-string v0, "org.antlr.stringtemplate.misc.JTreeStringTemplateModel$ListWrapper"

    invoke-static {v0}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$ListWrapper:Ljava/lang/Class;

    :goto_4
    invoke-interface {v1, v2, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 59
    return-void

    .line 49
    :cond_0
    sget-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$StringTemplateWrapper:Ljava/lang/Class;

    goto :goto_0

    .line 51
    :cond_1
    sget-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$ExprWrapper:Ljava/lang/Class;

    goto :goto_1

    .line 53
    :cond_2
    sget-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$HashMapWrapper:Ljava/lang/Class;

    goto :goto_2

    .line 55
    :cond_3
    sget-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$ListWrapper:Ljava/lang/Class;

    goto :goto_3

    .line 57
    :cond_4
    sget-object v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$org$antlr$stringtemplate$misc$JTreeStringTemplateModel$ListWrapper:Ljava/lang/Class;

    goto :goto_4
.end method

.method public constructor <init>(Lorg/antlr/stringtemplate/StringTemplate;)V
    .locals 2
    .param p1, "st"    # Lorg/antlr/stringtemplate/StringTemplate;

    .prologue
    .line 339
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 319
    const/4 v0, 0x0

    iput-object v0, p0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->root:Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;

    .line 340
    if-nez p1, :cond_0

    .line 341
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "root is null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 343
    :cond_0
    new-instance v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;

    invoke-direct {v0, p1}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;-><init>(Ljava/lang/Object;)V

    iput-object v0, p0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->root:Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;

    .line 344
    return-void
.end method

.method static class$(Ljava/lang/String;)Ljava/lang/Class;
    .locals 2
    .param p0, "x0"    # Ljava/lang/String;

    .prologue
    .line 50
    :try_start_0
    invoke-static {p0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    return-object v1

    :catch_0
    move-exception v0

    .local v0, "x1":Ljava/lang/ClassNotFoundException;
    new-instance v1, Ljava/lang/NoClassDefFoundError;

    invoke-direct {v1}, Ljava/lang/NoClassDefFoundError;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/NoClassDefFoundError;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    move-result-object v1

    throw v1
.end method

.method public static wrap(Ljava/lang/Object;)Ljava/lang/Object;
    .locals 7
    .param p0, "o"    # Ljava/lang/Object;

    .prologue
    .line 325
    move-object v2, p0

    .line 326
    .local v2, "wrappedObject":Ljava/lang/Object;
    const/4 v3, 0x0

    .line 328
    .local v3, "wrapperClass":Ljava/lang/Class;
    :try_start_0
    sget-object v4, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->classNameToWrapperMap:Ljava/util/Map;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v5

    invoke-interface {v4, v5}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    move-object v0, v4

    check-cast v0, Ljava/lang/Class;

    move-object v3, v0

    .line 329
    const/4 v4, 0x1

    new-array v5, v4, [Ljava/lang/Class;

    const/4 v6, 0x0

    sget-object v4, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$java$lang$Object:Ljava/lang/Class;

    if-nez v4, :cond_0

    const-string v4, "java.lang.Object"

    invoke-static {v4}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v4

    sput-object v4, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$java$lang$Object:Ljava/lang/Class;

    :goto_0
    aput-object v4, v5, v6

    invoke-virtual {v3, v5}, Ljava/lang/Class;->getConstructor([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;

    move-result-object v1

    .line 330
    .local v1, "ctor":Ljava/lang/reflect/Constructor;
    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    aput-object p0, v4, v5

    invoke-virtual {v1, v4}, Ljava/lang/reflect/Constructor;->newInstance([Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    .line 336
    .end local v1    # "ctor":Ljava/lang/reflect/Constructor;
    :goto_1
    return-object v2

    .line 329
    :cond_0
    sget-object v4, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->class$java$lang$Object:Ljava/lang/Class;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 332
    :catch_0
    move-exception v4

    goto :goto_1
.end method


# virtual methods
.method public addTreeModelListener(Ljavax/swing/event/TreeModelListener;)V
    .locals 0
    .param p1, "l"    # Ljavax/swing/event/TreeModelListener;

    .prologue
    .line 347
    return-void
.end method

.method public getChild(Ljava/lang/Object;I)Ljava/lang/Object;
    .locals 1
    .param p1, "parent"    # Ljava/lang/Object;
    .param p2, "index"    # I

    .prologue
    .line 354
    if-nez p1, :cond_0

    .line 355
    const/4 v0, 0x0

    .line 357
    :goto_0
    return-object v0

    :cond_0
    move-object v0, p1

    check-cast v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;

    invoke-virtual {v0, p1, p2}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;->getChild(Ljava/lang/Object;I)Ljava/lang/Object;

    move-result-object v0

    goto :goto_0
.end method

.method public getChildCount(Ljava/lang/Object;)I
    .locals 2
    .param p1, "parent"    # Ljava/lang/Object;

    .prologue
    .line 361
    if-nez p1, :cond_0

    .line 362
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "root is null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    move-object v0, p1

    .line 364
    check-cast v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;

    invoke-virtual {v0, p1}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;->getChildCount(Ljava/lang/Object;)I

    move-result v0

    return v0
.end method

.method public getIndexOfChild(Ljava/lang/Object;Ljava/lang/Object;)I
    .locals 2
    .param p1, "parent"    # Ljava/lang/Object;
    .param p2, "child"    # Ljava/lang/Object;

    .prologue
    .line 368
    if-eqz p1, :cond_0

    if-nez p2, :cond_1

    .line 369
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "root or child is null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    move-object v0, p1

    .line 371
    check-cast v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;

    invoke-virtual {v0, p1, p2}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;->getIndexOfChild(Ljava/lang/Object;Ljava/lang/Object;)I

    move-result v0

    return v0
.end method

.method public getRoot()Ljava/lang/Object;
    .locals 1

    .prologue
    .line 375
    iget-object v0, p0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;->root:Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;

    return-object v0
.end method

.method public isLeaf(Ljava/lang/Object;)Z
    .locals 2
    .param p1, "node"    # Ljava/lang/Object;

    .prologue
    .line 379
    if-nez p1, :cond_0

    .line 380
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "node is null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 382
    :cond_0
    instance-of v0, p1, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;

    if-eqz v0, :cond_1

    move-object v0, p1

    .line 383
    check-cast v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;

    invoke-virtual {v0, p1}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;->isLeaf(Ljava/lang/Object;)Z

    move-result v0

    .line 385
    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x1

    goto :goto_0
.end method

.method public removeTreeModelListener(Ljavax/swing/event/TreeModelListener;)V
    .locals 0
    .param p1, "l"    # Ljavax/swing/event/TreeModelListener;

    .prologue
    .line 389
    return-void
.end method

.method public valueForPathChanged(Ljavax/swing/tree/TreePath;Ljava/lang/Object;)V
    .locals 2
    .param p1, "path"    # Ljavax/swing/tree/TreePath;
    .param p2, "newValue"    # Ljava/lang/Object;

    .prologue
    .line 392
    sget-object v0, Ljava/lang/System;->out:Ljava/io/PrintStream;

    const-string v1, "heh, who is calling this mystery method?"

    invoke-virtual {v0, v1}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    .line 393
    return-void
.end method

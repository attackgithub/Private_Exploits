.class Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;
.super Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;
.source "JTreeStringTemplateModel.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x8
    name = "StringTemplateWrapper"
.end annotation


# instance fields
.field st:Lorg/antlr/stringtemplate/StringTemplate;


# direct methods
.method public constructor <init>(Ljava/lang/Object;)V
    .locals 1
    .param p1, "o"    # Ljava/lang/Object;

    .prologue
    .line 72
    invoke-direct {p0}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;-><init>()V

    .line 71
    const/4 v0, 0x0

    iput-object v0, p0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;->st:Lorg/antlr/stringtemplate/StringTemplate;

    .line 73
    check-cast p1, Lorg/antlr/stringtemplate/StringTemplate;

    .end local p1    # "o":Ljava/lang/Object;
    iput-object p1, p0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;->st:Lorg/antlr/stringtemplate/StringTemplate;

    .line 74
    return-void
.end method


# virtual methods
.method public getChild(Ljava/lang/Object;I)Ljava/lang/Object;
    .locals 4
    .param p1, "parent"    # Ljava/lang/Object;
    .param p2, "index"    # I

    .prologue
    .line 82
    check-cast p1, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;

    .end local p1    # "parent":Ljava/lang/Object;
    invoke-virtual {p1}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;->getStringTemplate()Lorg/antlr/stringtemplate/StringTemplate;

    move-result-object v1

    .line 83
    .local v1, "st":Lorg/antlr/stringtemplate/StringTemplate;
    if-nez p2, :cond_1

    .line 86
    new-instance v0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$HashMapWrapper;

    invoke-virtual {v1}, Lorg/antlr/stringtemplate/StringTemplate;->getAttributes()Ljava/util/Map;

    move-result-object v2

    invoke-direct {v0, v2}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$HashMapWrapper;-><init>(Ljava/lang/Object;)V

    .line 94
    :cond_0
    :goto_0
    return-object v0

    .line 88
    :cond_1
    invoke-virtual {v1}, Lorg/antlr/stringtemplate/StringTemplate;->getChunks()Ljava/util/List;

    move-result-object v2

    add-int/lit8 v3, p2, -0x1

    invoke-interface {v2, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/antlr/stringtemplate/language/Expr;

    .line 91
    .local v0, "chunk":Lorg/antlr/stringtemplate/language/Expr;
    instance-of v2, v0, Lorg/antlr/stringtemplate/language/StringRef;

    if-nez v2, :cond_0

    .line 94
    new-instance v2, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$ExprWrapper;

    invoke-direct {v2, v0}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$ExprWrapper;-><init>(Ljava/lang/Object;)V

    move-object v0, v2

    goto :goto_0
.end method

.method public getChildCount(Ljava/lang/Object;)I
    .locals 1
    .param p1, "parent"    # Ljava/lang/Object;

    .prologue
    .line 97
    iget-object v0, p0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;->st:Lorg/antlr/stringtemplate/StringTemplate;

    invoke-virtual {v0}, Lorg/antlr/stringtemplate/StringTemplate;->getChunks()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    add-int/lit8 v0, v0, 0x1

    return v0
.end method

.method public getIndexOfChild(Ljava/lang/Object;Ljava/lang/Object;)I
    .locals 2
    .param p1, "parent"    # Ljava/lang/Object;
    .param p2, "child"    # Ljava/lang/Object;

    .prologue
    .line 100
    instance-of v1, p2, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;

    if-eqz v1, :cond_0

    .line 101
    check-cast p2, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;

    .end local p2    # "child":Ljava/lang/Object;
    invoke-virtual {p2}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$Wrapper;->getWrappedObject()Ljava/lang/Object;

    move-result-object p2

    .line 103
    .restart local p2    # "child":Ljava/lang/Object;
    :cond_0
    iget-object v1, p0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;->st:Lorg/antlr/stringtemplate/StringTemplate;

    invoke-virtual {v1}, Lorg/antlr/stringtemplate/StringTemplate;->getChunks()Ljava/util/List;

    move-result-object v1

    invoke-interface {v1, p2}, Ljava/util/List;->indexOf(Ljava/lang/Object;)I

    move-result v1

    add-int/lit8 v0, v1, 0x1

    .line 105
    .local v0, "index":I
    return v0
.end method

.method public getStringTemplate()Lorg/antlr/stringtemplate/StringTemplate;
    .locals 1

    .prologue
    .line 79
    iget-object v0, p0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;->st:Lorg/antlr/stringtemplate/StringTemplate;

    return-object v0
.end method

.method public getWrappedObject()Ljava/lang/Object;
    .locals 1

    .prologue
    .line 76
    invoke-virtual {p0}, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;->getStringTemplate()Lorg/antlr/stringtemplate/StringTemplate;

    move-result-object v0

    return-object v0
.end method

.method public isLeaf(Ljava/lang/Object;)Z
    .locals 1
    .param p1, "node"    # Ljava/lang/Object;

    .prologue
    .line 108
    const/4 v0, 0x0

    return v0
.end method

.method public toString()Ljava/lang/String;
    .locals 1

    .prologue
    .line 111
    iget-object v0, p0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;->st:Lorg/antlr/stringtemplate/StringTemplate;

    if-nez v0, :cond_0

    .line 112
    const-string v0, "<invalid template>"

    .line 114
    :goto_0
    return-object v0

    :cond_0
    iget-object v0, p0, Lorg/antlr/stringtemplate/misc/JTreeStringTemplateModel$StringTemplateWrapper;->st:Lorg/antlr/stringtemplate/StringTemplate;

    invoke-virtual {v0}, Lorg/antlr/stringtemplate/StringTemplate;->getName()Ljava/lang/String;

    move-result-object v0

    goto :goto_0
.end method

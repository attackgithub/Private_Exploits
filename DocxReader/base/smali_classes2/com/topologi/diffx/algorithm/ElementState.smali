.class final Lcom/topologi/diffx/algorithm/ElementState;
.super Ljava/lang/Object;
.source "ElementState.java"


# instance fields
.field private transient openChanges:[C

.field private transient openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

.field private transient size:I


# direct methods
.method public constructor <init>()V
    .locals 1

    .prologue
    .line 57
    const/16 v0, 0xc

    invoke-direct {p0, v0}, Lcom/topologi/diffx/algorithm/ElementState;-><init>(I)V

    .line 58
    return-void
.end method

.method public constructor <init>(I)V
    .locals 3
    .param p1, "initialCapacity"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/IllegalArgumentException;
        }
    .end annotation

    .prologue
    .line 46
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 47
    if-gez p1, :cond_0

    .line 48
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Illegal Capacity: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 49
    :cond_0
    new-array v0, p1, [Lcom/topologi/diffx/event/OpenElementEvent;

    iput-object v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    .line 50
    new-array v0, p1, [C

    iput-object v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->openChanges:[C

    .line 51
    return-void
.end method

.method private add(Lcom/topologi/diffx/event/OpenElementEvent;)Z
    .locals 3
    .param p1, "o"    # Lcom/topologi/diffx/event/OpenElementEvent;

    .prologue
    .line 351
    iget v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v0, v0, 0x1

    invoke-virtual {p0, v0}, Lcom/topologi/diffx/algorithm/ElementState;->ensureCapacity(I)V

    .line 352
    iget-object v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    iget v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v2, v1, 0x1

    iput v2, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    aput-object p1, v0, v1

    .line 353
    const/4 v0, 0x1

    return v0
.end method

.method private checkRange(I)V
    .locals 3
    .param p1, "index"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/IndexOutOfBoundsException;
        }
    .end annotation

    .prologue
    .line 401
    iget v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    if-lt p1, v0, :cond_0

    .line 402
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Index: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", Size: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 403
    :cond_0
    return-void
.end method

.method private push(Lcom/topologi/diffx/event/OpenElementEvent;C)V
    .locals 2
    .param p1, "e"    # Lcom/topologi/diffx/event/OpenElementEvent;
    .param p2, "c"    # C

    .prologue
    .line 308
    iget v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v0, v0, 0x1

    invoke-virtual {p0, v0}, Lcom/topologi/diffx/algorithm/ElementState;->ensureCapacity(I)V

    .line 309
    iget-object v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    iget v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    aput-object p1, v0, v1

    .line 310
    iget-object v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->openChanges:[C

    iget v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    aput-char p2, v0, v1

    .line 311
    iget v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    .line 312
    return-void
.end method


# virtual methods
.method public clear()V
    .locals 3

    .prologue
    .line 384
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    if-ge v0, v1, :cond_0

    .line 385
    iget-object v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    const/4 v2, 0x0

    aput-object v2, v1, v0

    .line 384
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 386
    :cond_0
    const/4 v1, 0x0

    iput v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    .line 387
    return-void
.end method

.method public contains(Lcom/topologi/diffx/event/OpenElementEvent;)Z
    .locals 1
    .param p1, "element"    # Lcom/topologi/diffx/event/OpenElementEvent;

    .prologue
    .line 113
    invoke-virtual {p0, p1}, Lcom/topologi/diffx/algorithm/ElementState;->indexOf(Lcom/topologi/diffx/event/OpenElementEvent;)I

    move-result v0

    if-ltz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public current()Lcom/topologi/diffx/event/OpenElementEvent;
    .locals 2

    .prologue
    .line 170
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_0

    .line 171
    iget-object v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    iget v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v1, v1, -0x1

    aget-object v0, v0, v1

    .line 173
    :goto_0
    return-object v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public currentChange()C
    .locals 2

    .prologue
    .line 182
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_0

    .line 183
    iget-object v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->openChanges:[C

    iget v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v1, v1, -0x1

    aget-char v0, v0, v1

    .line 185
    :goto_0
    return v0

    :cond_0
    const/16 v0, 0x20

    goto :goto_0
.end method

.method public delete(Lcom/topologi/diffx/event/DiffXEvent;)V
    .locals 1
    .param p1, "e"    # Lcom/topologi/diffx/event/DiffXEvent;

    .prologue
    .line 236
    instance-of v0, p1, Lcom/topologi/diffx/event/OpenElementEvent;

    if-eqz v0, :cond_1

    .line 237
    check-cast p1, Lcom/topologi/diffx/event/OpenElementEvent;

    .end local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    const/16 v0, 0x2d

    invoke-direct {p0, p1, v0}, Lcom/topologi/diffx/algorithm/ElementState;->push(Lcom/topologi/diffx/event/OpenElementEvent;C)V

    .line 240
    :cond_0
    :goto_0
    return-void

    .line 238
    .restart local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_1
    instance-of v0, p1, Lcom/topologi/diffx/event/CloseElementEvent;

    if-eqz v0, :cond_0

    .line 239
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->pop()Lcom/topologi/diffx/event/OpenElementEvent;

    goto :goto_0
.end method

.method public ensureCapacity(I)V
    .locals 7
    .param p1, "minCapacity"    # I

    .prologue
    const/4 v6, 0x0

    .line 68
    iget-object v4, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    array-length v1, v4

    .line 69
    .local v1, "oldCapacity":I
    if-le p1, v1, :cond_1

    .line 71
    iget-object v3, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    .line 72
    .local v3, "oldElements":[Lcom/topologi/diffx/event/OpenElementEvent;
    iget-object v2, p0, Lcom/topologi/diffx/algorithm/ElementState;->openChanges:[C

    .line 73
    .local v2, "oldChanges":[C
    mul-int/lit8 v4, v1, 0x3

    div-int/lit8 v4, v4, 0x2

    add-int/lit8 v0, v4, 0x1

    .line 74
    .local v0, "newCapacity":I
    if-ge v0, p1, :cond_0

    .line 75
    move v0, p1

    .line 77
    :cond_0
    new-array v4, v0, [Lcom/topologi/diffx/event/OpenElementEvent;

    iput-object v4, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    .line 78
    new-array v4, v0, [C

    iput-object v4, p0, Lcom/topologi/diffx/algorithm/ElementState;->openChanges:[C

    .line 80
    iget-object v4, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    iget v5, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    invoke-static {v3, v6, v4, v6, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 81
    iget-object v4, p0, Lcom/topologi/diffx/algorithm/ElementState;->openChanges:[C

    iget v5, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    invoke-static {v2, v6, v4, v6, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 83
    .end local v0    # "newCapacity":I
    .end local v2    # "oldChanges":[C
    .end local v3    # "oldElements":[Lcom/topologi/diffx/event/OpenElementEvent;
    :cond_1
    return-void
.end method

.method public format(Lcom/topologi/diffx/event/DiffXEvent;)V
    .locals 1
    .param p1, "e"    # Lcom/topologi/diffx/event/DiffXEvent;

    .prologue
    .line 224
    instance-of v0, p1, Lcom/topologi/diffx/event/OpenElementEvent;

    if-eqz v0, :cond_1

    .line 225
    check-cast p1, Lcom/topologi/diffx/event/OpenElementEvent;

    .end local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    const/16 v0, 0x3d

    invoke-direct {p0, p1, v0}, Lcom/topologi/diffx/algorithm/ElementState;->push(Lcom/topologi/diffx/event/OpenElementEvent;C)V

    .line 228
    :cond_0
    :goto_0
    return-void

    .line 226
    .restart local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_1
    instance-of v0, p1, Lcom/topologi/diffx/event/CloseElementEvent;

    if-eqz v0, :cond_0

    .line 227
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->pop()Lcom/topologi/diffx/event/OpenElementEvent;

    goto :goto_0
.end method

.method public get(I)Lcom/topologi/diffx/event/OpenElementEvent;
    .locals 1
    .param p1, "index"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/IndexOutOfBoundsException;
        }
    .end annotation

    .prologue
    .line 340
    invoke-direct {p0, p1}, Lcom/topologi/diffx/algorithm/ElementState;->checkRange(I)V

    .line 341
    iget-object v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public indexOf(Lcom/topologi/diffx/event/OpenElementEvent;)I
    .locals 2
    .param p1, "element"    # Lcom/topologi/diffx/event/OpenElementEvent;

    .prologue
    .line 128
    if-nez p1, :cond_1

    .line 129
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    if-ge v0, v1, :cond_3

    .line 130
    iget-object v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    aget-object v1, v1, v0

    if-nez v1, :cond_0

    move v1, v0

    .line 137
    :goto_1
    return v1

    .line 129
    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 133
    .end local v0    # "i":I
    :cond_1
    const/4 v0, 0x0

    .restart local v0    # "i":I
    :goto_2
    iget v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    if-ge v0, v1, :cond_3

    .line 134
    iget-object v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    aget-object v1, v1, v0

    invoke-interface {p1, v1}, Lcom/topologi/diffx/event/OpenElementEvent;->equals(Lcom/topologi/diffx/event/DiffXEvent;)Z

    move-result v1

    if-eqz v1, :cond_2

    move v1, v0

    .line 135
    goto :goto_1

    .line 133
    :cond_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    .line 137
    :cond_3
    const/4 v1, -0x1

    goto :goto_1
.end method

.method public insert(Lcom/topologi/diffx/event/DiffXEvent;)V
    .locals 1
    .param p1, "e"    # Lcom/topologi/diffx/event/DiffXEvent;

    .prologue
    .line 212
    instance-of v0, p1, Lcom/topologi/diffx/event/OpenElementEvent;

    if-eqz v0, :cond_1

    .line 213
    check-cast p1, Lcom/topologi/diffx/event/OpenElementEvent;

    .end local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    const/16 v0, 0x2b

    invoke-direct {p0, p1, v0}, Lcom/topologi/diffx/algorithm/ElementState;->push(Lcom/topologi/diffx/event/OpenElementEvent;C)V

    .line 216
    :cond_0
    :goto_0
    return-void

    .line 214
    .restart local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_1
    instance-of v0, p1, Lcom/topologi/diffx/event/CloseElementEvent;

    if-eqz v0, :cond_0

    .line 215
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->pop()Lcom/topologi/diffx/event/OpenElementEvent;

    goto :goto_0
.end method

.method public isEmpty()Z
    .locals 1

    .prologue
    .line 101
    iget v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public lastIndexOf(Lcom/topologi/diffx/event/OpenElementEvent;)I
    .locals 2
    .param p1, "element"    # Lcom/topologi/diffx/event/OpenElementEvent;

    .prologue
    .line 150
    if-nez p1, :cond_1

    .line 151
    iget v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v0, v1, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    .line 152
    iget-object v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    aget-object v1, v1, v0

    if-nez v1, :cond_0

    move v1, v0

    .line 159
    :goto_1
    return v1

    .line 151
    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 155
    .end local v0    # "i":I
    :cond_1
    iget v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v0, v1, -0x1

    .restart local v0    # "i":I
    :goto_2
    if-ltz v0, :cond_3

    .line 156
    iget-object v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    aget-object v1, v1, v0

    invoke-interface {p1, v1}, Lcom/topologi/diffx/event/OpenElementEvent;->equals(Lcom/topologi/diffx/event/DiffXEvent;)Z

    move-result v1

    if-eqz v1, :cond_2

    move v1, v0

    .line 157
    goto :goto_1

    .line 155
    :cond_2
    add-int/lit8 v0, v0, -0x1

    goto :goto_2

    .line 159
    :cond_3
    const/4 v1, -0x1

    goto :goto_1
.end method

.method public matchCurrent(Lcom/topologi/diffx/event/DiffXEvent;)Z
    .locals 2
    .param p1, "e"    # Lcom/topologi/diffx/event/DiffXEvent;

    .prologue
    const/4 v0, 0x0

    .line 199
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 203
    .end local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_0
    :goto_0
    return v0

    .line 201
    .restart local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_1
    instance-of v1, p1, Lcom/topologi/diffx/event/CloseElementEvent;

    if-eqz v1, :cond_0

    .line 203
    check-cast p1, Lcom/topologi/diffx/event/CloseElementEvent;

    .end local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->current()Lcom/topologi/diffx/event/OpenElementEvent;

    move-result-object v0

    invoke-interface {p1, v0}, Lcom/topologi/diffx/event/CloseElementEvent;->match(Lcom/topologi/diffx/event/OpenElementEvent;)Z

    move-result v0

    goto :goto_0
.end method

.method public okDelete(Lcom/topologi/diffx/event/DiffXEvent;)Z
    .locals 4
    .param p1, "e"    # Lcom/topologi/diffx/event/DiffXEvent;

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 291
    instance-of v2, p1, Lcom/topologi/diffx/event/CloseElementEvent;

    if-nez v2, :cond_1

    .line 295
    .end local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_0
    :goto_0
    return v0

    .line 293
    .restart local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_1
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_2

    move v0, v1

    goto :goto_0

    .line 295
    :cond_2
    check-cast p1, Lcom/topologi/diffx/event/CloseElementEvent;

    .end local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->current()Lcom/topologi/diffx/event/OpenElementEvent;

    move-result-object v2

    invoke-interface {p1, v2}, Lcom/topologi/diffx/event/CloseElementEvent;->match(Lcom/topologi/diffx/event/OpenElementEvent;)Z

    move-result v2

    if-eqz v2, :cond_3

    iget-object v2, p0, Lcom/topologi/diffx/algorithm/ElementState;->openChanges:[C

    iget v3, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v3, v3, -0x1

    aget-char v2, v2, v3

    const/16 v3, 0x2d

    if-eq v2, v3, :cond_0

    :cond_3
    move v0, v1

    goto :goto_0
.end method

.method public okFormat(Lcom/topologi/diffx/event/DiffXEvent;)Z
    .locals 4
    .param p1, "e"    # Lcom/topologi/diffx/event/DiffXEvent;

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 253
    instance-of v2, p1, Lcom/topologi/diffx/event/CloseElementEvent;

    if-nez v2, :cond_1

    .line 257
    .end local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_0
    :goto_0
    return v0

    .line 255
    .restart local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_1
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_2

    move v0, v1

    goto :goto_0

    .line 257
    :cond_2
    check-cast p1, Lcom/topologi/diffx/event/CloseElementEvent;

    .end local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->current()Lcom/topologi/diffx/event/OpenElementEvent;

    move-result-object v2

    invoke-interface {p1, v2}, Lcom/topologi/diffx/event/CloseElementEvent;->match(Lcom/topologi/diffx/event/OpenElementEvent;)Z

    move-result v2

    if-eqz v2, :cond_3

    iget-object v2, p0, Lcom/topologi/diffx/algorithm/ElementState;->openChanges:[C

    iget v3, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v3, v3, -0x1

    aget-char v2, v2, v3

    const/16 v3, 0x3d

    if-eq v2, v3, :cond_0

    :cond_3
    move v0, v1

    goto :goto_0
.end method

.method public okInsert(Lcom/topologi/diffx/event/DiffXEvent;)Z
    .locals 4
    .param p1, "e"    # Lcom/topologi/diffx/event/DiffXEvent;

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 272
    instance-of v2, p1, Lcom/topologi/diffx/event/CloseElementEvent;

    if-nez v2, :cond_1

    .line 276
    .end local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_0
    :goto_0
    return v0

    .line 274
    .restart local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_1
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_2

    move v0, v1

    goto :goto_0

    .line 276
    :cond_2
    check-cast p1, Lcom/topologi/diffx/event/CloseElementEvent;

    .end local p1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    invoke-virtual {p0}, Lcom/topologi/diffx/algorithm/ElementState;->current()Lcom/topologi/diffx/event/OpenElementEvent;

    move-result-object v2

    invoke-interface {p1, v2}, Lcom/topologi/diffx/event/CloseElementEvent;->match(Lcom/topologi/diffx/event/OpenElementEvent;)Z

    move-result v2

    if-eqz v2, :cond_3

    iget-object v2, p0, Lcom/topologi/diffx/algorithm/ElementState;->openChanges:[C

    iget v3, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v3, v3, -0x1

    aget-char v2, v2, v3

    const/16 v3, 0x2b

    if-eq v2, v3, :cond_0

    :cond_3
    move v0, v1

    goto :goto_0
.end method

.method public pop()Lcom/topologi/diffx/event/OpenElementEvent;
    .locals 2

    .prologue
    .line 320
    iget v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    if-lez v0, :cond_0

    .line 321
    iget v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    .line 322
    iget-object v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    iget v1, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    aget-object v0, v0, v1

    .line 324
    :goto_0
    return-object v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public remove(I)Lcom/topologi/diffx/event/OpenElementEvent;
    .locals 5
    .param p1, "index"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/IndexOutOfBoundsException;
        }
    .end annotation

    .prologue
    .line 369
    invoke-direct {p0, p1}, Lcom/topologi/diffx/algorithm/ElementState;->checkRange(I)V

    .line 370
    iget-object v2, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    aget-object v1, v2, p1

    .line 371
    .local v1, "oldValue":Lcom/topologi/diffx/event/OpenElementEvent;
    iget v2, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    sub-int/2addr v2, p1

    add-int/lit8 v0, v2, -0x1

    .line 372
    .local v0, "numMoved":I
    if-lez v0, :cond_0

    .line 373
    iget-object v2, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    add-int/lit8 v3, p1, 0x1

    iget-object v4, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    invoke-static {v2, v3, v4, p1, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 374
    :cond_0
    iget-object v2, p0, Lcom/topologi/diffx/algorithm/ElementState;->openElements:[Lcom/topologi/diffx/event/OpenElementEvent;

    iget v3, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    add-int/lit8 v3, v3, -0x1

    iput v3, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    const/4 v4, 0x0

    aput-object v4, v2, v3

    .line 375
    return-object v1
.end method

.method public size()I
    .locals 1

    .prologue
    .line 91
    iget v0, p0, Lcom/topologi/diffx/algorithm/ElementState;->size:I

    return v0
.end method

.class public final Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;
.super Ljava/lang/Object;
.source "NaiveSequenceSlicer.java"


# instance fields
.field end:Lcom/topologi/diffx/sequence/EventSequence;

.field final sequence1:Lcom/topologi/diffx/sequence/EventSequence;

.field final sequence2:Lcom/topologi/diffx/sequence/EventSequence;

.field start:Lcom/topologi/diffx/sequence/EventSequence;


# direct methods
.method public constructor <init>(Lcom/topologi/diffx/sequence/EventSequence;Lcom/topologi/diffx/sequence/EventSequence;)V
    .locals 1
    .param p1, "seq0"    # Lcom/topologi/diffx/sequence/EventSequence;
    .param p2, "seq1"    # Lcom/topologi/diffx/sequence/EventSequence;

    .prologue
    const/4 v0, 0x0

    .line 161
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 146
    iput-object v0, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->start:Lcom/topologi/diffx/sequence/EventSequence;

    .line 151
    iput-object v0, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->end:Lcom/topologi/diffx/sequence/EventSequence;

    .line 162
    iput-object p1, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence1:Lcom/topologi/diffx/sequence/EventSequence;

    .line 163
    iput-object p2, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence2:Lcom/topologi/diffx/sequence/EventSequence;

    .line 164
    return-void
.end method


# virtual methods
.method public formatEnd(Lcom/topologi/diffx/format/DiffXFormatter;)V
    .locals 2
    .param p1, "formatter"    # Lcom/topologi/diffx/format/DiffXFormatter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/NullPointerException;,
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 313
    iget-object v1, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->end:Lcom/topologi/diffx/sequence/EventSequence;

    if-nez v1, :cond_0

    .line 317
    :goto_0
    return-void

    .line 314
    :cond_0
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    iget-object v1, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->end:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v1}, Lcom/topologi/diffx/sequence/EventSequence;->size()I

    move-result v1

    if-ge v0, v1, :cond_1

    .line 315
    iget-object v1, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->end:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v1, v0}, Lcom/topologi/diffx/sequence/EventSequence;->getEvent(I)Lcom/topologi/diffx/event/DiffXEvent;

    move-result-object v1

    invoke-interface {p1, v1}, Lcom/topologi/diffx/format/DiffXFormatter;->format(Lcom/topologi/diffx/event/DiffXEvent;)V

    .line 314
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 316
    :cond_1
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->end:Lcom/topologi/diffx/sequence/EventSequence;

    goto :goto_0
.end method

.method public formatStart(Lcom/topologi/diffx/format/DiffXFormatter;)V
    .locals 2
    .param p1, "formatter"    # Lcom/topologi/diffx/format/DiffXFormatter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/NullPointerException;,
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 295
    iget-object v1, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->start:Lcom/topologi/diffx/sequence/EventSequence;

    if-nez v1, :cond_0

    .line 299
    :goto_0
    return-void

    .line 296
    :cond_0
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    iget-object v1, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->start:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v1}, Lcom/topologi/diffx/sequence/EventSequence;->size()I

    move-result v1

    if-ge v0, v1, :cond_1

    .line 297
    iget-object v1, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->start:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v1, v0}, Lcom/topologi/diffx/sequence/EventSequence;->getEvent(I)Lcom/topologi/diffx/event/DiffXEvent;

    move-result-object v1

    invoke-interface {p1, v1}, Lcom/topologi/diffx/format/DiffXFormatter;->format(Lcom/topologi/diffx/event/DiffXEvent;)V

    .line 296
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 298
    :cond_1
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->start:Lcom/topologi/diffx/sequence/EventSequence;

    goto :goto_0
.end method

.method public getEnd()Lcom/topologi/diffx/sequence/EventSequence;
    .locals 1

    .prologue
    .line 334
    iget-object v0, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->end:Lcom/topologi/diffx/sequence/EventSequence;

    return-object v0
.end method

.method public getStart()Lcom/topologi/diffx/sequence/EventSequence;
    .locals 1

    .prologue
    .line 325
    iget-object v0, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->start:Lcom/topologi/diffx/sequence/EventSequence;

    return-object v0
.end method

.method public sliceEnd()I
    .locals 8
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/IllegalStateException;
        }
    .end annotation

    .prologue
    .line 208
    iget-object v6, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->end:Lcom/topologi/diffx/sequence/EventSequence;

    if-eqz v6, :cond_0

    .line 209
    new-instance v6, Ljava/lang/IllegalStateException;

    const-string v7, "The end buffer already contains a subsequence."

    invoke-direct {v6, v7}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 210
    :cond_0
    new-instance v6, Lcom/topologi/diffx/sequence/EventSequence;

    invoke-direct {v6}, Lcom/topologi/diffx/sequence/EventSequence;-><init>()V

    iput-object v6, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->end:Lcom/topologi/diffx/sequence/EventSequence;

    .line 211
    const/4 v0, 0x0

    .line 212
    .local v0, "count":I
    iget-object v6, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence1:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v6}, Lcom/topologi/diffx/sequence/EventSequence;->size()I

    move-result v6

    add-int/lit8 v2, v6, -0x1

    .line 213
    .local v2, "pos1":I
    iget-object v6, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence2:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v6}, Lcom/topologi/diffx/sequence/EventSequence;->size()I

    move-result v6

    add-int/lit8 v4, v6, -0x1

    .local v4, "pos2":I
    move v5, v4

    .end local v4    # "pos2":I
    .local v5, "pos2":I
    move v3, v2

    .line 214
    .end local v2    # "pos1":I
    .local v3, "pos1":I
    :goto_0
    if-ltz v3, :cond_1

    if-ltz v5, :cond_1

    .line 215
    iget-object v6, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence1:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v6, v3}, Lcom/topologi/diffx/sequence/EventSequence;->getEvent(I)Lcom/topologi/diffx/event/DiffXEvent;

    move-result-object v1

    .line 216
    .local v1, "e1":Lcom/topologi/diffx/event/DiffXEvent;
    iget-object v6, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence2:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v6, v5}, Lcom/topologi/diffx/sequence/EventSequence;->getEvent(I)Lcom/topologi/diffx/event/DiffXEvent;

    move-result-object v6

    invoke-interface {v1, v6}, Lcom/topologi/diffx/event/DiffXEvent;->equals(Lcom/topologi/diffx/event/DiffXEvent;)Z

    move-result v6

    if-eqz v6, :cond_1

    .line 217
    add-int/lit8 v0, v0, 0x1

    .line 218
    iget-object v6, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence1:Lcom/topologi/diffx/sequence/EventSequence;

    add-int/lit8 v2, v3, -0x1

    .end local v3    # "pos1":I
    .restart local v2    # "pos1":I
    invoke-virtual {v6, v3}, Lcom/topologi/diffx/sequence/EventSequence;->removeEvent(I)Lcom/topologi/diffx/event/DiffXEvent;

    .line 219
    iget-object v6, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence2:Lcom/topologi/diffx/sequence/EventSequence;

    add-int/lit8 v4, v5, -0x1

    .end local v5    # "pos2":I
    .restart local v4    # "pos2":I
    invoke-virtual {v6, v5}, Lcom/topologi/diffx/sequence/EventSequence;->removeEvent(I)Lcom/topologi/diffx/event/DiffXEvent;

    .line 220
    iget-object v6, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->end:Lcom/topologi/diffx/sequence/EventSequence;

    const/4 v7, 0x0

    invoke-virtual {v6, v7, v1}, Lcom/topologi/diffx/sequence/EventSequence;->addEvent(ILcom/topologi/diffx/event/DiffXEvent;)V

    move v5, v4

    .end local v4    # "pos2":I
    .restart local v5    # "pos2":I
    move v3, v2

    .line 222
    .end local v2    # "pos1":I
    .restart local v3    # "pos1":I
    goto :goto_0

    .line 223
    .end local v1    # "e1":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_1
    return v0
.end method

.method public sliceEnd(Lcom/topologi/diffx/format/DiffXFormatter;)I
    .locals 1
    .param p1, "formatter"    # Lcom/topologi/diffx/format/DiffXFormatter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/IllegalStateException;,
            Ljava/lang/NullPointerException;,
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 278
    invoke-virtual {p0}, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sliceEnd()I

    move-result v0

    .line 279
    .local v0, "count":I
    invoke-virtual {p0, p1}, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->formatEnd(Lcom/topologi/diffx/format/DiffXFormatter;)V

    .line 280
    return v0
.end method

.method public sliceStart()I
    .locals 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/IllegalStateException;
        }
    .end annotation

    .prologue
    .line 179
    iget-object v4, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->start:Lcom/topologi/diffx/sequence/EventSequence;

    if-eqz v4, :cond_0

    .line 180
    new-instance v4, Ljava/lang/IllegalStateException;

    const-string v5, "The start buffer already contains a subsequence."

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 181
    :cond_0
    new-instance v4, Lcom/topologi/diffx/sequence/EventSequence;

    invoke-direct {v4}, Lcom/topologi/diffx/sequence/EventSequence;-><init>()V

    iput-object v4, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->start:Lcom/topologi/diffx/sequence/EventSequence;

    .line 182
    const/4 v0, 0x0

    .line 183
    .local v0, "count":I
    iget-object v4, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence1:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v4}, Lcom/topologi/diffx/sequence/EventSequence;->eventIterator()Lcom/topologi/diffx/sequence/EventSequence$EventIterator;

    move-result-object v2

    .line 184
    .local v2, "i":Ljava/util/Iterator;
    iget-object v4, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence2:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v4}, Lcom/topologi/diffx/sequence/EventSequence;->eventIterator()Lcom/topologi/diffx/sequence/EventSequence$EventIterator;

    move-result-object v3

    .line 185
    .local v3, "j":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_1

    .line 186
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/topologi/diffx/event/DiffXEvent;

    .line 187
    .local v1, "e":Lcom/topologi/diffx/event/DiffXEvent;
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 188
    add-int/lit8 v0, v0, 0x1

    .line 189
    invoke-interface {v2}, Ljava/util/Iterator;->remove()V

    .line 190
    invoke-interface {v3}, Ljava/util/Iterator;->remove()V

    .line 191
    iget-object v4, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->start:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v4, v1}, Lcom/topologi/diffx/sequence/EventSequence;->addEvent(Lcom/topologi/diffx/event/DiffXEvent;)V

    goto :goto_0

    .line 194
    .end local v1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_1
    return v0
.end method

.method public sliceStart(Lcom/topologi/diffx/format/DiffXFormatter;)I
    .locals 6
    .param p1, "formatter"    # Lcom/topologi/diffx/format/DiffXFormatter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/IllegalStateException;,
            Ljava/lang/NullPointerException;,
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 244
    iget-object v4, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->start:Lcom/topologi/diffx/sequence/EventSequence;

    if-eqz v4, :cond_0

    .line 245
    new-instance v4, Ljava/lang/IllegalStateException;

    const-string v5, "The start buffer already contains a subsequence."

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 246
    :cond_0
    const/4 v0, 0x0

    .line 247
    .local v0, "count":I
    iget-object v4, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence1:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v4}, Lcom/topologi/diffx/sequence/EventSequence;->eventIterator()Lcom/topologi/diffx/sequence/EventSequence$EventIterator;

    move-result-object v2

    .line 248
    .local v2, "i":Ljava/util/Iterator;
    iget-object v4, p0, Lcom/topologi/diffx/sequence/NaiveSequenceSlicer;->sequence2:Lcom/topologi/diffx/sequence/EventSequence;

    invoke-virtual {v4}, Lcom/topologi/diffx/sequence/EventSequence;->eventIterator()Lcom/topologi/diffx/sequence/EventSequence$EventIterator;

    move-result-object v3

    .line 249
    .local v3, "j":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_1

    .line 250
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/topologi/diffx/event/DiffXEvent;

    .line 251
    .local v1, "e":Lcom/topologi/diffx/event/DiffXEvent;
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 252
    add-int/lit8 v0, v0, 0x1

    .line 253
    invoke-interface {v2}, Ljava/util/Iterator;->remove()V

    .line 254
    invoke-interface {v3}, Ljava/util/Iterator;->remove()V

    .line 255
    invoke-interface {p1, v1}, Lcom/topologi/diffx/format/DiffXFormatter;->format(Lcom/topologi/diffx/event/DiffXEvent;)V

    goto :goto_0

    .line 258
    .end local v1    # "e":Lcom/topologi/diffx/event/DiffXEvent;
    :cond_1
    return v0
.end method
